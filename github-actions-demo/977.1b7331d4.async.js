!(function(){var Ix=Object.defineProperty,Lx=Object.defineProperties;var Dx=Object.getOwnPropertyDescriptors;var V0=Object.getOwnPropertySymbols;var Ux=Object.prototype.hasOwnProperty,Nx=Object.prototype.propertyIsEnumerable;var W0=Math.pow,H0=(zi,Fn,Rn)=>Fn in zi?Ix(zi,Fn,{enumerable:!0,configurable:!0,writable:!0,value:Rn}):zi[Fn]=Rn,uu=(zi,Fn)=>{for(var Rn in Fn||(Fn={}))Ux.call(Fn,Rn)&&H0(zi,Rn,Fn[Rn]);if(V0)for(var Rn of V0(Fn))Nx.call(Fn,Rn)&&H0(zi,Rn,Fn[Rn]);return zi},X0=(zi,Fn)=>Lx(zi,Dx(Fn));var Bo=(zi,Fn,Rn)=>new Promise((Sn,Ja)=>{var bi=Ii=>{try{wr(Rn.next(Ii))}catch(Ka){Ja(Ka)}},ha=Ii=>{try{wr(Rn.throw(Ii))}catch(Ka){Ja(Ka)}},wr=Ii=>Ii.done?Sn(Ii.value):Promise.resolve(Ii.value).then(bi,ha);wr((Rn=Rn.apply(zi,Fn)).next())});(self.webpackChunkheyaqing=self.webpackChunkheyaqing||[]).push([[977],{48460:function(zi,Fn,Rn){"use strict";Rn.d(Fn,{EK:function(){return Ku},Lo:function(){return Wd},Mh:function(){return Ni},N9:function(){return Fc},S6:function(){return Fh},bV:function(){return df},cE:function(){return Ke},cU:function(){return Ac},j_:function(){return Lt},m4:function(){return hl},o8:function(){return Jl},qX:function(){return lo},y0:function(){return Qu}});let Sn=Float32Array;function Ja(c){const u=Sn;return Sn=c,u}function bi(c,u,f){const v=new Sn(3);return c&&(v[0]=c),u&&(v[1]=u),f&&(v[2]=f),v}function ha(c,u,f){return f=f||new Sn(3),f[0]=c[0]+u[0],f[1]=c[1]+u[1],f[2]=c[2]+u[2],f}function wr(c,u,f){return f=f||new Sn(3),f[0]=c[0]-u[0],f[1]=c[1]-u[1],f[2]=c[2]-u[2],f}function Ii(c,u,f,v){return v=v||new Sn(3),v[0]=c[0]+f*(u[0]-c[0]),v[1]=c[1]+f*(u[1]-c[1]),v[2]=c[2]+f*(u[2]-c[2]),v}function Ka(c,u,f,v){return v=v||new Sn(3),v[0]=c[0]+f[0]*(u[0]-c[0]),v[1]=c[1]+f[1]*(u[1]-c[1]),v[2]=c[2]+f[2]*(u[2]-c[2]),v}function vh(c,u,f){return f=f||new Sn(3),f[0]=Math.max(c[0],u[0]),f[1]=Math.max(c[1],u[1]),f[2]=Math.max(c[2],u[2]),f}function rl(c,u,f){return f=f||new Sn(3),f[0]=Math.min(c[0],u[0]),f[1]=Math.min(c[1],u[1]),f[2]=Math.min(c[2],u[2]),f}function hu(c,u,f){return f=f||new Sn(3),f[0]=c[0]*u,f[1]=c[1]*u,f[2]=c[2]*u,f}function Mi(c,u,f){return f=f||new Sn(3),f[0]=c[0]/u,f[1]=c[1]/u,f[2]=c[2]/u,f}function De(c,u,f){f=f||new Sn(3);const v=c[2]*u[0]-c[0]*u[2],E=c[0]*u[1]-c[1]*u[0];return f[0]=c[1]*u[2]-c[2]*u[1],f[1]=v,f[2]=E,f}function Jt(c,u){return c[0]*u[0]+c[1]*u[1]+c[2]*u[2]}function ur(c){return Math.sqrt(c[0]*c[0]+c[1]*c[1]+c[2]*c[2])}function Rr(c){return c[0]*c[0]+c[1]*c[1]+c[2]*c[2]}function is(c,u){const f=c[0]-u[0],v=c[1]-u[1],E=c[2]-u[2];return Math.sqrt(f*f+v*v+E*E)}function Cr(c,u){const f=c[0]-u[0],v=c[1]-u[1],E=c[2]-u[2];return f*f+v*v+E*E}function Is(c,u){u=u||new Sn(3);const f=c[0]*c[0]+c[1]*c[1]+c[2]*c[2],v=Math.sqrt(f);return v>1e-5?(u[0]=c[0]/v,u[1]=c[1]/v,u[2]=c[2]/v):(u[0]=0,u[1]=0,u[2]=0),u}function Mt(c,u){return u=u||new Sn(3),u[0]=-c[0],u[1]=-c[1],u[2]=-c[2],u}function ja(c,u){return u=u||new Sn(3),u[0]=c[0],u[1]=c[1],u[2]=c[2],u}function ln(c,u,f){return f=f||new Sn(3),f[0]=c[0]*u[0],f[1]=c[1]*u[1],f[2]=c[2]*u[2],f}function fu(c,u,f){return f=f||new Sn(3),f[0]=c[0]/u[0],f[1]=c[1]/u[1],f[2]=c[2]/u[2],f}var du=Object.freeze({__proto__:null,add:ha,copy:ja,create:bi,cross:De,distance:is,distanceSq:Cr,divide:fu,divScalar:Mi,dot:Jt,lerp:Ii,lerpV:Ka,length:ur,lengthSq:Rr,max:vh,min:rl,mulScalar:hu,multiply:ln,negate:Mt,normalize:Is,setDefaultType:Ja,subtract:wr});let hn=Float32Array;function sl(c){const u=hn;return hn=c,u}function pu(c,u){return u=u||new hn(16),u[0]=-c[0],u[1]=-c[1],u[2]=-c[2],u[3]=-c[3],u[4]=-c[4],u[5]=-c[5],u[6]=-c[6],u[7]=-c[7],u[8]=-c[8],u[9]=-c[9],u[10]=-c[10],u[11]=-c[11],u[12]=-c[12],u[13]=-c[13],u[14]=-c[14],u[15]=-c[15],u}function mu(){return new hn(16).fill(0)}function al(c,u){return u=u||new hn(16),u[0]=c[0],u[1]=c[1],u[2]=c[2],u[3]=c[3],u[4]=c[4],u[5]=c[5],u[6]=c[6],u[7]=c[7],u[8]=c[8],u[9]=c[9],u[10]=c[10],u[11]=c[11],u[12]=c[12],u[13]=c[13],u[14]=c[14],u[15]=c[15],u}function zo(c){return c=c||new hn(16),c[0]=1,c[1]=0,c[2]=0,c[3]=0,c[4]=0,c[5]=1,c[6]=0,c[7]=0,c[8]=0,c[9]=0,c[10]=1,c[11]=0,c[12]=0,c[13]=0,c[14]=0,c[15]=1,c}function Qa(c,u){if(u=u||new hn(16),u===c){let ke;return ke=c[1],c[1]=c[4],c[4]=ke,ke=c[2],c[2]=c[8],c[8]=ke,ke=c[3],c[3]=c[12],c[12]=ke,ke=c[6],c[6]=c[9],c[9]=ke,ke=c[7],c[7]=c[13],c[13]=ke,ke=c[11],c[11]=c[14],c[14]=ke,u}const f=c[0*4+0],v=c[0*4+1],E=c[0*4+2],R=c[0*4+3],L=c[1*4+0],U=c[1*4+1],G=c[1*4+2],X=c[1*4+3],j=c[2*4+0],ee=c[2*4+1],J=c[2*4+2],fe=c[2*4+3],re=c[3*4+0],de=c[3*4+1],Te=c[3*4+2],Ne=c[3*4+3];return u[0]=f,u[1]=L,u[2]=j,u[3]=re,u[4]=v,u[5]=U,u[6]=ee,u[7]=de,u[8]=E,u[9]=G,u[10]=J,u[11]=Te,u[12]=R,u[13]=X,u[14]=fe,u[15]=Ne,u}function Ls(c,u){u=u||new hn(16);const f=c[0*4+0],v=c[0*4+1],E=c[0*4+2],R=c[0*4+3],L=c[1*4+0],U=c[1*4+1],G=c[1*4+2],X=c[1*4+3],j=c[2*4+0],ee=c[2*4+1],J=c[2*4+2],fe=c[2*4+3],re=c[3*4+0],de=c[3*4+1],Te=c[3*4+2],Ne=c[3*4+3],ke=J*Ne,ot=Te*fe,mt=G*Ne,it=Te*X,gt=G*fe,Xt=J*X,on=E*Ne,pn=Te*R,yn=E*fe,wn=J*R,Kn=E*X,$n=G*R,pi=j*de,mi=re*ee,gi=L*de,_i=re*U,vi=L*ee,Xa=j*U,Bc=f*de,zc=re*v,kc=f*ee,Gc=j*v,Vc=f*U,Hc=L*v,$a=ke*U+it*ee+gt*de-(ot*U+mt*ee+Xt*de),kn=ot*v+on*ee+wn*de-(ke*v+pn*ee+yn*de),Gn=mt*v+pn*U+Kn*de-(it*v+on*U+$n*de),Wc=Xt*v+yn*U+$n*ee-(gt*v+wn*U+Kn*ee),xi=1/(f*$a+L*kn+j*Gn+re*Wc);return u[0]=xi*$a,u[1]=xi*kn,u[2]=xi*Gn,u[3]=xi*Wc,u[4]=xi*(ot*L+mt*j+Xt*re-(ke*L+it*j+gt*re)),u[5]=xi*(ke*f+pn*j+yn*re-(ot*f+on*j+wn*re)),u[6]=xi*(it*f+on*L+$n*re-(mt*f+pn*L+Kn*re)),u[7]=xi*(gt*f+wn*L+Kn*j-(Xt*f+yn*L+$n*j)),u[8]=xi*(pi*X+_i*fe+vi*Ne-(mi*X+gi*fe+Xa*Ne)),u[9]=xi*(mi*R+Bc*fe+Gc*Ne-(pi*R+zc*fe+kc*Ne)),u[10]=xi*(gi*R+zc*X+Vc*Ne-(_i*R+Bc*X+Hc*Ne)),u[11]=xi*(Xa*R+kc*X+Hc*fe-(vi*R+Gc*X+Vc*fe)),u[12]=xi*(gi*J+Xa*Te+mi*G-(vi*Te+pi*G+_i*J)),u[13]=xi*(kc*Te+pi*E+zc*J-(Bc*J+Gc*Te+mi*E)),u[14]=xi*(Bc*G+Hc*Te+_i*E-(Vc*Te+gi*E+zc*G)),u[15]=xi*(Vc*J+vi*E+Gc*G-(kc*G+Hc*J+Xa*E)),u}function gu(c,u,f){f=f||new hn(16);const v=c[0],E=c[1],R=c[2],L=c[3],U=c[4+0],G=c[4+1],X=c[4+2],j=c[4+3],ee=c[8+0],J=c[8+1],fe=c[8+2],re=c[8+3],de=c[12+0],Te=c[12+1],Ne=c[12+2],ke=c[12+3],ot=u[0],mt=u[1],it=u[2],gt=u[3],Xt=u[4+0],on=u[4+1],pn=u[4+2],yn=u[4+3],wn=u[8+0],Kn=u[8+1],$n=u[8+2],pi=u[8+3],mi=u[12+0],gi=u[12+1],_i=u[12+2],vi=u[12+3];return f[0]=v*ot+U*mt+ee*it+de*gt,f[1]=E*ot+G*mt+J*it+Te*gt,f[2]=R*ot+X*mt+fe*it+Ne*gt,f[3]=L*ot+j*mt+re*it+ke*gt,f[4]=v*Xt+U*on+ee*pn+de*yn,f[5]=E*Xt+G*on+J*pn+Te*yn,f[6]=R*Xt+X*on+fe*pn+Ne*yn,f[7]=L*Xt+j*on+re*pn+ke*yn,f[8]=v*wn+U*Kn+ee*$n+de*pi,f[9]=E*wn+G*Kn+J*$n+Te*pi,f[10]=R*wn+X*Kn+fe*$n+Ne*pi,f[11]=L*wn+j*Kn+re*$n+ke*pi,f[12]=v*mi+U*gi+ee*_i+de*vi,f[13]=E*mi+G*gi+J*_i+Te*vi,f[14]=R*mi+X*gi+fe*_i+Ne*vi,f[15]=L*mi+j*gi+re*_i+ke*vi,f}function _u(c,u,f){return f=f||zo(),c!==f&&(f[0]=c[0],f[1]=c[1],f[2]=c[2],f[3]=c[3],f[4]=c[4],f[5]=c[5],f[6]=c[6],f[7]=c[7],f[8]=c[8],f[9]=c[9],f[10]=c[10],f[11]=c[11]),f[12]=u[0],f[13]=u[1],f[14]=u[2],f[15]=1,f}function vu(c,u){return u=u||bi(),u[0]=c[12],u[1]=c[13],u[2]=c[14],u}function xu(c,u,f){f=f||bi();const v=u*4;return f[0]=c[v+0],f[1]=c[v+1],f[2]=c[v+2],f}function yu(c,u,f,v){v!==c&&(v=al(c,v));const E=f*4;return v[E+0]=u[0],v[E+1]=u[1],v[E+2]=u[2],v}function ko(c,u,f,v,E){E=E||new hn(16);const R=Math.tan(Math.PI*.5-.5*c),L=1/(f-v);return E[0]=R/u,E[1]=0,E[2]=0,E[3]=0,E[4]=0,E[5]=R,E[6]=0,E[7]=0,E[8]=0,E[9]=0,E[10]=(f+v)*L,E[11]=-1,E[12]=0,E[13]=0,E[14]=f*v*L*2,E[15]=0,E}function bu(c,u,f,v,E,R,L){return L=L||new hn(16),L[0]=2/(u-c),L[1]=0,L[2]=0,L[3]=0,L[4]=0,L[5]=2/(v-f),L[6]=0,L[7]=0,L[8]=0,L[9]=0,L[10]=2/(E-R),L[11]=0,L[12]=(u+c)/(c-u),L[13]=(v+f)/(f-v),L[14]=(R+E)/(E-R),L[15]=1,L}function Mu(c,u,f,v,E,R,L){L=L||new hn(16);const U=u-c,G=v-f,X=E-R;return L[0]=2*E/U,L[1]=0,L[2]=0,L[3]=0,L[4]=0,L[5]=2*E/G,L[6]=0,L[7]=0,L[8]=(c+u)/U,L[9]=(v+f)/G,L[10]=R/X,L[11]=-1,L[12]=0,L[13]=0,L[14]=E*R/X,L[15]=0,L}let Pr,rs,ji;function Su(c,u,f,v){return v=v||new hn(16),Pr=Pr||bi(),rs=rs||bi(),ji=ji||bi(),Is(wr(c,u,ji),ji),Is(De(f,ji,Pr),Pr),Is(De(ji,Pr,rs),rs),v[0]=Pr[0],v[1]=Pr[1],v[2]=Pr[2],v[3]=0,v[4]=rs[0],v[5]=rs[1],v[6]=rs[2],v[7]=0,v[8]=ji[0],v[9]=ji[1],v[10]=ji[2],v[11]=0,v[12]=c[0],v[13]=c[1],v[14]=c[2],v[15]=1,v}function eo(c,u){return u=u||new hn(16),u[0]=1,u[1]=0,u[2]=0,u[3]=0,u[4]=0,u[5]=1,u[6]=0,u[7]=0,u[8]=0,u[9]=0,u[10]=1,u[11]=0,u[12]=c[0],u[13]=c[1],u[14]=c[2],u[15]=1,u}function Eu(c,u,f){f=f||new hn(16);const v=u[0],E=u[1],R=u[2],L=c[0],U=c[1],G=c[2],X=c[3],j=c[1*4+0],ee=c[1*4+1],J=c[1*4+2],fe=c[1*4+3],re=c[2*4+0],de=c[2*4+1],Te=c[2*4+2],Ne=c[2*4+3],ke=c[3*4+0],ot=c[3*4+1],mt=c[3*4+2],it=c[3*4+3];return c!==f&&(f[0]=L,f[1]=U,f[2]=G,f[3]=X,f[4]=j,f[5]=ee,f[6]=J,f[7]=fe,f[8]=re,f[9]=de,f[10]=Te,f[11]=Ne),f[12]=L*v+j*E+re*R+ke,f[13]=U*v+ee*E+de*R+ot,f[14]=G*v+J*E+Te*R+mt,f[15]=X*v+fe*E+Ne*R+it,f}function Au(c,u){u=u||new hn(16);const f=Math.cos(c),v=Math.sin(c);return u[0]=1,u[1]=0,u[2]=0,u[3]=0,u[4]=0,u[5]=f,u[6]=v,u[7]=0,u[8]=0,u[9]=-v,u[10]=f,u[11]=0,u[12]=0,u[13]=0,u[14]=0,u[15]=1,u}function Go(c,u,f){f=f||new hn(16);const v=c[4],E=c[5],R=c[6],L=c[7],U=c[8],G=c[9],X=c[10],j=c[11],ee=Math.cos(u),J=Math.sin(u);return f[4]=ee*v+J*U,f[5]=ee*E+J*G,f[6]=ee*R+J*X,f[7]=ee*L+J*j,f[8]=ee*U-J*v,f[9]=ee*G-J*E,f[10]=ee*X-J*R,f[11]=ee*j-J*L,c!==f&&(f[0]=c[0],f[1]=c[1],f[2]=c[2],f[3]=c[3],f[12]=c[12],f[13]=c[13],f[14]=c[14],f[15]=c[15]),f}function Tu(c,u){u=u||new hn(16);const f=Math.cos(c),v=Math.sin(c);return u[0]=f,u[1]=0,u[2]=-v,u[3]=0,u[4]=0,u[5]=1,u[6]=0,u[7]=0,u[8]=v,u[9]=0,u[10]=f,u[11]=0,u[12]=0,u[13]=0,u[14]=0,u[15]=1,u}function to(c,u,f){f=f||new hn(16);const v=c[0*4+0],E=c[0*4+1],R=c[0*4+2],L=c[0*4+3],U=c[2*4+0],G=c[2*4+1],X=c[2*4+2],j=c[2*4+3],ee=Math.cos(u),J=Math.sin(u);return f[0]=ee*v-J*U,f[1]=ee*E-J*G,f[2]=ee*R-J*X,f[3]=ee*L-J*j,f[8]=ee*U+J*v,f[9]=ee*G+J*E,f[10]=ee*X+J*R,f[11]=ee*j+J*L,c!==f&&(f[4]=c[4],f[5]=c[5],f[6]=c[6],f[7]=c[7],f[12]=c[12],f[13]=c[13],f[14]=c[14],f[15]=c[15]),f}function wu(c,u){u=u||new hn(16);const f=Math.cos(c),v=Math.sin(c);return u[0]=f,u[1]=v,u[2]=0,u[3]=0,u[4]=-v,u[5]=f,u[6]=0,u[7]=0,u[8]=0,u[9]=0,u[10]=1,u[11]=0,u[12]=0,u[13]=0,u[14]=0,u[15]=1,u}function Vo(c,u,f){f=f||new hn(16);const v=c[0*4+0],E=c[0*4+1],R=c[0*4+2],L=c[0*4+3],U=c[1*4+0],G=c[1*4+1],X=c[1*4+2],j=c[1*4+3],ee=Math.cos(u),J=Math.sin(u);return f[0]=ee*v+J*U,f[1]=ee*E+J*G,f[2]=ee*R+J*X,f[3]=ee*L+J*j,f[4]=ee*U-J*v,f[5]=ee*G-J*E,f[6]=ee*X-J*R,f[7]=ee*j-J*L,c!==f&&(f[8]=c[8],f[9]=c[9],f[10]=c[10],f[11]=c[11],f[12]=c[12],f[13]=c[13],f[14]=c[14],f[15]=c[15]),f}function Ir(c,u,f){f=f||new hn(16);let v=c[0],E=c[1],R=c[2];const L=Math.sqrt(v*v+E*E+R*R);v/=L,E/=L,R/=L;const U=v*v,G=E*E,X=R*R,j=Math.cos(u),ee=Math.sin(u),J=1-j;return f[0]=U+(1-U)*j,f[1]=v*E*J+R*ee,f[2]=v*R*J-E*ee,f[3]=0,f[4]=v*E*J-R*ee,f[5]=G+(1-G)*j,f[6]=E*R*J+v*ee,f[7]=0,f[8]=v*R*J+E*ee,f[9]=E*R*J-v*ee,f[10]=X+(1-X)*j,f[11]=0,f[12]=0,f[13]=0,f[14]=0,f[15]=1,f}function ol(c,u,f,v){v=v||new hn(16);let E=u[0],R=u[1],L=u[2];const U=Math.sqrt(E*E+R*R+L*L);E/=U,R/=U,L/=U;const G=E*E,X=R*R,j=L*L,ee=Math.cos(f),J=Math.sin(f),fe=1-ee,re=G+(1-G)*ee,de=E*R*fe+L*J,Te=E*L*fe-R*J,Ne=E*R*fe-L*J,ke=X+(1-X)*ee,ot=R*L*fe+E*J,mt=E*L*fe+R*J,it=R*L*fe-E*J,gt=j+(1-j)*ee,Xt=c[0],on=c[1],pn=c[2],yn=c[3],wn=c[4],Kn=c[5],$n=c[6],pi=c[7],mi=c[8],gi=c[9],_i=c[10],vi=c[11];return v[0]=re*Xt+de*wn+Te*mi,v[1]=re*on+de*Kn+Te*gi,v[2]=re*pn+de*$n+Te*_i,v[3]=re*yn+de*pi+Te*vi,v[4]=Ne*Xt+ke*wn+ot*mi,v[5]=Ne*on+ke*Kn+ot*gi,v[6]=Ne*pn+ke*$n+ot*_i,v[7]=Ne*yn+ke*pi+ot*vi,v[8]=mt*Xt+it*wn+gt*mi,v[9]=mt*on+it*Kn+gt*gi,v[10]=mt*pn+it*$n+gt*_i,v[11]=mt*yn+it*pi+gt*vi,c!==v&&(v[12]=c[12],v[13]=c[13],v[14]=c[14],v[15]=c[15]),v}function cl(c,u){return u=u||new hn(16),u[0]=c[0],u[1]=0,u[2]=0,u[3]=0,u[4]=0,u[5]=c[1],u[6]=0,u[7]=0,u[8]=0,u[9]=0,u[10]=c[2],u[11]=0,u[12]=0,u[13]=0,u[14]=0,u[15]=1,u}function ll(c,u,f){f=f||new hn(16);const v=u[0],E=u[1],R=u[2];return f[0]=v*c[0*4+0],f[1]=v*c[0*4+1],f[2]=v*c[0*4+2],f[3]=v*c[0*4+3],f[4]=E*c[1*4+0],f[5]=E*c[1*4+1],f[6]=E*c[1*4+2],f[7]=E*c[1*4+3],f[8]=R*c[2*4+0],f[9]=R*c[2*4+1],f[10]=R*c[2*4+2],f[11]=R*c[2*4+3],c!==f&&(f[12]=c[12],f[13]=c[13],f[14]=c[14],f[15]=c[15]),f}function Ho(c,u,f){f=f||bi();const v=u[0],E=u[1],R=u[2],L=v*c[0*4+3]+E*c[1*4+3]+R*c[2*4+3]+c[3*4+3];return f[0]=(v*c[0*4+0]+E*c[1*4+0]+R*c[2*4+0]+c[3*4+0])/L,f[1]=(v*c[0*4+1]+E*c[1*4+1]+R*c[2*4+1]+c[3*4+1])/L,f[2]=(v*c[0*4+2]+E*c[1*4+2]+R*c[2*4+2]+c[3*4+2])/L,f}function Wo(c,u,f){f=f||bi();const v=u[0],E=u[1],R=u[2];return f[0]=v*c[0*4+0]+E*c[1*4+0]+R*c[2*4+0],f[1]=v*c[0*4+1]+E*c[1*4+1]+R*c[2*4+1],f[2]=v*c[0*4+2]+E*c[1*4+2]+R*c[2*4+2],f}function ul(c,u,f){f=f||bi();const v=Ls(c),E=u[0],R=u[1],L=u[2];return f[0]=E*v[0*4+0]+R*v[0*4+1]+L*v[0*4+2],f[1]=E*v[1*4+0]+R*v[1*4+1]+L*v[1*4+2],f[2]=E*v[2*4+0]+R*v[2*4+1]+L*v[2*4+2],f}var hl=Object.freeze({__proto__:null,axisRotate:ol,axisRotation:Ir,copy:al,create:mu,frustum:Mu,getAxis:xu,getTranslation:vu,identity:zo,inverse:Ls,lookAt:Su,multiply:gu,negate:pu,ortho:bu,perspective:ko,rotateX:Go,rotateY:to,rotateZ:Vo,rotationX:Au,rotationY:Tu,rotationZ:wu,scale:ll,scaling:cl,setAxis:yu,setDefaultType:sl,setTranslation:_u,transformDirection:Wo,transformNormal:ul,transformPoint:Ho,translate:Eu,translation:eo,transpose:Qa});const fa=5120,Ds=5121,Us=5122,ki=5123,hr=5124,Ns=5125,ss=5126,Fs=32819,no=32820,Qn=33635,da=5131,En=33640,Xo=35899,xh=35902,Os=36269,yh=34042,mn={};{const c=mn;c[fa]=Int8Array,c[Ds]=Uint8Array,c[Us]=Int16Array,c[ki]=Uint16Array,c[hr]=Int32Array,c[Ns]=Uint32Array,c[ss]=Float32Array,c[Fs]=Uint16Array,c[no]=Uint16Array,c[Qn]=Uint16Array,c[da]=Uint16Array,c[En]=Uint32Array,c[Xo]=Uint32Array,c[xh]=Uint32Array,c[Os]=Uint32Array,c[yh]=Uint32Array}function Lr(c){if(c instanceof Int8Array)return fa;if(c instanceof Uint8Array||c instanceof Uint8ClampedArray)return Ds;if(c instanceof Int16Array)return Us;if(c instanceof Uint16Array)return ki;if(c instanceof Int32Array)return hr;if(c instanceof Uint32Array)return Ns;if(c instanceof Float32Array)return ss;throw new Error("unsupported typed array type")}function fl(c){if(c===Int8Array)return fa;if(c===Uint8Array||c===Uint8ClampedArray)return Ds;if(c===Int16Array)return Us;if(c===Uint16Array)return ki;if(c===Int32Array)return hr;if(c===Uint32Array)return Ns;if(c===Float32Array)return ss;throw new Error("unsupported typed array type")}function Gi(c){const u=mn[c];if(!u)throw new Error("unknown gl type");return u}const pa=typeof SharedArrayBuffer!="undefined"?function(u){return u&&u.buffer&&(u.buffer instanceof ArrayBuffer||u.buffer instanceof SharedArrayBuffer)}:function(u){return u&&u.buffer&&u.buffer instanceof ArrayBuffer};var as=Object.freeze({__proto__:null,getGLTypeForTypedArray:Lr,getGLTypeForTypedArrayType:fl,getTypedArrayTypeForGLType:Gi,isArrayBuffer:pa});function Ru(c,u,f){c.forEach(function(v){const E=u[v];E!==void 0&&(f[v]=E)})}function $o(c,u){Object.keys(u).forEach(function(f){u.hasOwnProperty(f)&&c.hasOwnProperty(f)&&(u[f]=c[f])})}function io(...c){console.error(...c)}function ro(...c){console.warn(...c)}const Qi=new Map;function ei(c,u){if(!c||typeof c!="object")return!1;let f=Qi.get(u);f||(f=new WeakMap,Qi.set(u,f));let v=f.get(c);if(v===void 0){const E=Object.prototype.toString.call(c);v=E.substring(8,E.length-1)===u,f.set(c,v)}return v}function ma(c,u){return typeof WebGLBuffer!="undefined"&&ei(u,"WebGLBuffer")}function qo(c,u){return typeof WebGLRenderbuffer!="undefined"&&ei(u,"WebGLRenderbuffer")}function Dr(c,u){return typeof WebGLTexture!="undefined"&&ei(u,"WebGLTexture")}function os(c,u){return typeof WebGLSampler!="undefined"&&ei(u,"WebGLSampler")}const Yo=35044,gn=34962,dl=34963,Cu=34660,Ur=5120,Bs=5121,Zo=5122,pl=5123,ml=5124,gl=5125,Jo=5126,cs={attribPrefix:""};function Ko(c){cs.attribPrefix=c}function so(c){$o(c,cs)}function ao(c,u,f,v,E){c.bindBuffer(u,f),c.bufferData(u,v,E||Yo)}function ga(c,u,f,v){if(ma(c,u))return u;f=f||gn;const E=c.createBuffer();return ao(c,f,E,u,v),E}function jo(c){return c==="indices"}function _l(c){return c===Int8Array||c===Uint8Array}function ls(c){return c.length?c:c.data}const us=/coord|texture/i,oo=/color|colour/i;function hs(c,u){let f;if(us.test(c)?f=2:oo.test(c)?f=4:f=3,u%f>0)throw new Error(`Can not guess numComponents for attribute '${c}'. Tried ${f} but ${u} values is not evenly divisible by ${f}. You should specify it.`);return f}function _a(c,u,f){return c.numComponents||c.size||hs(u,f||ls(c).length)}function zs(c,u){if(pa(c))return c;if(pa(c.data))return c.data;Array.isArray(c)&&(c={data:c});let f=c.type?co(c.type):void 0;return f||(jo(u)?f=Uint16Array:f=Float32Array),new f(c.data)}function vl(c){return typeof c=="number"?c:c?fl(c):Jo}function co(c){return typeof c=="number"?Gi(c):c||Float32Array}function xl(c,u){return{buffer:u.buffer,numValues:2*3*4,type:vl(u.type),arrayType:co(u.type)}}function Qo(c,u){const f=u.data||u,v=co(u.type),E=f*v.BYTES_PER_ELEMENT,R=c.createBuffer();return c.bindBuffer(gn,R),c.bufferData(gn,E,u.drawType||Yo),{buffer:R,numValues:f,type:fl(v),arrayType:v}}function ec(c,u,f){const v=zs(u,f);return{arrayType:v.constructor,buffer:ga(c,v,void 0,u.drawType),type:Lr(v),numValues:0}}function tc(c,u){const f={};return Object.keys(u).forEach(function(v){if(!jo(v)){const E=u[v],R=E.attrib||E.name||E.attribName||cs.attribPrefix+v;if(E.value){if(!Array.isArray(E.value)&&!pa(E.value))throw new Error("array.value is not array or typedarray");f[R]={value:E.value}}else{let L;E.buffer&&E.buffer instanceof WebGLBuffer?L=xl:typeof E=="number"||typeof E.data=="number"?L=Qo:L=ec;const{buffer:U,type:G,numValues:X,arrayType:j}=L(c,E,v),ee=E.normalize!==void 0?E.normalize:_l(j),J=_a(E,v,X);f[R]={buffer:U,numComponents:J,type:G,normalize:ee,stride:E.stride||0,offset:E.offset||0,divisor:E.divisor===void 0?void 0:E.divisor,drawType:E.drawType}}}}),c.bindBuffer(gn,null),f}function yl(c,u,f,v){f=zs(f),v!==void 0?(c.bindBuffer(gn,u.buffer),c.bufferSubData(gn,v,f)):ao(c,gn,u.buffer,f,u.drawType)}function bl(c,u){return u===Ur||u===Bs?1:u===Zo||u===pl?2:u===ml||u===gl||u===Jo?4:0}const fs=["position","positions","a_position"];function nc(c){let u,f;for(f=0;f<fs.length&&(u=fs[f],!(u in c));++f);f===fs.length&&(u=Object.keys(c)[0]);const v=c[u],E=ls(v).length;if(E===void 0)return 1;const R=_a(v,u),L=E/R;if(E%R>0)throw new Error(`numComponents ${R} not correct for length ${E}`);return L}function ic(c,u){let f,v;for(v=0;v<fs.length&&(f=fs[v],!(f in u||(f=cs.attribPrefix+f,f in u)));++v);v===fs.length&&(f=Object.keys(u)[0]);const E=u[f];if(!E.buffer)return 1;c.bindBuffer(gn,E.buffer);const R=c.getBufferParameter(gn,Cu);c.bindBuffer(gn,null);const L=bl(c,E.type),U=R/L,G=E.numComponents||E.size,X=U/G;if(X%1!==0)throw new Error(`numComponents ${G} not correct for length ${length}`);return X}function lo(c,u,f){const v=tc(c,u),E=Object.assign({},f||{});E.attribs=Object.assign({},f?f.attribs:{},v);const R=u.indices;if(R){const L=zs(R,"indices");E.indices=ga(c,L,dl),E.numElements=L.length,E.elementType=Lr(L)}else E.numElements||(E.numElements=ic(c,E.attribs));return E}function uo(c,u,f){const v=f==="indices"?dl:gn,E=zs(u,f);return ga(c,E,v)}function rc(c,u){const f={};return Object.keys(u).forEach(function(v){f[v]=uo(c,u[v],v)}),u.indices?(f.numElements=u.indices.length,f.elementType=Lr(zs(u.indices))):f.numElements=nc(u),f}var Pu=Object.freeze({__proto__:null,createAttribsFromArrays:tc,createBuffersFromArrays:rc,createBufferFromArray:uo,createBufferFromTypedArray:ga,createBufferInfoFromArrays:lo,setAttribInfoBufferFromArray:yl,setAttributePrefix:Ko,setAttributeDefaults_:so,getNumComponents_:_a,getArray_:ls});const ds=ls,Ml=_a;function sc(c,u){let f=0;return c.push=function(){for(let v=0;v<arguments.length;++v){const E=arguments[v];if(E instanceof Array||pa(E))for(let R=0;R<E.length;++R)c[f++]=E[R];else c[f++]=E}},c.reset=function(v){f=v||0},c.numComponents=u,Object.defineProperty(c,"numElements",{get:function(){return this.length/this.numComponents|0}}),c}function Ut(c,u,f){const v=f||Float32Array;return sc(new v(c*u),c)}function Iu(c){return c!=="indices"}function Lu(c){const u=c.indices,f={},v=u.length;function E(R){const L=c[R],U=L.numComponents,G=Ut(U,v,L.constructor);for(let X=0;X<v;++X){const ee=u[X]*U;for(let J=0;J<U;++J)G.push(L[ee+J])}f[R]=G}return Object.keys(c).filter(Iu).forEach(E),f}function Du(c){if(c.indices)throw new Error("can not flatten normals of indexed vertices. deindex them first");const u=c.normal,f=u.length;for(let v=0;v<f;v+=9){const E=u[v+0],R=u[v+1],L=u[v+2],U=u[v+3],G=u[v+4],X=u[v+5],j=u[v+6],ee=u[v+7],J=u[v+8];let fe=E+U+j,re=R+G+ee,de=L+X+J;const Te=Math.sqrt(fe*fe+re*re+de*de);fe/=Te,re/=Te,de/=Te,u[v+0]=fe,u[v+1]=re,u[v+2]=de,u[v+3]=fe,u[v+4]=re,u[v+5]=de,u[v+6]=fe,u[v+7]=re,u[v+8]=de}return c}function ks(c,u,f){const v=c.length,E=new Float32Array(3);for(let R=0;R<v;R+=3)f(u,[c[R],c[R+1],c[R+2]],E),c[R]=E[0],c[R+1]=E[1],c[R+2]=E[2]}function ho(c,u,f){f=f||bi();const v=u[0],E=u[1],R=u[2];return f[0]=v*c[0*4+0]+E*c[0*4+1]+R*c[0*4+2],f[1]=v*c[1*4+0]+E*c[1*4+1]+R*c[1*4+2],f[2]=v*c[2*4+0]+E*c[2*4+1]+R*c[2*4+2],f}function va(c,u){return ks(c,u,Wo),c}function Nr(c,u){return ks(c,Ls(u),ho),c}function ps(c,u){return ks(c,u,Ho),c}function Fr(c,u){return Object.keys(c).forEach(function(f){const v=c[f];f.indexOf("pos")>=0?ps(v,u):f.indexOf("tan")>=0||f.indexOf("binorm")>=0?va(v,u):f.indexOf("norm")>=0&&Nr(v,u)}),c}function er(c,u,f){return c=c||2,u=u||0,f=f||0,c*=.5,{position:{numComponents:2,data:[u+-1*c,f+-1*c,u+1*c,f+-1*c,u+-1*c,f+1*c,u+1*c,f+1*c]},normal:[0,0,1,0,0,1,0,0,1,0,0,1],texcoord:[0,0,1,0,0,1,1,1],indices:[0,1,2,2,1,3]}}function fo(c,u,f,v,E){c=c||1,u=u||1,f=f||1,v=v||1,E=E||zo();const R=(f+1)*(v+1),L=Ut(3,R),U=Ut(3,R),G=Ut(2,R);for(let J=0;J<=v;J++)for(let fe=0;fe<=f;fe++){const re=fe/f,de=J/v;L.push(c*re-c*.5,0,u*de-u*.5),U.push(0,1,0),G.push(re,de)}const X=f+1,j=Ut(3,f*v*2,Uint16Array);for(let J=0;J<v;J++)for(let fe=0;fe<f;fe++)j.push((J+0)*X+fe,(J+1)*X+fe,(J+0)*X+fe+1),j.push((J+1)*X+fe,(J+1)*X+fe+1,(J+0)*X+fe+1);return Fr({position:L,normal:U,texcoord:G,indices:j},E)}function ac(c,u,f,v,E,R,L){if(u<=0||f<=0)throw new Error("subdivisionAxis and subdivisionHeight must be > 0");v=v||0,E=E||Math.PI,R=R||0,L=L||Math.PI*2;const U=E-v,G=L-R,X=(u+1)*(f+1),j=Ut(3,X),ee=Ut(3,X),J=Ut(2,X);for(let de=0;de<=f;de++)for(let Te=0;Te<=u;Te++){const Ne=Te/u,ke=de/f,ot=G*Ne+R,mt=U*ke+v,it=Math.sin(ot),gt=Math.cos(ot),Xt=Math.sin(mt),on=Math.cos(mt),pn=gt*Xt,yn=on,wn=it*Xt;j.push(c*pn,c*yn,c*wn),ee.push(pn,yn,wn),J.push(1-Ne,ke)}const fe=u+1,re=Ut(3,u*f*2,Uint16Array);for(let de=0;de<u;de++)for(let Te=0;Te<f;Te++)re.push((Te+0)*fe+de,(Te+0)*fe+de+1,(Te+1)*fe+de),re.push((Te+1)*fe+de,(Te+0)*fe+de+1,(Te+1)*fe+de+1);return{position:j,normal:ee,texcoord:J,indices:re}}const bh=[[3,7,5,1],[6,2,0,4],[6,7,3,2],[0,1,5,4],[7,6,4,5],[2,3,1,0]];function po(c){c=c||1;const u=c/2,f=[[-u,-u,-u],[+u,-u,-u],[-u,+u,-u],[+u,+u,-u],[-u,-u,+u],[+u,-u,+u],[-u,+u,+u],[+u,+u,+u]],v=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],E=[[1,0],[0,0],[0,1],[1,1]],R=6*4,L=Ut(3,R),U=Ut(3,R),G=Ut(2,R),X=Ut(3,6*2,Uint16Array);for(let j=0;j<6;++j){const ee=bh[j];for(let fe=0;fe<4;++fe){const re=f[ee[fe]],de=v[j],Te=E[fe];L.push(re),U.push(de),G.push(Te)}const J=4*j;X.push(J+0,J+1,J+2),X.push(J+0,J+2,J+3)}return{position:L,normal:U,texcoord:G,indices:X}}function Gs(c,u,f,v,E,R,L){if(v<3)throw new Error("radialSubdivisions must be 3 or greater");if(E<1)throw new Error("verticalSubdivisions must be 1 or greater");const U=R===void 0?!0:R,G=L===void 0?!0:L,X=(U?2:0)+(G?2:0),j=(v+1)*(E+1+X),ee=Ut(3,j),J=Ut(3,j),fe=Ut(2,j),re=Ut(3,v*(E+X/2)*2,Uint16Array),de=v+1,Te=Math.atan2(c-u,f),Ne=Math.cos(Te),ke=Math.sin(Te),ot=U?-2:0,mt=E+(G?2:0);for(let it=ot;it<=mt;++it){let gt=it/E,Xt=f*gt,on;it<0?(Xt=0,gt=1,on=c):it>E?(Xt=f,gt=1,on=u):on=c+(u-c)*(it/E),(it===-2||it===E+2)&&(on=0,gt=0),Xt-=f/2;for(let pn=0;pn<de;++pn){const yn=Math.sin(pn*Math.PI*2/v),wn=Math.cos(pn*Math.PI*2/v);ee.push(yn*on,Xt,wn*on),it<0?J.push(0,-1,0):it>E?J.push(0,1,0):on===0?J.push(0,0,0):J.push(yn*Ne,ke,wn*Ne),fe.push(pn/v,1-gt)}}for(let it=0;it<E+X;++it)if(!(it===1&&U||it===E+X-2&&G))for(let gt=0;gt<v;++gt)re.push(de*(it+0)+0+gt,de*(it+0)+1+gt,de*(it+1)+1+gt),re.push(de*(it+0)+0+gt,de*(it+1)+1+gt,de*(it+1)+0+gt);return{position:ee,normal:J,texcoord:fe,indices:re}}function Sl(c,u){u=u||[];const f=[];for(let v=0;v<c.length;v+=4){const E=c[v],R=c.slice(v+1,v+4);R.push.apply(R,u);for(let L=0;L<E;++L)f.push.apply(f,R)}return f}function tr(){const c=[0,0,0,0,150,0,30,0,0,0,150,0,30,150,0,30,0,0,30,0,0,30,30,0,100,0,0,30,30,0,100,30,0,100,0,0,30,60,0,30,90,0,67,60,0,30,90,0,67,90,0,67,60,0,0,0,30,30,0,30,0,150,30,0,150,30,30,0,30,30,150,30,30,0,30,100,0,30,30,30,30,30,30,30,100,0,30,100,30,30,30,60,30,67,60,30,30,90,30,30,90,30,67,60,30,67,90,30,0,0,0,100,0,0,100,0,30,0,0,0,100,0,30,0,0,30,100,0,0,100,30,0,100,30,30,100,0,0,100,30,30,100,0,30,30,30,0,30,30,30,100,30,30,30,30,0,100,30,30,100,30,0,30,30,0,30,60,30,30,30,30,30,30,0,30,60,0,30,60,30,30,60,0,67,60,30,30,60,30,30,60,0,67,60,0,67,60,30,67,60,0,67,90,30,67,60,30,67,60,0,67,90,0,67,90,30,30,90,0,30,90,30,67,90,30,30,90,0,67,90,30,67,90,0,30,90,0,30,150,30,30,90,30,30,90,0,30,150,0,30,150,30,0,150,0,0,150,30,30,150,30,0,150,0,30,150,30,30,150,0,0,0,0,0,0,30,0,150,30,0,0,0,0,150,30,0,150,0],u=[.22,.19,.22,.79,.34,.19,.22,.79,.34,.79,.34,.19,.34,.19,.34,.31,.62,.19,.34,.31,.62,.31,.62,.19,.34,.43,.34,.55,.49,.43,.34,.55,.49,.55,.49,.43,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,1,1,0],f=Sl([18,0,0,1,18,0,0,-1,6,0,1,0,6,1,0,0,6,0,-1,0,6,1,0,0,6,0,1,0,6,1,0,0,6,0,-1,0,6,1,0,0,6,0,-1,0,6,-1,0,0]),v=Sl([18,200,70,120,18,80,70,200,6,70,200,210,6,200,200,70,6,210,100,70,6,210,160,70,6,70,180,210,6,100,70,210,6,76,210,100,6,140,210,80,6,90,130,110,6,160,160,220],[255]),E=c.length/3,R={position:Ut(3,E),texcoord:Ut(2,E),normal:Ut(3,E),color:Ut(4,E,Uint8Array),indices:Ut(3,E/3,Uint16Array)};R.position.push(c),R.texcoord.push(u),R.normal.push(f),R.color.push(v);for(let L=0;L<E;++L)R.indices.push(L);return R}function fr(c,u,f,v,E,R,L){if(E<=0)throw new Error("subdivisionDown must be > 0");R=R||0,L=L||1;const U=2,G=L-R,X=(E+1)*2*(2+U),j=Ut(3,X),ee=Ut(3,X),J=Ut(2,X);function fe(ke,ot,mt){return ke+(ot-ke)*mt}function re(ke,ot,mt,it,gt,Xt){for(let on=0;on<=E;on++){const pn=ot/(U-1),yn=on/E,wn=(pn-.5)*2,Kn=(R+yn*G)*Math.PI,$n=Math.sin(Kn),pi=Math.cos(Kn),mi=fe(c,ke,$n),gi=wn*v,_i=pi*c,vi=$n*mi;j.push(gi,_i,vi);const Xa=ha(ln([0,$n,pi],mt),it);ee.push(Xa),J.push(pn*gt+Xt,yn)}}for(let ke=0;ke<U;ke++){const ot=(ke/(U-1)-.5)*2;re(u,ke,[1,1,1],[0,0,0],1,0),re(u,ke,[0,0,0],[ot,0,0],0,0),re(f,ke,[1,1,1],[0,0,0],1,0),re(f,ke,[0,0,0],[ot,0,0],0,1)}const de=Ut(3,E*2*(2+U),Uint16Array);function Te(ke,ot){for(let mt=0;mt<E;++mt)de.push(ke+mt+0,ke+mt+1,ot+mt+0),de.push(ke+mt+1,ot+mt+1,ot+mt+0)}const Ne=E+1;return Te(Ne*0,Ne*4),Te(Ne*5,Ne*7),Te(Ne*6,Ne*2),Te(Ne*3,Ne*1),{position:j,normal:ee,texcoord:J,indices:de}}function nr(c,u,f,v,E,R){return Gs(c,c,u,f,v,E,R)}function Si(c,u,f,v,E,R){if(f<3)throw new Error("radialSubdivisions must be 3 or greater");if(v<3)throw new Error("verticalSubdivisions must be 3 or greater");E=E||0,R=R||Math.PI*2;const L=R-E,U=f+1,G=v+1,X=U*G,j=Ut(3,X),ee=Ut(3,X),J=Ut(2,X),fe=Ut(3,f*v*2,Uint16Array);for(let re=0;re<G;++re){const de=re/v,Te=de*Math.PI*2,Ne=Math.sin(Te),ke=c+Ne*u,ot=Math.cos(Te),mt=ot*u;for(let it=0;it<U;++it){const gt=it/f,Xt=E+gt*L,on=Math.sin(Xt),pn=Math.cos(Xt),yn=on*ke,wn=pn*ke,Kn=on*Ne,$n=pn*Ne;j.push(yn,mt,wn),ee.push(Kn,ot,$n),J.push(gt,1-de)}}for(let re=0;re<v;++re)for(let de=0;de<f;++de){const Te=1+de,Ne=1+re;fe.push(U*re+de,U*Ne+de,U*re+Te),fe.push(U*Ne+de,U*Ne+Te,U*re+Te)}return{position:j,normal:ee,texcoord:J,indices:fe}}function ir(c,u,f,v,E){if(u<3)throw new Error("divisions must be at least 3");f=f||1,E=E||1,v=v||0;const R=(u+1)*(f+1),L=Ut(3,R),U=Ut(3,R),G=Ut(2,R),X=Ut(3,f*u*2,Uint16Array);let j=0;const ee=c-v,J=u+1;for(let fe=0;fe<=f;++fe){const re=v+ee*Math.pow(fe/f,E);for(let de=0;de<=u;++de){const Te=2*Math.PI*de/u,Ne=re*Math.cos(Te),ke=re*Math.sin(Te);if(L.push(Ne,0,ke),U.push(0,1,0),G.push(1-de/u,fe/f),fe>0&&de!==u){const ot=j+(de+1),mt=j+de,it=j+de-J,gt=j+(de+1)-J;X.push(ot,mt,it),X.push(ot,it,gt)}}j+=u+1}return{position:L,normal:U,texcoord:G,indices:X}}function xa(c){return Math.random()*c|0}function Vs(c,u){u=u||{};const f=c.position.numElements,v=Ut(4,f,Uint8Array),E=u.rand||function(R,L){return L<3?xa(256):255};if(c.color=v,c.indices)for(let R=0;R<f;++R)v.push(E(R,0),E(R,1),E(R,2),E(R,3));else{const R=u.vertsPerColor||3,L=f/R;for(let U=0;U<L;++U){const G=[E(U,0),E(U,1),E(U,2),E(U,3)];for(let X=0;X<R;++X)v.push(G)}}return c}function ai(c){return function(u){const f=c.apply(this,Array.prototype.slice.call(arguments,1));return rc(u,f)}}function Ht(c){return function(u){const f=c.apply(null,Array.prototype.slice.call(arguments,1));return lo(u,f)}}const mo=["numComponents","size","type","normalize","stride","offset","attrib","name","attribName"];function Hs(c,u,f,v){v=v||0;const E=c.length;for(let R=0;R<E;++R)u[f+R]=c[R]+v}function El(c,u){const f=ds(c),v=new f.constructor(u);let E=v;return f.numComponents&&f.numElements&&sc(v,f.numComponents),c.data&&(E={data:v},Ru(mo,c,E)),E}function ms(c){const u={};let f;for(let U=0;U<c.length;++U){const G=c[U];Object.keys(G).forEach(function(X){u[X]||(u[X]=[]),!f&&X!=="indices"&&(f=X);const j=G[X],ee=Ml(j,X),fe=ds(j).length/ee;u[X].push(fe)})}function v(U){let G=0,X;for(let j=0;j<c.length;++j){const J=c[j][U],fe=ds(J);G+=fe.length,(!X||J.data)&&(X=J)}return{length:G,spec:X}}function E(U,G,X){let j=0,ee=0;for(let J=0;J<c.length;++J){const re=c[J][U],de=ds(re);U==="indices"?(Hs(de,X,ee,j),j+=G[J]):Hs(de,X,ee),ee+=de.length}}const R=u[f],L={};return Object.keys(u).forEach(function(U){const G=v(U),X=El(G.spec,G.length);E(U,R,ds(X)),L[U]=X}),L}function Mh(c){const u={};return Object.keys(c).forEach(function(f){const v=c[f],E=ds(v),R=El(v,E.length);Hs(E,ds(R),0),u[f]=R}),u}const Sh=Ht(tr),Eh=ai(tr),Ah=Ht(po),Th=ai(po),wh=Ht(fo),Rh=ai(fo),Uu=Ht(ac),Ch=ai(ac),Ph=Ht(Gs),Ih=ai(Gs),Lh=Ht(er),Dh=ai(er),oc=Ht(fr),Al=ai(fr),Nu=Ht(nr),Fu=ai(nr),Tl=Ht(Si),wl=ai(Si),Ou=Ht(ir),Bu=ai(ir);var Fh=Object.freeze({__proto__:null,create3DFBufferInfo:Sh,create3DFBuffers:Eh,create3DFVertices:tr,createAugmentedTypedArray:Ut,createCubeBufferInfo:Ah,createCubeBuffers:Th,createCubeVertices:po,createPlaneBufferInfo:wh,createPlaneBuffers:Rh,createPlaneVertices:fo,createSphereBufferInfo:Uu,createSphereBuffers:Ch,createSphereVertices:ac,createTruncatedConeBufferInfo:Ph,createTruncatedConeBuffers:Ih,createTruncatedConeVertices:Gs,createXYQuadBufferInfo:Lh,createXYQuadBuffers:Dh,createXYQuadVertices:er,createCresentBufferInfo:oc,createCresentBuffers:Al,createCresentVertices:fr,createCrescentBufferInfo:oc,createCrescentBuffers:Al,createCrescentVertices:fr,createCylinderBufferInfo:Nu,createCylinderBuffers:Fu,createCylinderVertices:nr,createTorusBufferInfo:Tl,createTorusBuffers:wl,createTorusVertices:Si,createDiscBufferInfo:Ou,createDiscBuffers:Bu,createDiscVertices:ir,deindexVertices:Lu,flattenNormals:Du,makeRandomVertexColors:Vs,reorientDirections:va,reorientNormals:Nr,reorientPositions:ps,reorientVertices:Fr,concatVertices:ms,duplicateVertices:Mh});function ya(c){return!!c.texStorage2D}function Oh(c){return!c.texStorage2D}const go=function(){const c={},u={};function f(v){const E=v.constructor.name;if(!c[E]){for(const R in v)if(typeof v[R]=="number"){const L=u[v[R]];u[v[R]]=L?`${L} | ${R}`:R}c[E]=!0}}return function(E,R){return f(E),u[R]||(typeof R=="number"?`0x${R.toString(16)}`:R)}}();var ad=Object.freeze({__proto__:null,glEnumToString:go,isWebGL1:Oh,isWebGL2:ya});const dr={textureColor:new Uint8Array([128,192,255,255]),textureOptions:{},crossOrigin:void 0},Ws=pa,_o=function(){let c;return function(){return c=c||(typeof document!="undefined"&&document.createElement?document.createElement("canvas").getContext("2d"):null),c}}(),Xs=6406,ti=6407,Wt=6408,gs=6409,Or=6410,_n=6402,vo=34041,oi=33071,$s=9728,Ei=9729,en=3553,Vi=34067,Br=32879,zr=35866,kr=34069,zu=34070,ku=34071,Rl=34072,Cl=34073,Gu=34074,lc=10241,uc=10240,qs=10242,ba=10243,hc=32882,xo=33082,Pl=33083,_s=33084,Vu=33085,Zn=34892,yt=34893,Il=3317,ve=3314,bt=32878,yo=3316,Ma=3315,Sa=32877,Gr=37443,Ea=37441,Hu=37440,bo=33321,Ll=36756,Dl=33325,Ul=33326,Aa=33330,fc=33329,sn=33338,pr=33337,dc=33340,Ys=33339,pc=33323,mc=36757,Zs=33327,gc=33328,Wu=33336,Hn=33335,nn=33332,Xu=33331,vs=33334,_c=33333,Bh=32849,Nl=35905,zh=36194,Ai=36758,B=35898,vc=35901,Fl=34843,ci=34837,mr=36221,Hi=36239,Mo=36215,xs=36233,ys=36209,Js=36227,gr=32856,Vr=35907,bs=36759,Wi=32855,So=32854,Eo=32857,Li=34842,xc=34836,$u=36220,Ta=36238,yc=36975,ni=36214,Xi=36232,ii=36226,wa=36208,_r=33189,Ks=33190,Ra=36012,Ao=36013,Ca=35056,st=5120,Kt=5121,li=5122,Ms=5123,Pa=5124,ui=5125,Dn=5126,hi=32819,Ia=32820,Hr=33635,vn=5131,Ss=36193,bc=33640,Mc=35899,$i=35902,vr=36269,La=34042,xr=33319,Es=33320,Da=6403,Wr=36244,Xr=36248,yr=36249,Ol={};{const c=Ol;c[Xs]={numColorComponents:1},c[gs]={numColorComponents:1},c[Or]={numColorComponents:2},c[ti]={numColorComponents:3},c[Wt]={numColorComponents:4},c[Da]={numColorComponents:1},c[Wr]={numColorComponents:1},c[xr]={numColorComponents:2},c[Es]={numColorComponents:2},c[ti]={numColorComponents:3},c[Xr]={numColorComponents:3},c[Wt]={numColorComponents:4},c[yr]={numColorComponents:4},c[_n]={numColorComponents:1},c[vo]={numColorComponents:2}}let Sc;function js(c){if(!Sc){const u={};u[Xs]={textureFormat:Xs,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[1,2,2,4],type:[Kt,vn,Ss,Dn]},u[gs]={textureFormat:gs,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[1,2,2,4],type:[Kt,vn,Ss,Dn]},u[Or]={textureFormat:Or,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[2,4,4,8],type:[Kt,vn,Ss,Dn]},u[ti]={textureFormat:ti,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[3,6,6,12,2],type:[Kt,vn,Ss,Dn,Hr]},u[Wt]={textureFormat:Wt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[4,8,8,16,2,2],type:[Kt,vn,Ss,Dn,hi,Ia]},u[_n]={textureFormat:_n,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[2,4],type:[ui,Ms]},u[bo]={textureFormat:Da,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[1],type:[Kt]},u[Ll]={textureFormat:Da,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[1],type:[st]},u[Dl]={textureFormat:Da,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[4,2],type:[Dn,vn]},u[Ul]={textureFormat:Da,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[4],type:[Dn]},u[Aa]={textureFormat:Wr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[1],type:[Kt]},u[fc]={textureFormat:Wr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[1],type:[st]},u[nn]={textureFormat:Wr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[2],type:[Ms]},u[Xu]={textureFormat:Wr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[2],type:[li]},u[vs]={textureFormat:Wr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[ui]},u[_c]={textureFormat:Wr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[Pa]},u[pc]={textureFormat:xr,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[2],type:[Kt]},u[mc]={textureFormat:xr,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[2],type:[st]},u[Zs]={textureFormat:xr,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[8,4],type:[Dn,vn]},u[gc]={textureFormat:xr,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[8],type:[Dn]},u[Wu]={textureFormat:Es,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[2],type:[Kt]},u[Hn]={textureFormat:Es,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[2],type:[st]},u[sn]={textureFormat:Es,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[Ms]},u[pr]={textureFormat:Es,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[li]},u[dc]={textureFormat:Es,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[8],type:[ui]},u[Ys]={textureFormat:Es,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[8],type:[Pa]},u[Bh]={textureFormat:ti,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[3],type:[Kt]},u[Nl]={textureFormat:ti,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[3],type:[Kt]},u[zh]={textureFormat:ti,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[3,2],type:[Kt,Hr]},u[Ai]={textureFormat:ti,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[3],type:[st]},u[B]={textureFormat:ti,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[12,6,4],type:[Dn,vn,Mc]},u[vc]={textureFormat:ti,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[12,6,4],type:[Dn,vn,$i]},u[Fl]={textureFormat:ti,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[12,6],type:[Dn,vn]},u[ci]={textureFormat:ti,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[12],type:[Dn]},u[mr]={textureFormat:Xr,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[3],type:[Kt]},u[Hi]={textureFormat:Xr,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[3],type:[st]},u[Mo]={textureFormat:Xr,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[6],type:[Ms]},u[xs]={textureFormat:Xr,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[6],type:[li]},u[ys]={textureFormat:Xr,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[12],type:[ui]},u[Js]={textureFormat:Xr,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[12],type:[Pa]},u[gr]={textureFormat:Wt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[4],type:[Kt]},u[Vr]={textureFormat:Wt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[4],type:[Kt]},u[bs]={textureFormat:Wt,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[4],type:[st]},u[Wi]={textureFormat:Wt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[4,2,4],type:[Kt,Ia,bc]},u[So]={textureFormat:Wt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[4,2],type:[Kt,hi]},u[Eo]={textureFormat:Wt,colorRenderable:!0,textureFilterable:!0,bytesPerElement:[4],type:[bc]},u[Li]={textureFormat:Wt,colorRenderable:!1,textureFilterable:!0,bytesPerElement:[16,8],type:[Dn,vn]},u[xc]={textureFormat:Wt,colorRenderable:!1,textureFilterable:!1,bytesPerElement:[16],type:[Dn]},u[$u]={textureFormat:yr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[Kt]},u[Ta]={textureFormat:yr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[st]},u[yc]={textureFormat:yr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[bc]},u[ni]={textureFormat:yr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[8],type:[Ms]},u[Xi]={textureFormat:yr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[8],type:[li]},u[ii]={textureFormat:yr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[16],type:[Pa]},u[wa]={textureFormat:yr,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[16],type:[ui]},u[_r]={textureFormat:_n,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[2,4],type:[Ms,ui]},u[Ks]={textureFormat:_n,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[ui]},u[Ra]={textureFormat:_n,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[Dn]},u[Ca]={textureFormat:vo,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[La]},u[Ao]={textureFormat:vo,colorRenderable:!0,textureFilterable:!1,bytesPerElement:[4],type:[vr]},Object.keys(u).forEach(function(f){const v=u[f];v.bytesPerElementMap={},v.bytesPerElement.forEach(function(E,R){const L=v.type[R];v.bytesPerElementMap[L]=E})}),Sc=u}return Sc[c]}function To(c,u){const f=js(c);if(!f)throw"unknown internal format";const v=f.bytesPerElementMap[u];if(v===void 0)throw"unknown internal format";return v}function fn(c){const u=js(c);if(!u)throw"unknown internal format";return{format:u.textureFormat,type:u.type[0]}}function Di(c){return(c&c-1)===0}function rr(c,u,f,v){if(!ya(c))return Di(u)&&Di(f);const E=js(v);if(!E)throw"unknown internal format";return E.colorRenderable&&E.textureFilterable}function wo(c){const u=js(c);if(!u)throw"unknown internal format";return u.textureFilterable}function qi(c){const u=Ol[c];if(!u)throw"unknown format: "+c;return u.numColorComponents}function As(c,u,f){return Ws(u)?Lr(u):f||Kt}function Yi(c,u,f,v,E){if(E%1!==0)throw"can't guess dimensions";if(!f&&!v){const R=Math.sqrt(E/(u===Vi?6:1));R%1===0?(f=R,v=R):(f=E,v=1)}else if(v){if(!f&&(f=E/v,f%1))throw"can't guess dimensions"}else if(v=E/f,v%1)throw"can't guess dimensions";return{width:f,height:v}}function Ua(c){dr.textureColor=new Uint8Array([c[0]*255,c[1]*255,c[2]*255,c[3]*255])}function Qs(c){$o(c,dr),c.textureColor&&Ua(c.textureColor)}function br(c,u){u.colorspaceConversion!==void 0&&c.pixelStorei(Gr,u.colorspaceConversion),u.premultiplyAlpha!==void 0&&c.pixelStorei(Ea,u.premultiplyAlpha),u.flipY!==void 0&&c.pixelStorei(Hu,u.flipY)}function Na(c){c.pixelStorei(Il,4),ya(c)&&(c.pixelStorei(ve,0),c.pixelStorei(bt,0),c.pixelStorei(yo,0),c.pixelStorei(Ma,0),c.pixelStorei(Sa,0))}function Ti(c,u,f,v){v.minMag&&(f.call(c,u,lc,v.minMag),f.call(c,u,uc,v.minMag)),v.min&&f.call(c,u,lc,v.min),v.mag&&f.call(c,u,uc,v.mag),v.wrap&&(f.call(c,u,qs,v.wrap),f.call(c,u,ba,v.wrap),(u===Br||os(c,u))&&f.call(c,u,hc,v.wrap)),v.wrapR&&f.call(c,u,hc,v.wrapR),v.wrapS&&f.call(c,u,qs,v.wrapS),v.wrapT&&f.call(c,u,ba,v.wrapT),v.minLod!==void 0&&f.call(c,u,xo,v.minLod),v.maxLod!==void 0&&f.call(c,u,Pl,v.maxLod),v.baseLevel!==void 0&&f.call(c,u,_s,v.baseLevel),v.maxLevel!==void 0&&f.call(c,u,Vu,v.maxLevel),v.compareFunc!==void 0&&f.call(c,u,yt,v.compareFunc),v.compareMode!==void 0&&f.call(c,u,Zn,v.compareMode)}function Ro(c,u,f){const v=f.target||en;c.bindTexture(v,u),Ti(c,v,c.texParameteri,f)}function Mr(c,u,f){Ti(c,u,c.samplerParameteri,f)}function ri(c,u){const f=c.createSampler();return Mr(c,f,u),f}function $r(c,u){const f={};return Object.keys(u).forEach(function(v){f[v]=ri(c,u[v])}),f}function $e(c){return c=c||dr.textureColor,Ws(c)?c:new Uint8Array([c[0]*255,c[1]*255,c[2]*255,c[3]*255])}function An(c,u,f,v,E,R){f=f||dr.textureOptions,R=R||Wt;const L=f.target||en;if(v=v||f.width,E=E||f.height,c.bindTexture(L,u),rr(c,v,E,R))c.generateMipmap(L);else{const U=wo(R)?Ei:$s;c.texParameteri(L,lc,U),c.texParameteri(L,uc,U),c.texParameteri(L,qs,oi),c.texParameteri(L,ba,oi)}}function Fa(c){return c.auto===!0||c.auto===void 0&&c.level===void 0}function Ui(c,u){return u=u||{},u.cubeFaceOrder||[kr,zu,ku,Rl,Cl,Gu]}function Sr(c,u){const v=Ui(c,u).map(function(E,R){return{face:E,ndx:R}});return v.sort(function(E,R){return E.face-R.face}),v}function Ni(c,u,f,v){v=v||dr.textureOptions;const E=v.target||en,R=v.level||0;let L=f.width,U=f.height;const G=v.internalFormat||v.format||Wt,X=fn(G),j=v.format||X.format,ee=v.type||X.type;if(br(c,v),c.bindTexture(E,u),E===Vi){const J=f.width,fe=f.height;let re,de;if(J/6===fe)re=fe,de=[0,0,1,0,2,0,3,0,4,0,5,0];else if(fe/6===J)re=J,de=[0,0,0,1,0,2,0,3,0,4,0,5];else if(J/3===fe/2)re=J/3,de=[0,0,1,0,2,0,0,1,1,1,2,1];else if(J/2===fe/3)re=J/2,de=[0,0,1,0,0,1,1,1,0,2,1,2];else throw"can't figure out cube map from element: "+(f.src?f.src:f.nodeName);const Te=_o();Te?(Te.canvas.width=re,Te.canvas.height=re,L=re,U=re,Sr(c,v).forEach(function(Ne){const ke=de[Ne.ndx*2+0]*re,ot=de[Ne.ndx*2+1]*re;Te.drawImage(f,ke,ot,re,re,0,0,re,re),c.texImage2D(Ne.face,R,G,j,ee,Te.canvas)}),Te.canvas.width=1,Te.canvas.height=1):typeof createImageBitmap!="undefined"&&(L=re,U=re,Sr(c,v).forEach(function(Ne){const ke=de[Ne.ndx*2+0]*re,ot=de[Ne.ndx*2+1]*re;c.texImage2D(Ne.face,R,G,re,re,0,j,ee,null),createImageBitmap(f,ke,ot,re,re,{premultiplyAlpha:"none",colorSpaceConversion:"none"}).then(function(mt){br(c,v),c.bindTexture(E,u),c.texImage2D(Ne.face,R,G,j,ee,mt),Fa(v)&&An(c,u,v,L,U,G)})}))}else if(E===Br||E===zr){const J=Math.min(f.width,f.height),fe=Math.max(f.width,f.height),re=fe/J;if(re%1!==0)throw"can not compute 3D dimensions of element";const de=f.width===fe?1:0,Te=f.height===fe?1:0;c.pixelStorei(Il,1),c.pixelStorei(ve,f.width),c.pixelStorei(bt,0),c.pixelStorei(Sa,0),c.texImage3D(E,R,G,J,J,J,0,j,ee,null);for(let Ne=0;Ne<re;++Ne){const ke=Ne*J*de,ot=Ne*J*Te;c.pixelStorei(yo,ke),c.pixelStorei(Ma,ot),c.texSubImage3D(E,R,0,0,Ne,J,J,1,j,ee,f)}Na(c)}else c.texImage2D(E,R,G,j,ee,f);Fa(v)&&An(c,u,v,L,U,G),Ro(c,u,v)}function ea(){}function fi(c){if(typeof document!="undefined"){const u=document.createElement("a");return u.href=c,u.hostname===location.hostname&&u.port===location.port&&u.protocol===location.protocol}else{const u=new URL(location.href).origin;return new URL(c,location.href).origin===u}}function Ts(c,u){return u===void 0&&!fi(c)?"anonymous":u}function sr(c,u,f){f=f||ea;let v;if(u=u!==void 0?u:dr.crossOrigin,u=Ts(c,u),typeof Image!="undefined"){v=new Image,u!==void 0&&(v.crossOrigin=u);const E=function(){v.removeEventListener("error",R),v.removeEventListener("load",L),v=null},R=function(){const G="couldn't load image: "+c;io(G),f(G,v),E()},L=function(){f(null,v),E()};return v.addEventListener("error",R),v.addEventListener("load",L),v.src=c,v}else if(typeof ImageBitmap!="undefined"){let E,R;const L=function(){f(E,R)},U={};u&&(U.mode="cors"),fetch(c,U).then(function(G){if(!G.ok)throw G;return G.blob()}).then(function(G){return createImageBitmap(G,{premultiplyAlpha:"none",colorSpaceConversion:"none"})}).then(function(G){R=G,setTimeout(L)}).catch(function(G){E=G,setTimeout(L)}),v=null}return v}function an(c){return typeof ImageBitmap!="undefined"&&c instanceof ImageBitmap||typeof ImageData!="undefined"&&c instanceof ImageData||typeof HTMLElement!="undefined"&&c instanceof HTMLElement}function wi(c,u,f){return an(c)?(setTimeout(function(){f(null,c)}),c):sr(c,u,f)}function xn(c,u,f){f=f||dr.textureOptions;const v=f.target||en;if(c.bindTexture(v,u),f.color===!1)return;const E=$e(f.color);if(v===Vi)for(let R=0;R<6;++R)c.texImage2D(kr+R,0,Wt,1,1,0,Wt,Kt,E);else v===Br||v===zr?c.texImage3D(v,0,Wt,1,1,1,0,Wt,Kt,E):c.texImage2D(v,0,Wt,1,1,0,Wt,Kt,E)}function qu(c,u,f,v){return v=v||ea,f=f||dr.textureOptions,xn(c,u,f),f=Object.assign({},f),wi(f.src,f.crossOrigin,function(R,L){R?v(R,u,L):(Ni(c,u,L,f),v(null,u,L))})}function kh(c,u,f,v){v=v||ea;const E=f.src;if(E.length!==6)throw"there must be 6 urls for a cubemap";const R=f.level||0,L=f.internalFormat||f.format||Wt,U=fn(L),G=f.format||U.format,X=f.type||Kt,j=f.target||en;if(j!==Vi)throw"target must be TEXTURE_CUBE_MAP";xn(c,u,f),f=Object.assign({},f);let ee=6;const J=[],fe=Ui(c,f);let re;function de(Te){return function(Ne,ke){--ee,Ne?J.push(Ne):ke.width!==ke.height?J.push("cubemap face img is not a square: "+ke.src):(br(c,f),c.bindTexture(j,u),ee===5?Ui().forEach(function(ot){c.texImage2D(ot,R,L,G,X,ke)}):c.texImage2D(Te,R,L,G,X,ke),Fa(f)&&c.generateMipmap(j)),ee===0&&v(J.length?J:void 0,u,re)}}re=E.map(function(Te,Ne){return wi(Te,f.crossOrigin,de(fe[Ne]))})}function Gh(c,u,f,v){v=v||ea;const E=f.src,R=f.internalFormat||f.format||Wt,L=fn(R),U=f.format||L.format,G=f.type||Kt,X=f.target||zr;if(X!==Br&&X!==zr)throw"target must be TEXTURE_3D or TEXTURE_2D_ARRAY";xn(c,u,f),f=Object.assign({},f);let j=E.length;const ee=[];let J;const fe=f.level||0;let re=f.width,de=f.height;const Te=E.length;let Ne=!0;function ke(ot){return function(mt,it){if(--j,mt)ee.push(mt);else{if(br(c,f),c.bindTexture(X,u),Ne){Ne=!1,re=f.width||it.width,de=f.height||it.height,c.texImage3D(X,fe,R,re,de,Te,0,U,G,null);for(let gt=0;gt<Te;++gt)c.texSubImage3D(X,fe,0,0,gt,re,de,1,U,G,it)}else{let gt=it,Xt;(it.width!==re||it.height!==de)&&(Xt=_o(),gt=Xt.canvas,Xt.canvas.width=re,Xt.canvas.height=de,Xt.drawImage(it,0,0,re,de)),c.texSubImage3D(X,fe,0,0,ot,re,de,1,U,G,gt),Xt&&gt===Xt.canvas&&(Xt.canvas.width=0,Xt.canvas.height=0)}Fa(f)&&c.generateMipmap(X)}j===0&&v(ee.length?ee:void 0,u,J)}}J=E.map(function(ot,mt){return wi(ot,f.crossOrigin,ke(mt))})}function Yu(c,u,f,v){v=v||dr.textureOptions;const E=v.target||en;c.bindTexture(E,u);let R=v.width,L=v.height,U=v.depth;const G=v.level||0,X=v.internalFormat||v.format||Wt,j=fn(X),ee=v.format||j.format,J=v.type||As(c,f,j.type);if(Ws(f))f instanceof Uint8ClampedArray&&(f=new Uint8Array(f.buffer));else{const Te=Gi(J);f=new Te(f)}const fe=To(X,J),re=f.byteLength/fe;if(re%1)throw"length wrong size for format: "+go(c,ee);let de;if(E===Br||E===zr)if(!R&&!L&&!U){const Te=Math.cbrt(re);if(Te%1!==0)throw"can't guess cube size of array of numElements: "+re;R=Te,L=Te,U=Te}else R&&(!L||!U)?(de=Yi(c,E,L,U,re/R),L=de.width,U=de.height):L&&(!R||!U)?(de=Yi(c,E,R,U,re/L),R=de.width,U=de.height):(de=Yi(c,E,R,L,re/U),R=de.width,L=de.height);else de=Yi(c,E,R,L,re),R=de.width,L=de.height;if(Na(c),c.pixelStorei(Il,v.unpackAlignment||1),br(c,v),E===Vi){const Te=fe/f.BYTES_PER_ELEMENT,Ne=re/6*Te;Sr(c,v).forEach(ke=>{const ot=Ne*ke.ndx,mt=f.subarray(ot,ot+Ne);c.texImage2D(ke.face,G,X,R,L,0,ee,J,mt)})}else E===Br||E===zr?c.texImage3D(E,G,X,R,L,U,0,ee,J,f):c.texImage2D(E,G,X,R,L,0,ee,J,f);return{width:R,height:L,depth:U,type:J}}function Ec(c,u,f){const v=f.target||en;c.bindTexture(v,u);const E=f.level||0,R=f.internalFormat||f.format||Wt,L=fn(R),U=f.format||L.format,G=f.type||L.type;if(br(c,f),v===Vi)for(let X=0;X<6;++X)c.texImage2D(kr+X,E,R,f.width,f.height,0,U,G,null);else v===Br||v===zr?c.texImage3D(v,E,R,f.width,f.height,f.depth,0,U,G,null):c.texImage2D(v,E,R,f.width,f.height,0,U,G,null)}function Ac(c,u,f){f=f||ea,u=u||dr.textureOptions;const v=c.createTexture(),E=u.target||en;let R=u.width||1,L=u.height||1;const U=u.internalFormat||Wt;c.bindTexture(E,v),E===Vi&&(c.texParameteri(E,qs,oi),c.texParameteri(E,ba,oi));let G=u.src;if(G)if(typeof G=="function"&&(G=G(c,u)),typeof G=="string")qu(c,v,u,f);else if(Ws(G)||Array.isArray(G)&&(typeof G[0]=="number"||Array.isArray(G[0])||Ws(G[0]))){const X=Yu(c,v,G,u);R=X.width,L=X.height}else Array.isArray(G)&&(typeof G[0]=="string"||an(G[0]))?E===Vi?kh(c,v,u,f):Gh(c,v,u,f):(Ni(c,v,G,u),R=G.width,L=G.height);else Ec(c,v,u);return Fa(u)&&An(c,v,u,R,L,U),Ro(c,v,u),v}function Tc(c,u,f,v,E,R){v=v||f.width,E=E||f.height,R=R||f.depth;const L=f.target||en;c.bindTexture(L,u);const U=f.level||0,G=f.internalFormat||f.format||Wt,X=fn(G),j=f.format||X.format;let ee;const J=f.src;if(J&&(Ws(J)||Array.isArray(J)&&typeof J[0]=="number")?ee=f.type||As(c,J,X.type):ee=f.type||X.type,L===Vi)for(let fe=0;fe<6;++fe)c.texImage2D(kr+fe,U,G,v,E,0,j,ee,null);else L===Br||L===zr?c.texImage3D(L,U,G,v,E,R,0,j,ee,null):c.texImage2D(L,U,G,v,E,0,j,ee,null)}function Vh(c){return typeof c=="string"||Array.isArray(c)&&typeof c[0]=="string"}function Ke(c,u,f){f=f||ea;let v=0;const E=[],R={},L={};function U(){v===0&&setTimeout(function(){f(E.length?E:void 0,R,L)},0)}return Object.keys(u).forEach(function(G){const X=u[G];let j;Vh(X.src)&&(j=function(ee,J,fe){L[G]=fe,--v,ee&&E.push(ee),U()},++v),R[G]=Ac(c,X,j)}),U(),R}var Hh=Object.freeze({__proto__:null,setTextureDefaults_:Qs,createSampler:ri,createSamplers:$r,setSamplerParameters:Mr,createTexture:Ac,setEmptyTexture:Ec,setTextureFromArray:Yu,loadTextureFromUrl:qu,setTextureFromElement:Ni,setTextureFilteringForSize:An,setTextureParameters:Ro,setDefaultTextureColor:Ua,createTextures:Ke,resizeTexture:Tc,canGenerateMipmap:rr,canFilter:wo,getNumComponentsForFormat:qi,getBytesPerElementForInternalFormat:To,getFormatAndTypeForInternalFormat:fn});const di=io,wc=ro;function qr(c){return typeof document!="undefined"&&document.getElementById?document.getElementById(c):null}const Jn=33984,ta=35048,Tn=34962,Pt=34963,Co=35345,Yr=35982,Oa=36386,Bl=35713,Zr=35714,ws=35632,na=35633,Rc=35981,Ba=35718,za=35721,ka=35971,Ga=35382,Cc=35396,zl=35398,Pc=35392,Fi=35395,dn=5126,Wn=35664,kl=35665,ia=35666,ar=5124,or=35667,Xn=35668,Gl=35669,Po=35670,Vl=35671,Ic=35672,Hl=35673,cr=35674,Io=35675,lr=35676,Lc=35678,Wl=35680,Cn=35679,Jr=35682,Rs=35685,Xl=35686,Lo=35687,On=35688,Dc=35689,b=35690,M=36289,w=36292,N=36293,$=5125,Y=36294,H=36295,Q=36296,te=36298,pe=36299,Ee=36300,He=36303,we=36306,Ze=36307,Ye=36308,At=36311,Et=3553,Nt=34067,$t=32879,Pn=35866,tt={};function si(c,u){return tt[u].bindPoint}function zt(c,u){return function(f){c.uniform1f(u,f)}}function Re(c,u){return function(f){c.uniform1fv(u,f)}}function ut(c,u){return function(f){c.uniform2fv(u,f)}}function It(c,u){return function(f){c.uniform3fv(u,f)}}function Tt(c,u){return function(f){c.uniform4fv(u,f)}}function Bn(c,u){return function(f){c.uniform1i(u,f)}}function un(c,u){return function(f){c.uniform1iv(u,f)}}function kt(c,u){return function(f){c.uniform2iv(u,f)}}function jt(c,u){return function(f){c.uniform3iv(u,f)}}function Qt(c,u){return function(f){c.uniform4iv(u,f)}}function rn(c,u){return function(f){c.uniform1ui(u,f)}}function Zi(c,u){return function(f){c.uniform1uiv(u,f)}}function Kr(c,u){return function(f){c.uniform2uiv(u,f)}}function jr(c,u){return function(f){c.uniform3uiv(u,f)}}function ra(c,u){return function(f){c.uniform4uiv(u,f)}}function sa(c,u){return function(f){c.uniformMatrix2fv(u,!1,f)}}function Er(c,u){return function(f){c.uniformMatrix3fv(u,!1,f)}}function Cs(c,u){return function(f){c.uniformMatrix4fv(u,!1,f)}}function Va(c,u){return function(f){c.uniformMatrix2x3fv(u,!1,f)}}function Ps(c,u){return function(f){c.uniformMatrix3x2fv(u,!1,f)}}function Uc(c,u){return function(f){c.uniformMatrix2x4fv(u,!1,f)}}function Nc(c,u){return function(f){c.uniformMatrix4x2fv(u,!1,f)}}function od(c,u){return function(f){c.uniformMatrix3x4fv(u,!1,f)}}function cd(c,u){return function(f){c.uniformMatrix4x3fv(u,!1,f)}}function Ri(c,u,f,v){const E=si(c,u);return ya(c)?function(R){let L,U;!R||Dr(c,R)?(L=R,U=null):(L=R.texture,U=R.sampler),c.uniform1i(v,f),c.activeTexture(Jn+f),c.bindTexture(E,L),c.bindSampler(f,U)}:function(R){c.uniform1i(v,f),c.activeTexture(Jn+f),c.bindTexture(E,R)}}function Ci(c,u,f,v,E){const R=si(c,u),L=new Int32Array(E);for(let U=0;U<E;++U)L[U]=f+U;return ya(c)?function(U){c.uniform1iv(v,L),U.forEach(function(G,X){c.activeTexture(Jn+L[X]);let j,ee;!G||Dr(c,G)?(j=G,ee=null):(j=G.texture,ee=G.sampler),c.bindSampler(f,ee),c.bindTexture(R,j)})}:function(U){c.uniform1iv(v,L),U.forEach(function(G,X){c.activeTexture(Jn+L[X]),c.bindTexture(R,G)})}}tt[dn]={Type:Float32Array,size:4,setter:zt,arraySetter:Re},tt[Wn]={Type:Float32Array,size:8,setter:ut,cols:2},tt[kl]={Type:Float32Array,size:12,setter:It,cols:3},tt[ia]={Type:Float32Array,size:16,setter:Tt,cols:4},tt[ar]={Type:Int32Array,size:4,setter:Bn,arraySetter:un},tt[or]={Type:Int32Array,size:8,setter:kt,cols:2},tt[Xn]={Type:Int32Array,size:12,setter:jt,cols:3},tt[Gl]={Type:Int32Array,size:16,setter:Qt,cols:4},tt[$]={Type:Uint32Array,size:4,setter:rn,arraySetter:Zi},tt[Y]={Type:Uint32Array,size:8,setter:Kr,cols:2},tt[H]={Type:Uint32Array,size:12,setter:jr,cols:3},tt[Q]={Type:Uint32Array,size:16,setter:ra,cols:4},tt[Po]={Type:Uint32Array,size:4,setter:Bn,arraySetter:un},tt[Vl]={Type:Uint32Array,size:8,setter:kt,cols:2},tt[Ic]={Type:Uint32Array,size:12,setter:jt,cols:3},tt[Hl]={Type:Uint32Array,size:16,setter:Qt,cols:4},tt[cr]={Type:Float32Array,size:32,setter:sa,rows:2,cols:2},tt[Io]={Type:Float32Array,size:48,setter:Er,rows:3,cols:3},tt[lr]={Type:Float32Array,size:64,setter:Cs,rows:4,cols:4},tt[Rs]={Type:Float32Array,size:32,setter:Va,rows:2,cols:3},tt[Xl]={Type:Float32Array,size:32,setter:Uc,rows:2,cols:4},tt[Lo]={Type:Float32Array,size:48,setter:Ps,rows:3,cols:2},tt[On]={Type:Float32Array,size:48,setter:od,rows:3,cols:4},tt[Dc]={Type:Float32Array,size:64,setter:Nc,rows:4,cols:2},tt[b]={Type:Float32Array,size:64,setter:cd,rows:4,cols:3},tt[Lc]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:Et},tt[Wl]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:Nt},tt[Cn]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:$t},tt[Jr]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:Et},tt[M]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:Pn},tt[w]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:Pn},tt[N]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:Nt},tt[te]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:Et},tt[pe]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:$t},tt[Ee]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:Nt},tt[He]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:Pn},tt[we]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:Et},tt[Ze]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:$t},tt[Ye]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:Nt},tt[At]={Type:null,size:0,setter:Ri,arraySetter:Ci,bindPoint:Pn};function $l(c,u){return function(f){if(f.value)switch(c.disableVertexAttribArray(u),f.value.length){case 4:c.vertexAttrib4fv(u,f.value);break;case 3:c.vertexAttrib3fv(u,f.value);break;case 2:c.vertexAttrib2fv(u,f.value);break;case 1:c.vertexAttrib1fv(u,f.value);break;default:throw new Error("the length of a float constant value must be between 1 and 4!")}else c.bindBuffer(Tn,f.buffer),c.enableVertexAttribArray(u),c.vertexAttribPointer(u,f.numComponents||f.size,f.type||dn,f.normalize||!1,f.stride||0,f.offset||0),c.vertexAttribDivisor&&c.vertexAttribDivisor(u,f.divisor||0)}}function aa(c,u){return function(f){if(f.value)if(c.disableVertexAttribArray(u),f.value.length===4)c.vertexAttrib4iv(u,f.value);else throw new Error("The length of an integer constant value must be 4!");else c.bindBuffer(Tn,f.buffer),c.enableVertexAttribArray(u),c.vertexAttribIPointer(u,f.numComponents||f.size,f.type||ar,f.stride||0,f.offset||0),c.vertexAttribDivisor&&c.vertexAttribDivisor(u,f.divisor||0)}}function ql(c,u){return function(f){if(f.value)if(c.disableVertexAttribArray(u),f.value.length===4)c.vertexAttrib4uiv(u,f.value);else throw new Error("The length of an unsigned integer constant value must be 4!");else c.bindBuffer(Tn,f.buffer),c.enableVertexAttribArray(u),c.vertexAttribIPointer(u,f.numComponents||f.size,f.type||$,f.stride||0,f.offset||0),c.vertexAttribDivisor&&c.vertexAttribDivisor(u,f.divisor||0)}}function Zu(c,u,f){const v=f.size,E=f.count;return function(R){c.bindBuffer(Tn,R.buffer);const L=R.size||R.numComponents||v,U=L/E,G=R.type||dn,j=tt[G].size*L,ee=R.normalize||!1,J=R.offset||0,fe=j/E;for(let re=0;re<E;++re)c.enableVertexAttribArray(u+re),c.vertexAttribPointer(u+re,U,G,ee,j,J+fe*re),c.vertexAttribDivisor&&c.vertexAttribDivisor(u+re,R.divisor||0)}}const zn={};zn[dn]={size:4,setter:$l},zn[Wn]={size:8,setter:$l},zn[kl]={size:12,setter:$l},zn[ia]={size:16,setter:$l},zn[ar]={size:4,setter:aa},zn[or]={size:8,setter:aa},zn[Xn]={size:12,setter:aa},zn[Gl]={size:16,setter:aa},zn[$]={size:4,setter:ql},zn[Y]={size:8,setter:ql},zn[H]={size:12,setter:ql},zn[Q]={size:16,setter:ql},zn[Po]={size:4,setter:aa},zn[Vl]={size:8,setter:aa},zn[Ic]={size:12,setter:aa},zn[Hl]={size:16,setter:aa},zn[cr]={size:4,setter:Zu,count:2},zn[Io]={size:9,setter:Zu,count:3},zn[lr]={size:16,setter:Zu,count:4};const ld=/ERROR:\s*\d+:(\d+)/gi;function ud(c,u="",f=0){const v=[...u.matchAll(ld)],E=new Map(v.map((R,L)=>{const U=parseInt(R[1]),G=v[L+1],X=G?G.index:u.length,j=u.substring(R.index,X);return[U-1,j]}));return c.split(`
`).map((R,L)=>{const U=E.get(L);return`${L+1+f}: ${R}${U?`

^^^ ${U}`:""}`}).join(`
`)}const Wh=/^[ \t]*\n/;function Xh(c){let u=0;return Wh.test(c)&&(u=1,c=c.replace(Wh,"")),{lineOffset:u,shaderSource:c}}function $h(c,u){return c.errorCallback(u),c.callback&&setTimeout(()=>{c.callback(`${u}
${c.errors.join(`
`)}`)}),null}function hd(c,u,f,v){if(v=v||di,!c.getShaderParameter(f,Bl)){const R=c.getShaderInfoLog(f),{lineOffset:L,shaderSource:U}=Xh(c.getShaderSource(f)),G=`${ud(U,R,L)}
Error compiling ${go(c,u)}: ${R}`;return v(G),G}return""}function Do(c,u,f){let v,E,R;if(typeof u=="function"&&(f=u,u=void 0),typeof c=="function")f=c,c=void 0;else if(c&&!Array.isArray(c)){const X=c;f=X.errorCallback,c=X.attribLocations,v=X.transformFeedbackVaryings,E=X.transformFeedbackMode,R=X.callback}const L=f||di,U=[],G={errorCallback(X,...j){U.push(X),L(X,...j)},transformFeedbackVaryings:v,transformFeedbackMode:E,callback:R,errors:U};{let X={};Array.isArray(c)?c.forEach(function(j,ee){X[j]=u?u[ee]:ee}):X=c||{},G.attribLocations=X}return G}const fd=["VERTEX_SHADER","FRAGMENT_SHADER"];function dd(c,u){if(u.indexOf("frag")>=0)return ws;if(u.indexOf("vert")>=0)return na}function pd(c,u,f){const v=c.getAttachedShaders(u);for(const E of v)f.has(E)&&c.deleteShader(E);c.deleteProgram(u)}const md=(c=0)=>new Promise(u=>setTimeout(u,c));function qh(c,u,f){const v=c.createProgram(),{attribLocations:E,transformFeedbackVaryings:R,transformFeedbackMode:L}=Do(f);for(let U=0;U<u.length;++U){let G=u[U];if(typeof G=="string"){const X=qr(G),j=X?X.text:G;let ee=c[fd[U]];X&&X.type&&(ee=dd(c,X.type)||ee),G=c.createShader(ee),c.shaderSource(G,Xh(j).shaderSource),c.compileShader(G),c.attachShader(v,G)}}Object.entries(E).forEach(([U,G])=>c.bindAttribLocation(v,G,U));{let U=R;U&&(U.attribs&&(U=U.attribs),Array.isArray(U)||(U=Object.keys(U)),c.transformFeedbackVaryings(v,U,L||Rc))}return c.linkProgram(v),v}function Yl(c,u,f,v,E){const R=Do(f,v,E),L=new Set(u),U=qh(c,u,R);function G(X,j){const ee=Zh(X,j,R.errorCallback);return ee&&pd(X,j,L),ee}if(R.callback){Yh(c,U).then(()=>{const X=G(c,U);R.callback(X,X?void 0:U)});return}return G(c,U)?void 0:U}function Zl(c){return function(u,f,...v){return new Promise((E,R)=>{const L=Do(...v);L.callback=(U,G)=>{U?R(U):E(G)},c(u,f,L)})}}const gd=Zl(Yl),_d=Zl(Ku);function Yh(c,u){return Bo(this,null,function*(){const f=c.getExtension("KHR_parallel_shader_compile"),v=f?(R,L)=>R.getProgramParameter(L,f.COMPLETION_STATUS_KHR):()=>!0;let E=0;do yield md(E),E=1e3/60;while(!v(c,u))})}function vd(c,u){return Bo(this,null,function*(){for(const f of Object.values(u))yield Yh(c,f)})}function Zh(c,u,f){if(f=f||di,!c.getProgramParameter(u,Zr)){const E=c.getProgramInfoLog(u);f(`Error in program linking: ${E}`);const L=c.getAttachedShaders(u).map(U=>hd(c,c.getShaderParameter(U,c.SHADER_TYPE),U,f));return`${E}
${L.filter(U=>U).join(`
`)}`}}function xd(c,u,f,v,E){const R=Do(f,v,E),L=[];for(const U of u){const G=qr(U);if(!G)return $h(R,`unknown script element: ${U}`);L.push(G.text)}return Yl(c,L,R)}function Jh(c,u,f,v,E){return Yl(c,u,f,v,E)}function Kh(c){const u=c.name;return u.startsWith("gl_")||u.startsWith("webgl_")}const yd=/(\.|\[|]|\w+)/g,bd=c=>c>="0"&&c<="9";function jh(c,u,f,v){const E=c.split(yd).filter(U=>U!=="");let R=0,L="";for(;;){const U=E[R++];L+=U;const G=bd(U[0]),X=G?parseInt(U):U;if(G&&(L+=E[R++]),R===E.length){f[X]=u;break}else{const ee=E[R++],J=ee==="[",fe=f[X]||(J?[]:{});f[X]=fe,f=fe,v[L]=v[L]||function(re){return function(de){of(re,de)}}(fe),L+=ee}}}function Qh(c,u){let f=0;function v(U,G,X){const j=G.name.endsWith("[0]"),ee=G.type,J=tt[ee];if(!J)throw new Error(`unknown type: 0x${ee.toString(16)}`);let fe;if(J.bindPoint){const re=f;f+=G.size,j?fe=J.arraySetter(c,ee,re,X,G.size):fe=J.setter(c,ee,re,X,G.size)}else J.arraySetter&&j?fe=J.arraySetter(c,X):fe=J.setter(c,X);return fe.location=X,fe}const E={},R={},L=c.getProgramParameter(u,Ba);for(let U=0;U<L;++U){const G=c.getActiveUniform(u,U);if(Kh(G))continue;let X=G.name;X.endsWith("[0]")&&(X=X.substr(0,X.length-3));const j=c.getUniformLocation(u,G.name);if(j){const ee=v(u,G,j);E[X]=ee,jh(X,ee,R,E)}}return E}function ef(c,u){const f={},v=c.getProgramParameter(u,ka);for(let E=0;E<v;++E){const R=c.getTransformFeedbackVarying(u,E);f[R.name]={index:E,type:R.type,size:R.size}}return f}function tf(c,u,f){u.transformFeedbackInfo&&(u=u.transformFeedbackInfo),f.attribs&&(f=f.attribs);for(const v in f){const E=u[v];if(E){const R=f[v];R.offset?c.bindBufferRange(Yr,E.index,R.buffer,R.offset,R.size):c.bindBufferBase(Yr,E.index,R.buffer)}}}function Md(c,u,f){const v=c.createTransformFeedback();return c.bindTransformFeedback(Oa,v),c.useProgram(u.program),tf(c,u,f),c.bindTransformFeedback(Oa,null),v}function nf(c,u){const f=c.getProgramParameter(u,Ba),v=[],E=[];for(let U=0;U<f;++U){E.push(U),v.push({});const G=c.getActiveUniform(u,U);v[U].name=G.name}[["UNIFORM_TYPE","type"],["UNIFORM_SIZE","size"],["UNIFORM_BLOCK_INDEX","blockNdx"],["UNIFORM_OFFSET","offset"]].forEach(function(U){const G=U[0],X=U[1];c.getActiveUniforms(u,E,c[G]).forEach(function(j,ee){v[ee][X]=j})});const R={},L=c.getProgramParameter(u,Ga);for(let U=0;U<L;++U){const G=c.getActiveUniformBlockName(u,U),X={index:c.getUniformBlockIndex(u,G),usedByVertexShader:c.getActiveUniformBlockParameter(u,U,Cc),usedByFragmentShader:c.getActiveUniformBlockParameter(u,U,zl),size:c.getActiveUniformBlockParameter(u,U,Pc),uniformIndices:c.getActiveUniformBlockParameter(u,U,Fi)};X.used=X.usedByVertexShader||X.usedByFragmentShader,R[G]=X}return{blockSpecs:R,uniformData:v}}const rf=/\[\d+\]\.$/,Sd=(c,u)=>((c+(u-1))/u|0)*u;function Ed(c,u,f,v){if(u||f){v=v||1;const R=c.length/4;return function(L){let U=0,G=0;for(let X=0;X<R;++X){for(let j=0;j<v;++j)c[U++]=L[G++];U+=4-v}}}else return function(E){E.length?c.set(E):c[0]=E}}function sf(c,u,f,v){const E=f.blockSpecs,R=f.uniformData,L=E[v];if(!L)return wc("no uniform block object named:",v),{name:v,uniforms:{}};const U=new ArrayBuffer(L.size),G=c.createBuffer(),X=L.index;c.bindBuffer(Co,G),c.uniformBlockBinding(u,L.index,X);let j=v+".";rf.test(j)&&(j=j.replace(rf,"."));const ee={},J={},fe={};return L.uniformIndices.forEach(function(re){const de=R[re];let Te=de.name;Te.startsWith(j)&&(Te=Te.substr(j.length));const Ne=Te.endsWith("[0]");Ne&&(Te=Te.substr(0,Te.length-3));const ke=tt[de.type],ot=ke.Type,mt=Ne?Sd(ke.size,16)*de.size:ke.size*de.size,it=new ot(U,de.offset,mt/ot.BYTES_PER_ELEMENT);ee[Te]=it;const gt=Ed(it,Ne,ke.rows,ke.cols);J[Te]=gt,jh(Te,gt,fe,J)}),{name:v,array:U,asFloat:new Float32Array(U),buffer:G,uniforms:ee,setters:J}}function Ad(c,u,f){return sf(c,u.program,u.uniformBlockSpec,f)}function af(c,u,f){const E=(u.uniformBlockSpec||u).blockSpecs[f.name];if(E){const R=E.index;return c.bindBufferRange(Co,R,f.buffer,f.offset||0,f.array.byteLength),!0}return!1}function Td(c,u,f){af(c,u,f)&&c.bufferData(Co,f.array,ta)}function wd(c,u){const f=c.setters;for(const v in u){const E=f[v];if(E){const R=u[v];E(R)}}}function of(c,u){for(const f in u){const v=c[f];typeof v=="function"?v(u[f]):of(c[f],u[f])}}function Fc(c,...u){const f=c.uniformSetters||c,v=u.length;for(let E=0;E<v;++E){const R=u[E];if(Array.isArray(R)){const L=R.length;for(let U=0;U<L;++U)Fc(f,R[U])}else for(const L in R){const U=f[L];U&&U(R[L])}}}const Rd=Fc;function cf(c,u){const f={},v=c.getProgramParameter(u,za);for(let E=0;E<v;++E){const R=c.getActiveAttrib(u,E);if(Kh(R))continue;const L=c.getAttribLocation(u,R.name),U=zn[R.type],G=U.setter(c,L,U);G.location=L,f[R.name]=G}return f}function Ju(c,u){for(const f in u){const v=c[f];v&&v(u[f])}}function Jl(c,u,f){f.vertexArrayObject?c.bindVertexArray(f.vertexArrayObject):(Ju(u.attribSetters||u,f.attribs),f.indices&&c.bindBuffer(Pt,f.indices))}function Kl(c,u){const f=Qh(c,u),v=cf(c,u),E={program:u,uniformSetters:f,attribSetters:v};return ya(c)&&(E.uniformBlockSpec=nf(c,u),E.transformFeedbackInfo=ef(c,u)),E}const Cd=/\s|{|}|;/;function Ku(c,u,f,v,E){const R=Do(f,v,E),L=[];if(u=u.map(function(X){if(!Cd.test(X)){const j=qr(X);if(j)X=j.text;else{const ee=`no element with id: ${X}`;R.errorCallback(ee),L.push(ee)}}return X}),L.length)return $h(R,"");const U=R.callback;U&&(R.callback=(X,j)=>{U(X,X?void 0:Kl(c,j))});const G=Jh(c,u,R);return G?Kl(c,G):null}function lf(c,u,f,v,E){for(const[R,L]of Object.entries(u)){const U=uu({},E),G=f[R];Array.isArray(G)||Object.assign(U,G);const X=Zh(c,L,U.errorCallback);if(X){for(const j of Object.values(u)){const ee=c.getAttachedShaders(j);c.deleteProgram(j);for(const J of ee)v.has(J)||c.deleteShader(J)}return X}}}function ju(c,u,f={}){const v=new Set,E=Object.fromEntries(Object.entries(u).map(([L,U])=>{const G=uu({},f),X=Array.isArray(U)?U:U.shaders;return Array.isArray(U)||Object.assign(G,U),X.forEach(v.add,v),[L,qh(c,X,G)]}));if(f.callback){vd(c,E).then(()=>{const L=lf(c,E,u,v,f);f.callback(L,L?void 0:E)});return}return lf(c,E,u,v,f)?void 0:E}function uf(c,u,f){f=Do(f);function v(L,U){return Object.fromEntries(Object.entries(U).map(([G,X])=>[G,Kl(L,X)]))}const E=f.callback;E&&(f.callback=(L,U)=>{E(L,L?void 0:v(c,U))});const R=ju(c,u,f);if(!(E||!R))return v(c,R)}const Pd=Zl(ju),Id=Zl(uf);var Bp=Object.freeze({__proto__:null,createAttributeSetters:cf,createProgram:Yl,createProgramAsync:gd,createPrograms:ju,createProgramsAsync:Pd,createProgramFromScripts:xd,createProgramFromSources:Jh,createProgramInfo:Ku,createProgramInfoAsync:_d,createProgramInfos:uf,createProgramInfosAsync:Id,createProgramInfoFromProgram:Kl,createUniformSetters:Qh,createUniformBlockSpecFromProgram:nf,createUniformBlockInfoFromProgram:sf,createUniformBlockInfo:Ad,createTransformFeedback:Md,createTransformFeedbackInfo:ef,bindTransformFeedbackInfo:tf,setAttributes:Ju,setBuffersAndAttributes:Jl,setUniforms:Fc,setUniformsAndBindTextures:Rd,setUniformBlock:Td,setBlockUniforms:wd,bindUniformBlock:af});const hf=4,ff=5123;function Qu(c,u,f,v,E,R){f=f===void 0?hf:f;const L=u.indices,U=u.elementType,G=v===void 0?u.numElements:v;E=E===void 0?0:E,U||L?R!==void 0?c.drawElementsInstanced(f,G,U===void 0?ff:u.elementType,E,R):c.drawElements(f,G,U===void 0?ff:u.elementType,E):R!==void 0?c.drawArraysInstanced(f,E,G,R):c.drawArrays(f,E,G)}function df(c,u){let f=null,v=null;u.forEach(function(E){if(E.active===!1)return;const R=E.programInfo,L=E.vertexArrayInfo||E.bufferInfo;let U=!1;const G=E.type===void 0?hf:E.type;R!==f&&(f=R,c.useProgram(R.program),U=!0),(U||L!==v)&&(v&&v.vertexArrayObject&&!L.vertexArrayObject&&c.bindVertexArray(null),v=L,Jl(c,R,L)),Fc(R,E.uniforms),Qu(c,L,G,E.count,E.offset,E.instanceCount)}),v&&v.vertexArrayObject&&c.bindVertexArray(null)}var zp=Object.freeze({__proto__:null,drawBufferInfo:Qu,drawObjectList:df});const pf=36160,Ha=36161,Ld=3553,Dd=5121,Ud=6402,Nd=6408,kp=33190,Gp=36012,Vp=35056,Hp=36013,Wp=32854,Xp=32855,$p=36194,Fd=33189,Od=6401,Bd=36168,mf=34041,gf=36064,eh=36096,zd=36128,_f=33306,vf=33071,xf=9729,kd=[{format:Nd,type:Dd,min:xf,wrap:vf},{format:mf}],Qr={};Qr[mf]=_f,Qr[Od]=zd,Qr[Bd]=zd,Qr[Ud]=eh,Qr[Fd]=eh,Qr[kp]=eh,Qr[Gp]=eh,Qr[Vp]=_f,Qr[Hp]=_f;function qp(c,u){return Qr[c]||Qr[u]}const Wa={};Wa[Wp]=!0,Wa[Xp]=!0,Wa[$p]=!0,Wa[mf]=!0,Wa[Fd]=!0,Wa[Od]=!0,Wa[Bd]=!0;function Yp(c){return Wa[c]}const Zp=32;function Jp(c){return c>=gf&&c<gf+Zp}function Kp(c,u,f,v){const E=pf,R=c.createFramebuffer();c.bindFramebuffer(E,R),f=f||c.drawingBufferWidth,v=v||c.drawingBufferHeight,u=u||kd;const L=[],U={framebuffer:R,attachments:[],width:f,height:v};return u.forEach(function(G,X){let j=G.attachment;const ee=G.samples,J=G.format;let fe=G.attachmentPoint||qp(J,G.internalFormat);if(fe||(fe=gf+X),Jp(fe)&&L.push(fe),!j)if(ee!==void 0||Yp(J))j=c.createRenderbuffer(),c.bindRenderbuffer(Ha,j),ee>1?c.renderbufferStorageMultisample(Ha,ee,J,f,v):c.renderbufferStorage(Ha,J,f,v);else{const re=Object.assign({},G);re.width=f,re.height=v,re.auto===void 0&&(re.auto=!1,re.min=re.min||re.minMag||xf,re.mag=re.mag||re.minMag||xf,re.wrapS=re.wrapS||re.wrap||vf,re.wrapT=re.wrapT||re.wrap||vf),j=Ac(c,re)}if(qo(c,j))c.framebufferRenderbuffer(E,fe,Ha,j);else if(Dr(c,j))G.layer!==void 0?c.framebufferTextureLayer(E,fe,j,G.level||0,G.layer):c.framebufferTexture2D(E,fe,G.target||Ld,j,G.level||0);else throw new Error("unknown attachment type");U.attachments.push(j)}),c.drawBuffers&&c.drawBuffers(L),U}function jp(c,u,f,v,E){v=v||c.drawingBufferWidth,E=E||c.drawingBufferHeight,u.width=v,u.height=E,f=f||kd,f.forEach(function(R,L){const U=u.attachments[L],G=R.format,X=R.samples;if(X!==void 0||qo(c,U))c.bindRenderbuffer(Ha,U),X>1?c.renderbufferStorageMultisample(Ha,X,G,v,E):c.renderbufferStorage(Ha,G,v,E);else if(Dr(c,U))Tc(c,U,R,v,E);else throw new Error("unknown attachment type")})}function Qp(c,u,f){f=f||pf,u?(c.bindFramebuffer(f,u.framebuffer),c.viewport(0,0,u.width,u.height)):(c.bindFramebuffer(f,null),c.viewport(0,0,c.drawingBufferWidth,c.drawingBufferHeight))}var $0=Object.freeze({__proto__:null,bindFramebufferInfo:Qp,createFramebufferInfo:Kp,resizeFramebufferInfo:jp});const em=34963;function tm(c,u,f){const v=c.createVertexArray();return c.bindVertexArray(v),u.length||(u=[u]),u.forEach(function(E){Jl(c,E,f)}),c.bindVertexArray(null),{numElements:f.numElements,elementType:f.elementType,vertexArrayObject:v}}function Gd(c,u,f,v){const E=c.createVertexArray();return c.bindVertexArray(E),Ju(u,f),v&&c.bindBuffer(em,v),c.bindVertexArray(null),E}function nm(c,u,f){return Gd(c,u.attribSetters||u,f.attribs,f.indices)}var q0=Object.freeze({__proto__:null,createVertexArrayInfo:tm,createVAOAndSetAttributes:Gd,createVAOFromBufferInfo:nm});const yf={addExtensionsToContext:!0};function Lt(c){$o(c,yf),so(c),Qs(c)}const ze=/^(.*?)_/;function es(c,u){go(c,0);const f=c.getExtension(u);if(f){const v={},E=ze.exec(u)[1],R="_"+E;for(const L in f){const U=f[L],G=typeof U=="function",X=G?E:R;let j=L;L.endsWith(X)&&(j=L.substring(0,L.length-X.length)),c[j]!==void 0?!G&&c[j]!==U&&ro(j,c[j],U,L):G?c[j]=function(ee){return function(){return ee.apply(f,arguments)}}(U):(c[j]=U,v[j]=U)}v.constructor={name:f.constructor.name},go(v,0)}return f}const Oc=null;function oa(c){for(let u=0;u<Oc.length;++u)es(c,Oc[u])}function Vd(c,u){const f=["webgl","experimental-webgl"];let v=null;for(let E=0;E<f.length;++E)if(v=c.getContext(f[E],u),v){yf.addExtensionsToContext&&oa(v);break}return v}function im(c,u){return Vd(c,u)}function Hd(c,u){const f=["webgl2","webgl","experimental-webgl"];let v=null;for(let E=0;E<f.length;++E)if(v=c.getContext(f[E],u),v){yf.addExtensionsToContext&&oa(v);break}return v}function rm(c,u){return Hd(c,u)}function Wd(c,u){u=u||1,u=Math.max(0,u);const f=c.clientWidth*u|0,v=c.clientHeight*u|0;return c.width!==f||c.height!==v?(c.width=f,c.height=v,!0):!1}},28670:function(zi){(function(Fn,Rn){zi.exports=Rn()})(this,function(){"use strict";for(var Fn=function(b,M,w){return M===void 0&&(M=0),w===void 0&&(w=1),b<M?M:b>w?w:b},Rn=Fn,Sn=function(b){b._clipped=!1,b._unclipped=b.slice(0);for(var M=0;M<=3;M++)M<3?((b[M]<0||b[M]>255)&&(b._clipped=!0),b[M]=Rn(b[M],0,255)):M===3&&(b[M]=Rn(b[M],0,1));return b},Ja={},bi=0,ha=["Boolean","Number","String","Function","Array","Date","RegExp","Undefined","Null"];bi<ha.length;bi+=1){var wr=ha[bi];Ja["[object "+wr+"]"]=wr.toLowerCase()}var Ii=function(b){return Ja[Object.prototype.toString.call(b)]||"object"},Ka=Ii,vh=function(b,M){return M===void 0&&(M=null),b.length>=3?Array.prototype.slice.call(b):Ka(b[0])=="object"&&M?M.split("").filter(function(w){return b[0][w]!==void 0}).map(function(w){return b[0][w]}):b[0]},rl=Ii,hu=function(b){if(b.length<2)return null;var M=b.length-1;return rl(b[M])=="string"?b[M].toLowerCase():null},Mi=Math.PI,De={clip_rgb:Sn,limit:Fn,type:Ii,unpack:vh,last:hu,PI:Mi,TWOPI:Mi*2,PITHIRD:Mi/3,DEG2RAD:Mi/180,RAD2DEG:180/Mi},Jt={format:{},autodetect:[]},ur=De.last,Rr=De.clip_rgb,is=De.type,Cr=Jt,Is=function(){for(var M=[],w=arguments.length;w--;)M[w]=arguments[w];var N=this;if(is(M[0])==="object"&&M[0].constructor&&M[0].constructor===this.constructor)return M[0];var $=ur(M),Y=!1;if(!$){Y=!0,Cr.sorted||(Cr.autodetect=Cr.autodetect.sort(function(Ee,He){return He.p-Ee.p}),Cr.sorted=!0);for(var H=0,Q=Cr.autodetect;H<Q.length;H+=1){var te=Q[H];if($=te.test.apply(te,M),$)break}}if(Cr.format[$]){var pe=Cr.format[$].apply(null,Y?M:M.slice(0,-1));N._rgb=Rr(pe)}else throw new Error("unknown format: "+M);N._rgb.length===3&&N._rgb.push(1)};Is.prototype.toString=function(){return is(this.hex)=="function"?this.hex():"["+this._rgb.join(",")+"]"};var Mt=Is,ja=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(ja.Color,[null].concat(b)))};ja.Color=Mt,ja.version="2.4.2";var ln=ja,fu=De.unpack,du=Math.max,hn=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=fu(b,"rgb"),N=w[0],$=w[1],Y=w[2];N=N/255,$=$/255,Y=Y/255;var H=1-du(N,du($,Y)),Q=H<1?1/(1-H):0,te=(1-N-H)*Q,pe=(1-$-H)*Q,Ee=(1-Y-H)*Q;return[te,pe,Ee,H]},sl=hn,pu=De.unpack,mu=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];b=pu(b,"cmyk");var w=b[0],N=b[1],$=b[2],Y=b[3],H=b.length>4?b[4]:1;return Y===1?[0,0,0,H]:[w>=1?0:255*(1-w)*(1-Y),N>=1?0:255*(1-N)*(1-Y),$>=1?0:255*(1-$)*(1-Y),H]},al=mu,zo=ln,Qa=Mt,Ls=Jt,gu=De.unpack,_u=De.type,vu=sl;Qa.prototype.cmyk=function(){return vu(this._rgb)},zo.cmyk=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(Qa,[null].concat(b,["cmyk"])))},Ls.format.cmyk=al,Ls.autodetect.push({p:2,test:function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];if(b=gu(b,"cmyk"),_u(b)==="array"&&b.length===4)return"cmyk"}});var xu=De.unpack,yu=De.last,ko=function(b){return Math.round(b*100)/100},bu=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=xu(b,"hsla"),N=yu(b)||"lsa";return w[0]=ko(w[0]||0),w[1]=ko(w[1]*100)+"%",w[2]=ko(w[2]*100)+"%",N==="hsla"||w.length>3&&w[3]<1?(w[3]=w.length>3?w[3]:1,N="hsla"):w.length=3,N+"("+w.join(",")+")"},Mu=bu,Pr=De.unpack,rs=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];b=Pr(b,"rgba");var w=b[0],N=b[1],$=b[2];w/=255,N/=255,$/=255;var Y=Math.min(w,N,$),H=Math.max(w,N,$),Q=(H+Y)/2,te,pe;return H===Y?(te=0,pe=Number.NaN):te=Q<.5?(H-Y)/(H+Y):(H-Y)/(2-H-Y),w==H?pe=(N-$)/(H-Y):N==H?pe=2+($-w)/(H-Y):$==H&&(pe=4+(w-N)/(H-Y)),pe*=60,pe<0&&(pe+=360),b.length>3&&b[3]!==void 0?[pe,te,Q,b[3]]:[pe,te,Q]},ji=rs,Su=De.unpack,eo=De.last,Eu=Mu,Au=ji,Go=Math.round,Tu=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=Su(b,"rgba"),N=eo(b)||"rgb";return N.substr(0,3)=="hsl"?Eu(Au(w),N):(w[0]=Go(w[0]),w[1]=Go(w[1]),w[2]=Go(w[2]),(N==="rgba"||w.length>3&&w[3]<1)&&(w[3]=w.length>3?w[3]:1,N="rgba"),N+"("+w.slice(0,N==="rgb"?3:4).join(",")+")")},to=Tu,wu=De.unpack,Vo=Math.round,Ir=function(){for(var b,M=[],w=arguments.length;w--;)M[w]=arguments[w];M=wu(M,"hsl");var N=M[0],$=M[1],Y=M[2],H,Q,te;if($===0)H=Q=te=Y*255;else{var pe=[0,0,0],Ee=[0,0,0],He=Y<.5?Y*(1+$):Y+$-Y*$,we=2*Y-He,Ze=N/360;pe[0]=Ze+1/3,pe[1]=Ze,pe[2]=Ze-1/3;for(var Ye=0;Ye<3;Ye++)pe[Ye]<0&&(pe[Ye]+=1),pe[Ye]>1&&(pe[Ye]-=1),6*pe[Ye]<1?Ee[Ye]=we+(He-we)*6*pe[Ye]:2*pe[Ye]<1?Ee[Ye]=He:3*pe[Ye]<2?Ee[Ye]=we+(He-we)*(2/3-pe[Ye])*6:Ee[Ye]=we;b=[Vo(Ee[0]*255),Vo(Ee[1]*255),Vo(Ee[2]*255)],H=b[0],Q=b[1],te=b[2]}return M.length>3?[H,Q,te,M[3]]:[H,Q,te,1]},ol=Ir,cl=ol,ll=Jt,Ho=/^rgb\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*\)$/,Wo=/^rgba\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*,\s*([01]|[01]?\.\d+)\)$/,ul=/^rgb\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/,hl=/^rgba\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/,fa=/^hsl\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/,Ds=/^hsla\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/,Us=Math.round,ki=function(b){b=b.toLowerCase().trim();var M;if(ll.format.named)try{return ll.format.named(b)}catch(Ye){}if(M=b.match(Ho)){for(var w=M.slice(1,4),N=0;N<3;N++)w[N]=+w[N];return w[3]=1,w}if(M=b.match(Wo)){for(var $=M.slice(1,5),Y=0;Y<4;Y++)$[Y]=+$[Y];return $}if(M=b.match(ul)){for(var H=M.slice(1,4),Q=0;Q<3;Q++)H[Q]=Us(H[Q]*2.55);return H[3]=1,H}if(M=b.match(hl)){for(var te=M.slice(1,5),pe=0;pe<3;pe++)te[pe]=Us(te[pe]*2.55);return te[3]=+te[3],te}if(M=b.match(fa)){var Ee=M.slice(1,4);Ee[1]*=.01,Ee[2]*=.01;var He=cl(Ee);return He[3]=1,He}if(M=b.match(Ds)){var we=M.slice(1,4);we[1]*=.01,we[2]*=.01;var Ze=cl(we);return Ze[3]=+M[4],Ze}};ki.test=function(b){return Ho.test(b)||Wo.test(b)||ul.test(b)||hl.test(b)||fa.test(b)||Ds.test(b)};var hr=ki,Ns=ln,ss=Mt,Fs=Jt,no=De.type,Qn=to,da=hr;ss.prototype.css=function(b){return Qn(this._rgb,b)},Ns.css=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(ss,[null].concat(b,["css"])))},Fs.format.css=da,Fs.autodetect.push({p:5,test:function(b){for(var M=[],w=arguments.length-1;w-- >0;)M[w]=arguments[w+1];if(!M.length&&no(b)==="string"&&da.test(b))return"css"}});var En=Mt,Xo=ln,xh=Jt,Os=De.unpack;xh.format.gl=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=Os(b,"rgba");return w[0]*=255,w[1]*=255,w[2]*=255,w},Xo.gl=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(En,[null].concat(b,["gl"])))},En.prototype.gl=function(){var b=this._rgb;return[b[0]/255,b[1]/255,b[2]/255,b[3]]};var yh=De.unpack,mn=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=yh(b,"rgb"),N=w[0],$=w[1],Y=w[2],H=Math.min(N,$,Y),Q=Math.max(N,$,Y),te=Q-H,pe=te*100/255,Ee=H/(255-te)*100,He;return te===0?He=Number.NaN:(N===Q&&(He=($-Y)/te),$===Q&&(He=2+(Y-N)/te),Y===Q&&(He=4+(N-$)/te),He*=60,He<0&&(He+=360)),[He,pe,Ee]},Lr=mn,fl=De.unpack,Gi=Math.floor,pa=function(){for(var b,M,w,N,$,Y,H=[],Q=arguments.length;Q--;)H[Q]=arguments[Q];H=fl(H,"hcg");var te=H[0],pe=H[1],Ee=H[2],He,we,Ze;Ee=Ee*255;var Ye=pe*255;if(pe===0)He=we=Ze=Ee;else{te===360&&(te=0),te>360&&(te-=360),te<0&&(te+=360),te/=60;var At=Gi(te),Et=te-At,Nt=Ee*(1-pe),$t=Nt+Ye*(1-Et),Pn=Nt+Ye*Et,tt=Nt+Ye;switch(At){case 0:b=[tt,Pn,Nt],He=b[0],we=b[1],Ze=b[2];break;case 1:M=[$t,tt,Nt],He=M[0],we=M[1],Ze=M[2];break;case 2:w=[Nt,tt,Pn],He=w[0],we=w[1],Ze=w[2];break;case 3:N=[Nt,$t,tt],He=N[0],we=N[1],Ze=N[2];break;case 4:$=[Pn,Nt,tt],He=$[0],we=$[1],Ze=$[2];break;case 5:Y=[tt,Nt,$t],He=Y[0],we=Y[1],Ze=Y[2];break}}return[He,we,Ze,H.length>3?H[3]:1]},as=pa,Ru=De.unpack,$o=De.type,io=ln,ro=Mt,Qi=Jt,ei=Lr;ro.prototype.hcg=function(){return ei(this._rgb)},io.hcg=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(ro,[null].concat(b,["hcg"])))},Qi.format.hcg=as,Qi.autodetect.push({p:1,test:function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];if(b=Ru(b,"hcg"),$o(b)==="array"&&b.length===3)return"hcg"}});var ma=De.unpack,qo=De.last,Dr=Math.round,os=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=ma(b,"rgba"),N=w[0],$=w[1],Y=w[2],H=w[3],Q=qo(b)||"auto";H===void 0&&(H=1),Q==="auto"&&(Q=H<1?"rgba":"rgb"),N=Dr(N),$=Dr($),Y=Dr(Y);var te=N<<16|$<<8|Y,pe="000000"+te.toString(16);pe=pe.substr(pe.length-6);var Ee="0"+Dr(H*255).toString(16);switch(Ee=Ee.substr(Ee.length-2),Q.toLowerCase()){case"rgba":return"#"+pe+Ee;case"argb":return"#"+Ee+pe;default:return"#"+pe}},Yo=os,gn=/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/,dl=/^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/,Cu=function(b){if(b.match(gn)){(b.length===4||b.length===7)&&(b=b.substr(1)),b.length===3&&(b=b.split(""),b=b[0]+b[0]+b[1]+b[1]+b[2]+b[2]);var M=parseInt(b,16),w=M>>16,N=M>>8&255,$=M&255;return[w,N,$,1]}if(b.match(dl)){(b.length===5||b.length===9)&&(b=b.substr(1)),b.length===4&&(b=b.split(""),b=b[0]+b[0]+b[1]+b[1]+b[2]+b[2]+b[3]+b[3]);var Y=parseInt(b,16),H=Y>>24&255,Q=Y>>16&255,te=Y>>8&255,pe=Math.round((Y&255)/255*100)/100;return[H,Q,te,pe]}throw new Error("unknown hex color: "+b)},Ur=Cu,Bs=ln,Zo=Mt,pl=De.type,ml=Jt,gl=Yo;Zo.prototype.hex=function(b){return gl(this._rgb,b)},Bs.hex=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(Zo,[null].concat(b,["hex"])))},ml.format.hex=Ur,ml.autodetect.push({p:4,test:function(b){for(var M=[],w=arguments.length-1;w-- >0;)M[w]=arguments[w+1];if(!M.length&&pl(b)==="string"&&[3,4,5,6,7,8,9].indexOf(b.length)>=0)return"hex"}});var Jo=De.unpack,cs=De.TWOPI,Ko=Math.min,so=Math.sqrt,ao=Math.acos,ga=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=Jo(b,"rgb"),N=w[0],$=w[1],Y=w[2];N/=255,$/=255,Y/=255;var H,Q=Ko(N,$,Y),te=(N+$+Y)/3,pe=te>0?1-Q/te:0;return pe===0?H=NaN:(H=(N-$+(N-Y))/2,H/=so((N-$)*(N-$)+(N-Y)*($-Y)),H=ao(H),Y>$&&(H=cs-H),H/=cs),[H*360,pe,te]},jo=ga,_l=De.unpack,ls=De.limit,us=De.TWOPI,oo=De.PITHIRD,hs=Math.cos,_a=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];b=_l(b,"hsi");var w=b[0],N=b[1],$=b[2],Y,H,Q;return isNaN(w)&&(w=0),isNaN(N)&&(N=0),w>360&&(w-=360),w<0&&(w+=360),w/=360,w<1/3?(Q=(1-N)/3,Y=(1+N*hs(us*w)/hs(oo-us*w))/3,H=1-(Q+Y)):w<2/3?(w-=1/3,Y=(1-N)/3,H=(1+N*hs(us*w)/hs(oo-us*w))/3,Q=1-(Y+H)):(w-=2/3,H=(1-N)/3,Q=(1+N*hs(us*w)/hs(oo-us*w))/3,Y=1-(H+Q)),Y=ls($*Y*3),H=ls($*H*3),Q=ls($*Q*3),[Y*255,H*255,Q*255,b.length>3?b[3]:1]},zs=_a,vl=De.unpack,co=De.type,xl=ln,Qo=Mt,ec=Jt,tc=jo;Qo.prototype.hsi=function(){return tc(this._rgb)},xl.hsi=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(Qo,[null].concat(b,["hsi"])))},ec.format.hsi=zs,ec.autodetect.push({p:2,test:function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];if(b=vl(b,"hsi"),co(b)==="array"&&b.length===3)return"hsi"}});var yl=De.unpack,bl=De.type,fs=ln,nc=Mt,ic=Jt,lo=ji;nc.prototype.hsl=function(){return lo(this._rgb)},fs.hsl=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(nc,[null].concat(b,["hsl"])))},ic.format.hsl=ol,ic.autodetect.push({p:2,test:function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];if(b=yl(b,"hsl"),bl(b)==="array"&&b.length===3)return"hsl"}});var uo=De.unpack,rc=Math.min,Pu=Math.max,ds=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];b=uo(b,"rgb");var w=b[0],N=b[1],$=b[2],Y=rc(w,N,$),H=Pu(w,N,$),Q=H-Y,te,pe,Ee;return Ee=H/255,H===0?(te=Number.NaN,pe=0):(pe=Q/H,w===H&&(te=(N-$)/Q),N===H&&(te=2+($-w)/Q),$===H&&(te=4+(w-N)/Q),te*=60,te<0&&(te+=360)),[te,pe,Ee]},Ml=ds,sc=De.unpack,Ut=Math.floor,Iu=function(){for(var b,M,w,N,$,Y,H=[],Q=arguments.length;Q--;)H[Q]=arguments[Q];H=sc(H,"hsv");var te=H[0],pe=H[1],Ee=H[2],He,we,Ze;if(Ee*=255,pe===0)He=we=Ze=Ee;else{te===360&&(te=0),te>360&&(te-=360),te<0&&(te+=360),te/=60;var Ye=Ut(te),At=te-Ye,Et=Ee*(1-pe),Nt=Ee*(1-pe*At),$t=Ee*(1-pe*(1-At));switch(Ye){case 0:b=[Ee,$t,Et],He=b[0],we=b[1],Ze=b[2];break;case 1:M=[Nt,Ee,Et],He=M[0],we=M[1],Ze=M[2];break;case 2:w=[Et,Ee,$t],He=w[0],we=w[1],Ze=w[2];break;case 3:N=[Et,Nt,Ee],He=N[0],we=N[1],Ze=N[2];break;case 4:$=[$t,Et,Ee],He=$[0],we=$[1],Ze=$[2];break;case 5:Y=[Ee,Et,Nt],He=Y[0],we=Y[1],Ze=Y[2];break}}return[He,we,Ze,H.length>3?H[3]:1]},Lu=Iu,Du=De.unpack,ks=De.type,ho=ln,va=Mt,Nr=Jt,ps=Ml;va.prototype.hsv=function(){return ps(this._rgb)},ho.hsv=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(va,[null].concat(b,["hsv"])))},Nr.format.hsv=Lu,Nr.autodetect.push({p:2,test:function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];if(b=Du(b,"hsv"),ks(b)==="array"&&b.length===3)return"hsv"}});var Fr={Kn:18,Xn:.95047,Yn:1,Zn:1.08883,t0:.137931034,t1:.206896552,t2:.12841855,t3:.008856452},er=Fr,fo=De.unpack,ac=Math.pow,bh=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=fo(b,"rgb"),N=w[0],$=w[1],Y=w[2],H=Sl(N,$,Y),Q=H[0],te=H[1],pe=H[2],Ee=116*te-16;return[Ee<0?0:Ee,500*(Q-te),200*(te-pe)]},po=function(b){return(b/=255)<=.04045?b/12.92:ac((b+.055)/1.055,2.4)},Gs=function(b){return b>er.t3?ac(b,1/3):b/er.t2+er.t0},Sl=function(b,M,w){b=po(b),M=po(M),w=po(w);var N=Gs((.4124564*b+.3575761*M+.1804375*w)/er.Xn),$=Gs((.2126729*b+.7151522*M+.072175*w)/er.Yn),Y=Gs((.0193339*b+.119192*M+.9503041*w)/er.Zn);return[N,$,Y]},tr=bh,fr=Fr,nr=De.unpack,Si=Math.pow,ir=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];b=nr(b,"lab");var w=b[0],N=b[1],$=b[2],Y,H,Q,te,pe,Ee;return H=(w+16)/116,Y=isNaN(N)?H:H+N/500,Q=isNaN($)?H:H-$/200,H=fr.Yn*Vs(H),Y=fr.Xn*Vs(Y),Q=fr.Zn*Vs(Q),te=xa(3.2404542*Y-1.5371385*H-.4985314*Q),pe=xa(-.969266*Y+1.8760108*H+.041556*Q),Ee=xa(.0556434*Y-.2040259*H+1.0572252*Q),[te,pe,Ee,b.length>3?b[3]:1]},xa=function(b){return 255*(b<=.00304?12.92*b:1.055*Si(b,1/2.4)-.055)},Vs=function(b){return b>fr.t1?b*b*b:fr.t2*(b-fr.t0)},ai=ir,Ht=De.unpack,mo=De.type,Hs=ln,El=Mt,ms=Jt,Mh=tr;El.prototype.lab=function(){return Mh(this._rgb)},Hs.lab=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(El,[null].concat(b,["lab"])))},ms.format.lab=ai,ms.autodetect.push({p:2,test:function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];if(b=Ht(b,"lab"),mo(b)==="array"&&b.length===3)return"lab"}});var Sh=De.unpack,Eh=De.RAD2DEG,Ah=Math.sqrt,Th=Math.atan2,wh=Math.round,Rh=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=Sh(b,"lab"),N=w[0],$=w[1],Y=w[2],H=Ah($*$+Y*Y),Q=(Th(Y,$)*Eh+360)%360;return wh(H*1e4)===0&&(Q=Number.NaN),[N,H,Q]},Uu=Rh,Ch=De.unpack,Ph=tr,Ih=Uu,Lh=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=Ch(b,"rgb"),N=w[0],$=w[1],Y=w[2],H=Ph(N,$,Y),Q=H[0],te=H[1],pe=H[2];return Ih(Q,te,pe)},Dh=Lh,oc=De.unpack,Al=De.DEG2RAD,Nu=Math.sin,Fu=Math.cos,Tl=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=oc(b,"lch"),N=w[0],$=w[1],Y=w[2];return isNaN(Y)&&(Y=0),Y=Y*Al,[N,Fu(Y)*$,Nu(Y)*$]},wl=Tl,Ou=De.unpack,Bu=wl,Uh=ai,cc=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];b=Ou(b,"lch");var w=b[0],N=b[1],$=b[2],Y=Bu(w,N,$),H=Y[0],Q=Y[1],te=Y[2],pe=Uh(H,Q,te),Ee=pe[0],He=pe[1],we=pe[2];return[Ee,He,we,b.length>3?b[3]:1]},Nh=cc,Fh=De.unpack,ya=Nh,Oh=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=Fh(b,"hcl").reverse();return ya.apply(void 0,w)},go=Oh,ad=De.unpack,dr=De.type,Ws=ln,_o=Mt,Xs=Jt,ti=Dh;_o.prototype.lch=function(){return ti(this._rgb)},_o.prototype.hcl=function(){return ti(this._rgb).reverse()},Ws.lch=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(_o,[null].concat(b,["lch"])))},Ws.hcl=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(_o,[null].concat(b,["hcl"])))},Xs.format.lch=Nh,Xs.format.hcl=go,["lch","hcl"].forEach(function(b){return Xs.autodetect.push({p:2,test:function(){for(var M=[],w=arguments.length;w--;)M[w]=arguments[w];if(M=ad(M,b),dr(M)==="array"&&M.length===3)return b}})});var Wt={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflower:"#6495ed",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",laserlemon:"#ffff54",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrod:"#fafad2",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",maroon2:"#7f0000",maroon3:"#b03060",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",purple2:"#7f007f",purple3:"#a020f0",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"},gs=Wt,Or=Mt,_n=Jt,vo=De.type,oi=gs,$s=Ur,Ei=Yo;Or.prototype.name=function(){for(var b=Ei(this._rgb,"rgb"),M=0,w=Object.keys(oi);M<w.length;M+=1){var N=w[M];if(oi[N]===b)return N.toLowerCase()}return b},_n.format.named=function(b){if(b=b.toLowerCase(),oi[b])return $s(oi[b]);throw new Error("unknown color name: "+b)},_n.autodetect.push({p:5,test:function(b){for(var M=[],w=arguments.length-1;w-- >0;)M[w]=arguments[w+1];if(!M.length&&vo(b)==="string"&&oi[b.toLowerCase()])return"named"}});var en=De.unpack,Vi=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=en(b,"rgb"),N=w[0],$=w[1],Y=w[2];return(N<<16)+($<<8)+Y},Br=Vi,zr=De.type,kr=function(b){if(zr(b)=="number"&&b>=0&&b<=16777215){var M=b>>16,w=b>>8&255,N=b&255;return[M,w,N,1]}throw new Error("unknown num color: "+b)},zu=kr,ku=ln,Rl=Mt,Cl=Jt,Gu=De.type,lc=Br;Rl.prototype.num=function(){return lc(this._rgb)},ku.num=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(Rl,[null].concat(b,["num"])))},Cl.format.num=zu,Cl.autodetect.push({p:5,test:function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];if(b.length===1&&Gu(b[0])==="number"&&b[0]>=0&&b[0]<=16777215)return"num"}});var uc=ln,qs=Mt,ba=Jt,hc=De.unpack,xo=De.type,Pl=Math.round;qs.prototype.rgb=function(b){return b===void 0&&(b=!0),b===!1?this._rgb.slice(0,3):this._rgb.slice(0,3).map(Pl)},qs.prototype.rgba=function(b){return b===void 0&&(b=!0),this._rgb.slice(0,4).map(function(M,w){return w<3?b===!1?M:Pl(M):M})},uc.rgb=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(qs,[null].concat(b,["rgb"])))},ba.format.rgb=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=hc(b,"rgba");return w[3]===void 0&&(w[3]=1),w},ba.autodetect.push({p:3,test:function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];if(b=hc(b,"rgba"),xo(b)==="array"&&(b.length===3||b.length===4&&xo(b[3])=="number"&&b[3]>=0&&b[3]<=1))return"rgb"}});var _s=Math.log,Vu=function(b){var M=b/100,w,N,$;return M<66?(w=255,N=M<6?0:-155.25485562709179-.44596950469579133*(N=M-2)+104.49216199393888*_s(N),$=M<20?0:-254.76935184120902+.8274096064007395*($=M-10)+115.67994401066147*_s($)):(w=351.97690566805693+.114206453784165*(w=M-55)-40.25366309332127*_s(w),N=325.4494125711974+.07943456536662342*(N=M-50)-28.0852963507957*_s(N),$=255),[w,N,$,1]},Zn=Vu,yt=Zn,Il=De.unpack,ve=Math.round,bt=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];for(var w=Il(b,"rgb"),N=w[0],$=w[2],Y=1e3,H=4e4,Q=.4,te;H-Y>Q;){te=(H+Y)*.5;var pe=yt(te);pe[2]/pe[0]>=$/N?H=te:Y=te}return ve(te)},yo=bt,Ma=ln,Sa=Mt,Gr=Jt,Ea=yo;Sa.prototype.temp=Sa.prototype.kelvin=Sa.prototype.temperature=function(){return Ea(this._rgb)},Ma.temp=Ma.kelvin=Ma.temperature=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(Sa,[null].concat(b,["temp"])))},Gr.format.temp=Gr.format.kelvin=Gr.format.temperature=Zn;var Hu=De.unpack,bo=Math.cbrt,Ll=Math.pow,Dl=Math.sign,Ul=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=Hu(b,"rgb"),N=w[0],$=w[1],Y=w[2],H=[fc(N/255),fc($/255),fc(Y/255)],Q=H[0],te=H[1],pe=H[2],Ee=bo(.4122214708*Q+.5363325363*te+.0514459929*pe),He=bo(.2119034982*Q+.6806995451*te+.1073969566*pe),we=bo(.0883024619*Q+.2817188376*te+.6299787005*pe);return[.2104542553*Ee+.793617785*He-.0040720468*we,1.9779984951*Ee-2.428592205*He+.4505937099*we,.0259040371*Ee+.7827717662*He-.808675766*we]},Aa=Ul;function fc(b){var M=Math.abs(b);return M<.04045?b/12.92:(Dl(b)||1)*Ll((M+.055)/1.055,2.4)}var sn=De.unpack,pr=Math.pow,dc=Math.sign,Ys=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];b=sn(b,"lab");var w=b[0],N=b[1],$=b[2],Y=pr(w+.3963377774*N+.2158037573*$,3),H=pr(w-.1055613458*N-.0638541728*$,3),Q=pr(w-.0894841775*N-1.291485548*$,3);return[255*mc(4.0767416621*Y-3.3077115913*H+.2309699292*Q),255*mc(-1.2684380046*Y+2.6097574011*H-.3413193965*Q),255*mc(-.0041960863*Y-.7034186147*H+1.707614701*Q),b.length>3?b[3]:1]},pc=Ys;function mc(b){var M=Math.abs(b);return M>.0031308?(dc(b)||1)*(1.055*pr(M,1/2.4)-.055):b*12.92}var Zs=De.unpack,gc=De.type,Wu=ln,Hn=Mt,nn=Jt,Xu=Aa;Hn.prototype.oklab=function(){return Xu(this._rgb)},Wu.oklab=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(Hn,[null].concat(b,["oklab"])))},nn.format.oklab=pc,nn.autodetect.push({p:3,test:function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];if(b=Zs(b,"oklab"),gc(b)==="array"&&b.length===3)return"oklab"}});var vs=De.unpack,_c=Aa,Bh=Uu,Nl=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];var w=vs(b,"rgb"),N=w[0],$=w[1],Y=w[2],H=_c(N,$,Y),Q=H[0],te=H[1],pe=H[2];return Bh(Q,te,pe)},zh=Nl,Ai=De.unpack,B=wl,vc=pc,Fl=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];b=Ai(b,"lch");var w=b[0],N=b[1],$=b[2],Y=B(w,N,$),H=Y[0],Q=Y[1],te=Y[2],pe=vc(H,Q,te),Ee=pe[0],He=pe[1],we=pe[2];return[Ee,He,we,b.length>3?b[3]:1]},ci=Fl,mr=De.unpack,Hi=De.type,Mo=ln,xs=Mt,ys=Jt,Js=zh;xs.prototype.oklch=function(){return Js(this._rgb)},Mo.oklch=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];return new(Function.prototype.bind.apply(xs,[null].concat(b,["oklch"])))},ys.format.oklch=ci,ys.autodetect.push({p:3,test:function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];if(b=mr(b,"oklch"),Hi(b)==="array"&&b.length===3)return"oklch"}});var gr=Mt,Vr=De.type;gr.prototype.alpha=function(b,M){return M===void 0&&(M=!1),b!==void 0&&Vr(b)==="number"?M?(this._rgb[3]=b,this):new gr([this._rgb[0],this._rgb[1],this._rgb[2],b],"rgb"):this._rgb[3]};var bs=Mt;bs.prototype.clipped=function(){return this._rgb._clipped||!1};var Wi=Mt,So=Fr;Wi.prototype.darken=function(b){b===void 0&&(b=1);var M=this,w=M.lab();return w[0]-=So.Kn*b,new Wi(w,"lab").alpha(M.alpha(),!0)},Wi.prototype.brighten=function(b){return b===void 0&&(b=1),this.darken(-b)},Wi.prototype.darker=Wi.prototype.darken,Wi.prototype.brighter=Wi.prototype.brighten;var Eo=Mt;Eo.prototype.get=function(b){var M=b.split("."),w=M[0],N=M[1],$=this[w]();if(N){var Y=w.indexOf(N)-(w.substr(0,2)==="ok"?2:0);if(Y>-1)return $[Y];throw new Error("unknown channel "+N+" in mode "+w)}else return $};var Li=Mt,xc=De.type,$u=Math.pow,Ta=1e-7,yc=20;Li.prototype.luminance=function(b){if(b!==void 0&&xc(b)==="number"){if(b===0)return new Li([0,0,0,this._rgb[3]],"rgb");if(b===1)return new Li([255,255,255,this._rgb[3]],"rgb");var M=this.luminance(),w="rgb",N=yc,$=function(H,Q){var te=H.interpolate(Q,.5,w),pe=te.luminance();return Math.abs(b-pe)<Ta||!N--?te:pe>b?$(H,te):$(te,Q)},Y=(M>b?$(new Li([0,0,0]),this):$(this,new Li([255,255,255]))).rgb();return new Li(Y.concat([this._rgb[3]]))}return ni.apply(void 0,this._rgb.slice(0,3))};var ni=function(b,M,w){return b=Xi(b),M=Xi(M),w=Xi(w),.2126*b+.7152*M+.0722*w},Xi=function(b){return b/=255,b<=.03928?b/12.92:$u((b+.055)/1.055,2.4)},ii={},wa=Mt,_r=De.type,Ks=ii,Ra=function(b,M,w){w===void 0&&(w=.5);for(var N=[],$=arguments.length-3;$-- >0;)N[$]=arguments[$+3];var Y=N[0]||"lrgb";if(!Ks[Y]&&!N.length&&(Y=Object.keys(Ks)[0]),!Ks[Y])throw new Error("interpolation mode "+Y+" is not defined");return _r(b)!=="object"&&(b=new wa(b)),_r(M)!=="object"&&(M=new wa(M)),Ks[Y](b,M,w).alpha(b.alpha()+w*(M.alpha()-b.alpha()))},Ao=Mt,Ca=Ra;Ao.prototype.mix=Ao.prototype.interpolate=function(b,M){M===void 0&&(M=.5);for(var w=[],N=arguments.length-2;N-- >0;)w[N]=arguments[N+2];return Ca.apply(void 0,[this,b,M].concat(w))};var st=Mt;st.prototype.premultiply=function(b){b===void 0&&(b=!1);var M=this._rgb,w=M[3];return b?(this._rgb=[M[0]*w,M[1]*w,M[2]*w,w],this):new st([M[0]*w,M[1]*w,M[2]*w,w],"rgb")};var Kt=Mt,li=Fr;Kt.prototype.saturate=function(b){b===void 0&&(b=1);var M=this,w=M.lch();return w[1]+=li.Kn*b,w[1]<0&&(w[1]=0),new Kt(w,"lch").alpha(M.alpha(),!0)},Kt.prototype.desaturate=function(b){return b===void 0&&(b=1),this.saturate(-b)};var Ms=Mt,Pa=De.type;Ms.prototype.set=function(b,M,w){w===void 0&&(w=!1);var N=b.split("."),$=N[0],Y=N[1],H=this[$]();if(Y){var Q=$.indexOf(Y)-($.substr(0,2)==="ok"?2:0);if(Q>-1){if(Pa(M)=="string")switch(M.charAt(0)){case"+":H[Q]+=+M;break;case"-":H[Q]+=+M;break;case"*":H[Q]*=+M.substr(1);break;case"/":H[Q]/=+M.substr(1);break;default:H[Q]=+M}else if(Pa(M)==="number")H[Q]=M;else throw new Error("unsupported value for Color.set");var te=new Ms(H,$);return w?(this._rgb=te._rgb,this):te}throw new Error("unknown channel "+Y+" in mode "+$)}else return H};var ui=Mt,Dn=function(b,M,w){var N=b._rgb,$=M._rgb;return new ui(N[0]+w*($[0]-N[0]),N[1]+w*($[1]-N[1]),N[2]+w*($[2]-N[2]),"rgb")};ii.rgb=Dn;var hi=Mt,Ia=Math.sqrt,Hr=Math.pow,vn=function(b,M,w){var N=b._rgb,$=N[0],Y=N[1],H=N[2],Q=M._rgb,te=Q[0],pe=Q[1],Ee=Q[2];return new hi(Ia(Hr($,2)*(1-w)+Hr(te,2)*w),Ia(Hr(Y,2)*(1-w)+Hr(pe,2)*w),Ia(Hr(H,2)*(1-w)+Hr(Ee,2)*w),"rgb")};ii.lrgb=vn;var Ss=Mt,bc=function(b,M,w){var N=b.lab(),$=M.lab();return new Ss(N[0]+w*($[0]-N[0]),N[1]+w*($[1]-N[1]),N[2]+w*($[2]-N[2]),"lab")};ii.lab=bc;var Mc=Mt,$i=function(b,M,w,N){var $,Y,H,Q;N==="hsl"?(H=b.hsl(),Q=M.hsl()):N==="hsv"?(H=b.hsv(),Q=M.hsv()):N==="hcg"?(H=b.hcg(),Q=M.hcg()):N==="hsi"?(H=b.hsi(),Q=M.hsi()):N==="lch"||N==="hcl"?(N="hcl",H=b.hcl(),Q=M.hcl()):N==="oklch"&&(H=b.oklch().reverse(),Q=M.oklch().reverse());var te,pe,Ee,He,we,Ze;(N.substr(0,1)==="h"||N==="oklch")&&($=H,te=$[0],Ee=$[1],we=$[2],Y=Q,pe=Y[0],He=Y[1],Ze=Y[2]);var Ye,At,Et,Nt;return!isNaN(te)&&!isNaN(pe)?(pe>te&&pe-te>180?Nt=pe-(te+360):pe<te&&te-pe>180?Nt=pe+360-te:Nt=pe-te,At=te+w*Nt):isNaN(te)?isNaN(pe)?At=Number.NaN:(At=pe,(we==1||we==0)&&N!="hsv"&&(Ye=He)):(At=te,(Ze==1||Ze==0)&&N!="hsv"&&(Ye=Ee)),Ye===void 0&&(Ye=Ee+w*(He-Ee)),Et=we+w*(Ze-we),N==="oklch"?new Mc([Et,Ye,At],N):new Mc([At,Ye,Et],N)},vr=$i,La=function(b,M,w){return vr(b,M,w,"lch")};ii.lch=La,ii.hcl=La;var xr=Mt,Es=function(b,M,w){var N=b.num(),$=M.num();return new xr(N+w*($-N),"num")};ii.num=Es;var Da=$i,Wr=function(b,M,w){return Da(b,M,w,"hcg")};ii.hcg=Wr;var Xr=$i,yr=function(b,M,w){return Xr(b,M,w,"hsi")};ii.hsi=yr;var Ol=$i,Sc=function(b,M,w){return Ol(b,M,w,"hsl")};ii.hsl=Sc;var js=$i,To=function(b,M,w){return js(b,M,w,"hsv")};ii.hsv=To;var fn=Mt,Di=function(b,M,w){var N=b.oklab(),$=M.oklab();return new fn(N[0]+w*($[0]-N[0]),N[1]+w*($[1]-N[1]),N[2]+w*($[2]-N[2]),"oklab")};ii.oklab=Di;var rr=$i,wo=function(b,M,w){return rr(b,M,w,"oklch")};ii.oklch=wo;var qi=Mt,As=De.clip_rgb,Yi=Math.pow,Ua=Math.sqrt,Qs=Math.PI,br=Math.cos,Na=Math.sin,Ti=Math.atan2,Ro=function(b,M,w){M===void 0&&(M="lrgb"),w===void 0&&(w=null);var N=b.length;w||(w=Array.from(new Array(N)).map(function(){return 1}));var $=N/w.reduce(function(At,Et){return At+Et});if(w.forEach(function(At,Et){w[Et]*=$}),b=b.map(function(At){return new qi(At)}),M==="lrgb")return Mr(b,w);for(var Y=b.shift(),H=Y.get(M),Q=[],te=0,pe=0,Ee=0;Ee<H.length;Ee++)if(H[Ee]=(H[Ee]||0)*w[0],Q.push(isNaN(H[Ee])?0:w[0]),M.charAt(Ee)==="h"&&!isNaN(H[Ee])){var He=H[Ee]/180*Qs;te+=br(He)*w[0],pe+=Na(He)*w[0]}var we=Y.alpha()*w[0];b.forEach(function(At,Et){var Nt=At.get(M);we+=At.alpha()*w[Et+1];for(var $t=0;$t<H.length;$t++)if(!isNaN(Nt[$t]))if(Q[$t]+=w[Et+1],M.charAt($t)==="h"){var Pn=Nt[$t]/180*Qs;te+=br(Pn)*w[Et+1],pe+=Na(Pn)*w[Et+1]}else H[$t]+=Nt[$t]*w[Et+1]});for(var Ze=0;Ze<H.length;Ze++)if(M.charAt(Ze)==="h"){for(var Ye=Ti(pe/Q[Ze],te/Q[Ze])/Qs*180;Ye<0;)Ye+=360;for(;Ye>=360;)Ye-=360;H[Ze]=Ye}else H[Ze]=H[Ze]/Q[Ze];return we/=N,new qi(H,M).alpha(we>.99999?1:we,!0)},Mr=function(b,M){for(var w=b.length,N=[0,0,0,0],$=0;$<b.length;$++){var Y=b[$],H=M[$]/w,Q=Y._rgb;N[0]+=Yi(Q[0],2)*H,N[1]+=Yi(Q[1],2)*H,N[2]+=Yi(Q[2],2)*H,N[3]+=Q[3]*H}return N[0]=Ua(N[0]),N[1]=Ua(N[1]),N[2]=Ua(N[2]),N[3]>.9999999&&(N[3]=1),new qi(As(N))},ri=ln,$r=De.type,$e=Math.pow,An=function(b){var M="rgb",w=ri("#ccc"),N=0,$=[0,1],Y=[],H=[0,0],Q=!1,te=[],pe=!1,Ee=0,He=1,we=!1,Ze={},Ye=!0,At=1,Et=function(Re){if(Re=Re||["#fff","#000"],Re&&$r(Re)==="string"&&ri.brewer&&ri.brewer[Re.toLowerCase()]&&(Re=ri.brewer[Re.toLowerCase()]),$r(Re)==="array"){Re.length===1&&(Re=[Re[0],Re[0]]),Re=Re.slice(0);for(var ut=0;ut<Re.length;ut++)Re[ut]=ri(Re[ut]);Y.length=0;for(var It=0;It<Re.length;It++)Y.push(It/(Re.length-1))}return si(),te=Re},Nt=function(Re){if(Q!=null){for(var ut=Q.length-1,It=0;It<ut&&Re>=Q[It];)It++;return It-1}return 0},$t=function(Re){return Re},Pn=function(Re){return Re},tt=function(Re,ut){var It,Tt;if(ut==null&&(ut=!1),isNaN(Re)||Re===null)return w;if(ut)Tt=Re;else if(Q&&Q.length>2){var Bn=Nt(Re);Tt=Bn/(Q.length-2)}else He!==Ee?Tt=(Re-Ee)/(He-Ee):Tt=1;Tt=Pn(Tt),ut||(Tt=$t(Tt)),At!==1&&(Tt=$e(Tt,At)),Tt=H[0]+Tt*(1-H[0]-H[1]),Tt=Math.min(1,Math.max(0,Tt));var un=Math.floor(Tt*1e4);if(Ye&&Ze[un])It=Ze[un];else{if($r(te)==="array")for(var kt=0;kt<Y.length;kt++){var jt=Y[kt];if(Tt<=jt){It=te[kt];break}if(Tt>=jt&&kt===Y.length-1){It=te[kt];break}if(Tt>jt&&Tt<Y[kt+1]){Tt=(Tt-jt)/(Y[kt+1]-jt),It=ri.interpolate(te[kt],te[kt+1],Tt,M);break}}else $r(te)==="function"&&(It=te(Tt));Ye&&(Ze[un]=It)}return It},si=function(){return Ze={}};Et(b);var zt=function(Re){var ut=ri(tt(Re));return pe&&ut[pe]?ut[pe]():ut};return zt.classes=function(Re){if(Re!=null){if($r(Re)==="array")Q=Re,$=[Re[0],Re[Re.length-1]];else{var ut=ri.analyze($);Re===0?Q=[ut.min,ut.max]:Q=ri.limits(ut,"e",Re)}return zt}return Q},zt.domain=function(Re){if(!arguments.length)return $;Ee=Re[0],He=Re[Re.length-1],Y=[];var ut=te.length;if(Re.length===ut&&Ee!==He)for(var It=0,Tt=Array.from(Re);It<Tt.length;It+=1){var Bn=Tt[It];Y.push((Bn-Ee)/(He-Ee))}else{for(var un=0;un<ut;un++)Y.push(un/(ut-1));if(Re.length>2){var kt=Re.map(function(Qt,rn){return rn/(Re.length-1)}),jt=Re.map(function(Qt){return(Qt-Ee)/(He-Ee)});jt.every(function(Qt,rn){return kt[rn]===Qt})||(Pn=function(Qt){if(Qt<=0||Qt>=1)return Qt;for(var rn=0;Qt>=jt[rn+1];)rn++;var Zi=(Qt-jt[rn])/(jt[rn+1]-jt[rn]),Kr=kt[rn]+Zi*(kt[rn+1]-kt[rn]);return Kr})}}return $=[Ee,He],zt},zt.mode=function(Re){return arguments.length?(M=Re,si(),zt):M},zt.range=function(Re,ut){return Et(Re),zt},zt.out=function(Re){return pe=Re,zt},zt.spread=function(Re){return arguments.length?(N=Re,zt):N},zt.correctLightness=function(Re){return Re==null&&(Re=!0),we=Re,si(),we?$t=function(ut){for(var It=tt(0,!0).lab()[0],Tt=tt(1,!0).lab()[0],Bn=It>Tt,un=tt(ut,!0).lab()[0],kt=It+(Tt-It)*ut,jt=un-kt,Qt=0,rn=1,Zi=20;Math.abs(jt)>.01&&Zi-- >0;)(function(){return Bn&&(jt*=-1),jt<0?(Qt=ut,ut+=(rn-ut)*.5):(rn=ut,ut+=(Qt-ut)*.5),un=tt(ut,!0).lab()[0],jt=un-kt})();return ut}:$t=function(ut){return ut},zt},zt.padding=function(Re){return Re!=null?($r(Re)==="number"&&(Re=[Re,Re]),H=Re,zt):H},zt.colors=function(Re,ut){arguments.length<2&&(ut="hex");var It=[];if(arguments.length===0)It=te.slice(0);else if(Re===1)It=[zt(.5)];else if(Re>1){var Tt=$[0],Bn=$[1]-Tt;It=Fa(0,Re,!1).map(function(rn){return zt(Tt+rn/(Re-1)*Bn)})}else{b=[];var un=[];if(Q&&Q.length>2)for(var kt=1,jt=Q.length,Qt=1<=jt;Qt?kt<jt:kt>jt;Qt?kt++:kt--)un.push((Q[kt-1]+Q[kt])*.5);else un=$;It=un.map(function(rn){return zt(rn)})}return ri[ut]&&(It=It.map(function(rn){return rn[ut]()})),It},zt.cache=function(Re){return Re!=null?(Ye=Re,zt):Ye},zt.gamma=function(Re){return Re!=null?(At=Re,zt):At},zt.nodata=function(Re){return Re!=null?(w=ri(Re),zt):w},zt};function Fa(b,M,w){for(var N=[],$=b<M,Y=w?$?M+1:M-1:M,H=b;$?H<Y:H>Y;$?H++:H--)N.push(H);return N}var Ui=Mt,Sr=An,Ni=function(b){for(var M=[1,1],w=1;w<b;w++){for(var N=[1],$=1;$<=M.length;$++)N[$]=(M[$]||0)+M[$-1];M=N}return M},ea=function(b){var M,w,N,$,Y,H,Q;if(b=b.map(function(we){return new Ui(we)}),b.length===2)M=b.map(function(we){return we.lab()}),Y=M[0],H=M[1],$=function(we){var Ze=[0,1,2].map(function(Ye){return Y[Ye]+we*(H[Ye]-Y[Ye])});return new Ui(Ze,"lab")};else if(b.length===3)w=b.map(function(we){return we.lab()}),Y=w[0],H=w[1],Q=w[2],$=function(we){var Ze=[0,1,2].map(function(Ye){return(1-we)*(1-we)*Y[Ye]+2*(1-we)*we*H[Ye]+we*we*Q[Ye]});return new Ui(Ze,"lab")};else if(b.length===4){var te;N=b.map(function(we){return we.lab()}),Y=N[0],H=N[1],Q=N[2],te=N[3],$=function(we){var Ze=[0,1,2].map(function(Ye){return(1-we)*(1-we)*(1-we)*Y[Ye]+3*(1-we)*(1-we)*we*H[Ye]+3*(1-we)*we*we*Q[Ye]+we*we*we*te[Ye]});return new Ui(Ze,"lab")}}else if(b.length>=5){var pe,Ee,He;pe=b.map(function(we){return we.lab()}),He=b.length-1,Ee=Ni(He),$=function(we){var Ze=1-we,Ye=[0,1,2].map(function(At){return pe.reduce(function(Et,Nt,$t){return Et+Ee[$t]*Math.pow(Ze,He-$t)*Math.pow(we,$t)*Nt[At]},0)});return new Ui(Ye,"lab")}}else throw new RangeError("No point in running bezier with only one color.");return $},fi=function(b){var M=ea(b);return M.scale=function(){return Sr(M)},M},Ts=ln,sr=function(b,M,w){if(!sr[w])throw new Error("unknown blend mode "+w);return sr[w](b,M)},an=function(b){return function(M,w){var N=Ts(w).rgb(),$=Ts(M).rgb();return Ts.rgb(b(N,$))}},wi=function(b){return function(M,w){var N=[];return N[0]=b(M[0],w[0]),N[1]=b(M[1],w[1]),N[2]=b(M[2],w[2]),N}},xn=function(b){return b},qu=function(b,M){return b*M/255},kh=function(b,M){return b>M?M:b},Gh=function(b,M){return b>M?b:M},Yu=function(b,M){return 255*(1-(1-b/255)*(1-M/255))},Ec=function(b,M){return M<128?2*b*M/255:255*(1-2*(1-b/255)*(1-M/255))},Ac=function(b,M){return 255*(1-(1-M/255)/(b/255))},Tc=function(b,M){return b===255?255:(b=255*(M/255)/(1-b/255),b>255?255:b)};sr.normal=an(wi(xn)),sr.multiply=an(wi(qu)),sr.screen=an(wi(Yu)),sr.overlay=an(wi(Ec)),sr.darken=an(wi(kh)),sr.lighten=an(wi(Gh)),sr.dodge=an(wi(Tc)),sr.burn=an(wi(Ac));for(var Vh=sr,Ke=De.type,Hh=De.clip_rgb,di=De.TWOPI,wc=Math.pow,qr=Math.sin,Jn=Math.cos,ta=ln,Tn=function(b,M,w,N,$){b===void 0&&(b=300),M===void 0&&(M=-1.5),w===void 0&&(w=1),N===void 0&&(N=1),$===void 0&&($=[0,1]);var Y=0,H;Ke($)==="array"?H=$[1]-$[0]:(H=0,$=[$,$]);var Q=function(te){var pe=di*((b+120)/360+M*te),Ee=wc($[0]+H*te,N),He=Y!==0?w[0]+te*Y:w,we=He*Ee*(1-Ee)/2,Ze=Jn(pe),Ye=qr(pe),At=Ee+we*(-.14861*Ze+1.78277*Ye),Et=Ee+we*(-.29227*Ze-.90649*Ye),Nt=Ee+we*(1.97294*Ze);return ta(Hh([At*255,Et*255,Nt*255,1]))};return Q.start=function(te){return te==null?b:(b=te,Q)},Q.rotations=function(te){return te==null?M:(M=te,Q)},Q.gamma=function(te){return te==null?N:(N=te,Q)},Q.hue=function(te){return te==null?w:(w=te,Ke(w)==="array"?(Y=w[1]-w[0],Y===0&&(w=w[1])):Y=0,Q)},Q.lightness=function(te){return te==null?$:(Ke(te)==="array"?($=te,H=te[1]-te[0]):($=[te,te],H=0),Q)},Q.scale=function(){return ta.scale(Q)},Q.hue(w),Q},Pt=Mt,Co="0123456789abcdef",Yr=Math.floor,Oa=Math.random,Bl=function(){for(var b="#",M=0;M<6;M++)b+=Co.charAt(Yr(Oa()*16));return new Pt(b,"hex")},Zr=Ii,ws=Math.log,na=Math.pow,Rc=Math.floor,Ba=Math.abs,za=function(b,M){M===void 0&&(M=null);var w={min:Number.MAX_VALUE,max:Number.MAX_VALUE*-1,sum:0,values:[],count:0};return Zr(b)==="object"&&(b=Object.values(b)),b.forEach(function(N){M&&Zr(N)==="object"&&(N=N[M]),N!=null&&!isNaN(N)&&(w.values.push(N),w.sum+=N,N<w.min&&(w.min=N),N>w.max&&(w.max=N),w.count+=1)}),w.domain=[w.min,w.max],w.limits=function(N,$){return ka(w,N,$)},w},ka=function(b,M,w){M===void 0&&(M="equal"),w===void 0&&(w=7),Zr(b)=="array"&&(b=za(b));var N=b.min,$=b.max,Y=b.values.sort(function(Uc,Nc){return Uc-Nc});if(w===1)return[N,$];var H=[];if(M.substr(0,1)==="c"&&(H.push(N),H.push($)),M.substr(0,1)==="e"){H.push(N);for(var Q=1;Q<w;Q++)H.push(N+Q/w*($-N));H.push($)}else if(M.substr(0,1)==="l"){if(N<=0)throw new Error("Logarithmic scales are only possible for values > 0");var te=Math.LOG10E*ws(N),pe=Math.LOG10E*ws($);H.push(N);for(var Ee=1;Ee<w;Ee++)H.push(na(10,te+Ee/w*(pe-te)));H.push($)}else if(M.substr(0,1)==="q"){H.push(N);for(var He=1;He<w;He++){var we=(Y.length-1)*He/w,Ze=Rc(we);if(Ze===we)H.push(Y[Ze]);else{var Ye=we-Ze;H.push(Y[Ze]*(1-Ye)+Y[Ze+1]*Ye)}}H.push($)}else if(M.substr(0,1)==="k"){var At,Et=Y.length,Nt=new Array(Et),$t=new Array(w),Pn=!0,tt=0,si=null;si=[],si.push(N);for(var zt=1;zt<w;zt++)si.push(N+zt/w*($-N));for(si.push($);Pn;){for(var Re=0;Re<w;Re++)$t[Re]=0;for(var ut=0;ut<Et;ut++)for(var It=Y[ut],Tt=Number.MAX_VALUE,Bn=void 0,un=0;un<w;un++){var kt=Ba(si[un]-It);kt<Tt&&(Tt=kt,Bn=un),$t[Bn]++,Nt[ut]=Bn}for(var jt=new Array(w),Qt=0;Qt<w;Qt++)jt[Qt]=null;for(var rn=0;rn<Et;rn++)At=Nt[rn],jt[At]===null?jt[At]=Y[rn]:jt[At]+=Y[rn];for(var Zi=0;Zi<w;Zi++)jt[Zi]*=1/$t[Zi];Pn=!1;for(var Kr=0;Kr<w;Kr++)if(jt[Kr]!==si[Kr]){Pn=!0;break}si=jt,tt++,tt>200&&(Pn=!1)}for(var jr={},ra=0;ra<w;ra++)jr[ra]=[];for(var sa=0;sa<Et;sa++)At=Nt[sa],jr[At].push(Y[sa]);for(var Er=[],Cs=0;Cs<w;Cs++)Er.push(jr[Cs][0]),Er.push(jr[Cs][jr[Cs].length-1]);Er=Er.sort(function(Uc,Nc){return Uc-Nc}),H.push(Er[0]);for(var Va=1;Va<Er.length;Va+=2){var Ps=Er[Va];!isNaN(Ps)&&H.indexOf(Ps)===-1&&H.push(Ps)}}return H},Ga={analyze:za,limits:ka},Cc=Mt,zl=function(b,M){b=new Cc(b),M=new Cc(M);var w=b.luminance(),N=M.luminance();return w>N?(w+.05)/(N+.05):(N+.05)/(w+.05)},Pc=Mt,Fi=Math.sqrt,dn=Math.pow,Wn=Math.min,kl=Math.max,ia=Math.atan2,ar=Math.abs,or=Math.cos,Xn=Math.sin,Gl=Math.exp,Po=Math.PI,Vl=function(b,M,w,N,$){w===void 0&&(w=1),N===void 0&&(N=1),$===void 0&&($=1);var Y=function(Ps){return 360*Ps/(2*Po)},H=function(Ps){return 2*Po*Ps/360};b=new Pc(b),M=new Pc(M);var Q=Array.from(b.lab()),te=Q[0],pe=Q[1],Ee=Q[2],He=Array.from(M.lab()),we=He[0],Ze=He[1],Ye=He[2],At=(te+we)/2,Et=Fi(dn(pe,2)+dn(Ee,2)),Nt=Fi(dn(Ze,2)+dn(Ye,2)),$t=(Et+Nt)/2,Pn=.5*(1-Fi(dn($t,7)/(dn($t,7)+dn(25,7)))),tt=pe*(1+Pn),si=Ze*(1+Pn),zt=Fi(dn(tt,2)+dn(Ee,2)),Re=Fi(dn(si,2)+dn(Ye,2)),ut=(zt+Re)/2,It=Y(ia(Ee,tt)),Tt=Y(ia(Ye,si)),Bn=It>=0?It:It+360,un=Tt>=0?Tt:Tt+360,kt=ar(Bn-un)>180?(Bn+un+360)/2:(Bn+un)/2,jt=1-.17*or(H(kt-30))+.24*or(H(2*kt))+.32*or(H(3*kt+6))-.2*or(H(4*kt-63)),Qt=un-Bn;Qt=ar(Qt)<=180?Qt:un<=Bn?Qt+360:Qt-360,Qt=2*Fi(zt*Re)*Xn(H(Qt)/2);var rn=we-te,Zi=Re-zt,Kr=1+.015*dn(At-50,2)/Fi(20+dn(At-50,2)),jr=1+.045*ut,ra=1+.015*ut*jt,sa=30*Gl(-dn((kt-275)/25,2)),Er=2*Fi(dn(ut,7)/(dn(ut,7)+dn(25,7))),Cs=-Er*Xn(2*H(sa)),Va=Fi(dn(rn/(w*Kr),2)+dn(Zi/(N*jr),2)+dn(Qt/($*ra),2)+Cs*(Zi/(N*jr))*(Qt/($*ra)));return kl(0,Wn(100,Va))},Ic=Mt,Hl=function(b,M,w){w===void 0&&(w="lab"),b=new Ic(b),M=new Ic(M);var N=b.get(w),$=M.get(w),Y=0;for(var H in N){var Q=(N[H]||0)-($[H]||0);Y+=Q*Q}return Math.sqrt(Y)},cr=Mt,Io=function(){for(var b=[],M=arguments.length;M--;)b[M]=arguments[M];try{return new(Function.prototype.bind.apply(cr,[null].concat(b))),!0}catch(w){return!1}},lr=ln,Lc=An,Wl={cool:function(){return Lc([lr.hsl(180,1,.9),lr.hsl(250,.7,.4)])},hot:function(){return Lc(["#000","#f00","#ff0","#fff"]).mode("rgb")}},Cn={OrRd:["#fff7ec","#fee8c8","#fdd49e","#fdbb84","#fc8d59","#ef6548","#d7301f","#b30000","#7f0000"],PuBu:["#fff7fb","#ece7f2","#d0d1e6","#a6bddb","#74a9cf","#3690c0","#0570b0","#045a8d","#023858"],BuPu:["#f7fcfd","#e0ecf4","#bfd3e6","#9ebcda","#8c96c6","#8c6bb1","#88419d","#810f7c","#4d004b"],Oranges:["#fff5eb","#fee6ce","#fdd0a2","#fdae6b","#fd8d3c","#f16913","#d94801","#a63603","#7f2704"],BuGn:["#f7fcfd","#e5f5f9","#ccece6","#99d8c9","#66c2a4","#41ae76","#238b45","#006d2c","#00441b"],YlOrBr:["#ffffe5","#fff7bc","#fee391","#fec44f","#fe9929","#ec7014","#cc4c02","#993404","#662506"],YlGn:["#ffffe5","#f7fcb9","#d9f0a3","#addd8e","#78c679","#41ab5d","#238443","#006837","#004529"],Reds:["#fff5f0","#fee0d2","#fcbba1","#fc9272","#fb6a4a","#ef3b2c","#cb181d","#a50f15","#67000d"],RdPu:["#fff7f3","#fde0dd","#fcc5c0","#fa9fb5","#f768a1","#dd3497","#ae017e","#7a0177","#49006a"],Greens:["#f7fcf5","#e5f5e0","#c7e9c0","#a1d99b","#74c476","#41ab5d","#238b45","#006d2c","#00441b"],YlGnBu:["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#253494","#081d58"],Purples:["#fcfbfd","#efedf5","#dadaeb","#bcbddc","#9e9ac8","#807dba","#6a51a3","#54278f","#3f007d"],GnBu:["#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4","#4eb3d3","#2b8cbe","#0868ac","#084081"],Greys:["#ffffff","#f0f0f0","#d9d9d9","#bdbdbd","#969696","#737373","#525252","#252525","#000000"],YlOrRd:["#ffffcc","#ffeda0","#fed976","#feb24c","#fd8d3c","#fc4e2a","#e31a1c","#bd0026","#800026"],PuRd:["#f7f4f9","#e7e1ef","#d4b9da","#c994c7","#df65b0","#e7298a","#ce1256","#980043","#67001f"],Blues:["#f7fbff","#deebf7","#c6dbef","#9ecae1","#6baed6","#4292c6","#2171b5","#08519c","#08306b"],PuBuGn:["#fff7fb","#ece2f0","#d0d1e6","#a6bddb","#67a9cf","#3690c0","#02818a","#016c59","#014636"],Viridis:["#440154","#482777","#3f4a8a","#31678e","#26838f","#1f9d8a","#6cce5a","#b6de2b","#fee825"],Spectral:["#9e0142","#d53e4f","#f46d43","#fdae61","#fee08b","#ffffbf","#e6f598","#abdda4","#66c2a5","#3288bd","#5e4fa2"],RdYlGn:["#a50026","#d73027","#f46d43","#fdae61","#fee08b","#ffffbf","#d9ef8b","#a6d96a","#66bd63","#1a9850","#006837"],RdBu:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#f7f7f7","#d1e5f0","#92c5de","#4393c3","#2166ac","#053061"],PiYG:["#8e0152","#c51b7d","#de77ae","#f1b6da","#fde0ef","#f7f7f7","#e6f5d0","#b8e186","#7fbc41","#4d9221","#276419"],PRGn:["#40004b","#762a83","#9970ab","#c2a5cf","#e7d4e8","#f7f7f7","#d9f0d3","#a6dba0","#5aae61","#1b7837","#00441b"],RdYlBu:["#a50026","#d73027","#f46d43","#fdae61","#fee090","#ffffbf","#e0f3f8","#abd9e9","#74add1","#4575b4","#313695"],BrBG:["#543005","#8c510a","#bf812d","#dfc27d","#f6e8c3","#f5f5f5","#c7eae5","#80cdc1","#35978f","#01665e","#003c30"],RdGy:["#67001f","#b2182b","#d6604d","#f4a582","#fddbc7","#ffffff","#e0e0e0","#bababa","#878787","#4d4d4d","#1a1a1a"],PuOr:["#7f3b08","#b35806","#e08214","#fdb863","#fee0b6","#f7f7f7","#d8daeb","#b2abd2","#8073ac","#542788","#2d004b"],Set2:["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"],Accent:["#7fc97f","#beaed4","#fdc086","#ffff99","#386cb0","#f0027f","#bf5b17","#666666"],Set1:["#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628","#f781bf","#999999"],Set3:["#8dd3c7","#ffffb3","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5","#d9d9d9","#bc80bd","#ccebc5","#ffed6f"],Dark2:["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02","#a6761d","#666666"],Paired:["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99","#b15928"],Pastel2:["#b3e2cd","#fdcdac","#cbd5e8","#f4cae4","#e6f5c9","#fff2ae","#f1e2cc","#cccccc"],Pastel1:["#fbb4ae","#b3cde3","#ccebc5","#decbe4","#fed9a6","#ffffcc","#e5d8bd","#fddaec","#f2f2f2"]},Jr=0,Rs=Object.keys(Cn);Jr<Rs.length;Jr+=1){var Xl=Rs[Jr];Cn[Xl.toLowerCase()]=Cn[Xl]}var Lo=Cn,On=ln;On.average=Ro,On.bezier=fi,On.blend=Vh,On.cubehelix=Tn,On.mix=On.interpolate=Ra,On.random=Bl,On.scale=An,On.analyze=Ga.analyze,On.contrast=zl,On.deltaE=Vl,On.distance=Hl,On.limits=Ga.limits,On.valid=Io,On.scales=Wl,On.colors=gs,On.brewer=Lo;var Dc=On;return Dc})},99477:function(zi,Fn,Rn){"use strict";Rn.d(Fn,{CP7:function(){return _m},DvJ:function(){return ar},Kj0:function(){return Wn},Pa4:function(){return B},YBo:function(){return s0},cPb:function(){return Cn},cek:function(){return p0},xsS:function(){return vm}});const Sn="162",Ja={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},bi={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},ha=0,wr=1,Ii=2,Ka=3,vh=0,rl=1,hu=2,Mi=3,De=0,Jt=1,ur=2,Rr=0,is=1,Cr=2,Is=3,Mt=4,ja=5,ln=100,fu=101,du=102,hn=103,sl=104,pu=200,mu=201,al=202,zo=203,Qa=204,Ls=205,gu=206,_u=207,vu=208,xu=209,yu=210,ko=211,bu=212,Mu=213,Pr=214,rs=0,ji=1,Su=2,eo=3,Eu=4,Au=5,Go=6,Tu=7,to=0,wu=1,Vo=2,Ir=0,ol=1,cl=2,ll=3,Ho=4,Wo=5,ul=6,hl=7,fa="attached",Ds="detached",Us=300,ki=301,hr=302,Ns=303,ss=304,Fs=306,no=1e3,Qn=1001,da=1002,En=1003,Xo=1004,xh=1004,Os=1005,yh=1005,mn=1006,Lr=1007,fl=1007,Gi=1008,pa=1008,as=1009,Ru=1010,$o=1011,io=1012,ro=1013,Qi=1014,ei=1015,ma=1016,qo=1017,Dr=1018,os=1020,Yo=1021,gn=1023,dl=1024,Cu=1025,Ur=1026,Bs=1027,Zo=1028,pl=1029,ml=1030,gl=1031,Jo=1033,cs=33776,Ko=33777,so=33778,ao=33779,ga=35840,jo=35841,_l=35842,ls=35843,us=36196,oo=37492,hs=37496,_a=37808,zs=37809,vl=37810,co=37811,xl=37812,Qo=37813,ec=37814,tc=37815,yl=37816,bl=37817,fs=37818,nc=37819,ic=37820,lo=37821,uo=36492,rc=36494,Pu=36495,ds=36283,Ml=36284,sc=36285,Ut=36286,Iu=2200,Lu=2201,Du=2202,ks=2300,ho=2301,va=2302,Nr=2400,ps=2401,Fr=2402,er=2500,fo=2501,ac=0,bh=1,po=2,Gs=3200,Sl=3201,tr=0,fr=1,nr="",Si="srgb",ir="srgb-linear",xa="display-p3",Vs="display-p3-linear",ai="linear",Ht="srgb",mo="rec709",Hs="p3",El=0,ms=7680,Mh=7681,Sh=7682,Eh=7683,Ah=34055,Th=34056,wh=5386,Rh=512,Uu=513,Ch=514,Ph=515,Ih=516,Lh=517,Dh=518,oc=519,Al=512,Nu=513,Fu=514,Tl=515,wl=516,Ou=517,Bu=518,Uh=519,cc=35044,Nh=35048,Fh=35040,ya=35045,Oh=35049,go=35041,ad=35046,dr=35050,Ws=35042,_o="100",Xs="300 es",ti=1035,Wt=2e3,gs=2001;class Or{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,e);e.target=null}}}const _n=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let vo=1234567;const oi=Math.PI/180,$s=180/Math.PI;function Ei(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(_n[s&255]+_n[s>>8&255]+_n[s>>16&255]+_n[s>>24&255]+"-"+_n[e&255]+_n[e>>8&255]+"-"+_n[e>>16&15|64]+_n[e>>24&255]+"-"+_n[t&63|128]+_n[t>>8&255]+"-"+_n[t>>16&255]+_n[t>>24&255]+_n[n&255]+_n[n>>8&255]+_n[n>>16&255]+_n[n>>24&255]).toLowerCase()}function en(s,e,t){return Math.max(e,Math.min(t,s))}function Vi(s,e){return(s%e+e)%e}function Br(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function zr(s,e,t){return s!==e?(t-s)/(e-s):0}function kr(s,e,t){return(1-t)*s+t*e}function zu(s,e,t,n){return kr(s,e,1-Math.exp(-t*n))}function ku(s,e=1){return e-Math.abs(Vi(s,e*2)-e)}function Rl(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function Cl(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function Gu(s,e){return s+Math.floor(Math.random()*(e-s+1))}function lc(s,e){return s+Math.random()*(e-s)}function uc(s){return s*(.5-Math.random())}function qs(s){s!==void 0&&(vo=s);let e=vo+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function ba(s){return s*oi}function hc(s){return s*$s}function xo(s){return(s&s-1)===0&&s!==0}function Pl(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function _s(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function Vu(s,e,t,n,i){const r=Math.cos,a=Math.sin,o=r(t/2),l=a(t/2),h=r((e+n)/2),d=a((e+n)/2),p=r((e-n)/2),m=a((e-n)/2),g=r((n-e)/2),x=a((n-e)/2);switch(i){case"XYX":s.set(o*d,l*p,l*m,o*h);break;case"YZY":s.set(l*m,o*d,l*p,o*h);break;case"ZXZ":s.set(l*p,l*m,o*d,o*h);break;case"XZX":s.set(o*d,l*x,l*g,o*h);break;case"YXY":s.set(l*g,o*d,l*x,o*h);break;case"ZYZ":s.set(l*x,l*g,o*d,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Zn(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function yt(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const Il={DEG2RAD:oi,RAD2DEG:$s,generateUUID:Ei,clamp:en,euclideanModulo:Vi,mapLinear:Br,inverseLerp:zr,lerp:kr,damp:zu,pingpong:ku,smoothstep:Rl,smootherstep:Cl,randInt:Gu,randFloat:lc,randFloatSpread:uc,seededRandom:qs,degToRad:ba,radToDeg:hc,isPowerOfTwo:xo,ceilPowerOfTwo:Pl,floorPowerOfTwo:_s,setQuaternionFromProperEuler:Vu,normalize:yt,denormalize:Zn};class ve{constructor(e=0,t=0){ve.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(en(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class bt{constructor(e,t,n,i,r,a,o,l,h){bt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,a,o,l,h)}set(e,t,n,i,r,a,o,l,h){const d=this.elements;return d[0]=e,d[1]=i,d[2]=o,d[3]=t,d[4]=r,d[5]=l,d[6]=n,d[7]=a,d[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[3],l=n[6],h=n[1],d=n[4],p=n[7],m=n[2],g=n[5],x=n[8],A=i[0],y=i[3],_=i[6],T=i[1],S=i[4],P=i[7],V=i[2],F=i[5],O=i[8];return r[0]=a*A+o*T+l*V,r[3]=a*y+o*S+l*F,r[6]=a*_+o*P+l*O,r[1]=h*A+d*T+p*V,r[4]=h*y+d*S+p*F,r[7]=h*_+d*P+p*O,r[2]=m*A+g*T+x*V,r[5]=m*y+g*S+x*F,r[8]=m*_+g*P+x*O,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],h=e[7],d=e[8];return t*a*d-t*o*h-n*r*d+n*o*l+i*r*h-i*a*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],h=e[7],d=e[8],p=d*a-o*h,m=o*l-d*r,g=h*r-a*l,x=t*p+n*m+i*g;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const A=1/x;return e[0]=p*A,e[1]=(i*h-d*n)*A,e[2]=(o*n-i*a)*A,e[3]=m*A,e[4]=(d*t-i*l)*A,e[5]=(i*r-o*t)*A,e[6]=g*A,e[7]=(n*l-h*t)*A,e[8]=(a*t-n*r)*A,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,o){const l=Math.cos(r),h=Math.sin(r);return this.set(n*l,n*h,-n*(l*a+h*o)+a+e,-i*h,i*l,-i*(-h*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(yo.makeScale(e,t)),this}rotate(e){return this.premultiply(yo.makeRotation(-e)),this}translate(e,t){return this.premultiply(yo.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const yo=new bt;function Ma(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const Sa={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Gr(s,e){return new Sa[s](e)}function Ea(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function Hu(){const s=Ea("canvas");return s.style.display="block",s}const bo={};function Ll(s){s in bo||(bo[s]=!0,console.warn(s))}const Dl=new bt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Ul=new bt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Aa={[ir]:{transfer:ai,primaries:mo,toReference:s=>s,fromReference:s=>s},[Si]:{transfer:Ht,primaries:mo,toReference:s=>s.convertSRGBToLinear(),fromReference:s=>s.convertLinearToSRGB()},[Vs]:{transfer:ai,primaries:Hs,toReference:s=>s.applyMatrix3(Ul),fromReference:s=>s.applyMatrix3(Dl)},[xa]:{transfer:Ht,primaries:Hs,toReference:s=>s.convertSRGBToLinear().applyMatrix3(Ul),fromReference:s=>s.applyMatrix3(Dl).convertLinearToSRGB()}},fc=new Set([ir,Vs]),sn={enabled:!0,_workingColorSpace:ir,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(s){if(!fc.has(s))throw new Error(`Unsupported working color space, "${s}".`);this._workingColorSpace=s},convert:function(s,e,t){if(this.enabled===!1||e===t||!e||!t)return s;const n=Aa[e].toReference,i=Aa[t].fromReference;return i(n(s))},fromWorkingColorSpace:function(s,e){return this.convert(s,this._workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this._workingColorSpace)},getPrimaries:function(s){return Aa[s].primaries},getTransfer:function(s){return s===nr?ai:Aa[s].transfer}};function pr(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function dc(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let Ys;class pc{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Ys===void 0&&(Ys=Ea("canvas")),Ys.width=e.width,Ys.height=e.height;const n=Ys.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Ys}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const t=Ea("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let a=0;a<r.length;a++)r[a]=pr(r[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(pr(t[n]/255)*255):t[n]=pr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let mc=0;class Zs{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:mc++}),this.uuid=Ei(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let a=0,o=i.length;a<o;a++)i[a].isDataTexture?r.push(gc(i[a].image)):r.push(gc(i[a]))}else r=gc(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function gc(s){return typeof HTMLImageElement!="undefined"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&s instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&s instanceof ImageBitmap?pc.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Wu=0;class Hn extends Or{constructor(e=Hn.DEFAULT_IMAGE,t=Hn.DEFAULT_MAPPING,n=Qn,i=Qn,r=mn,a=Gi,o=gn,l=as,h=Hn.DEFAULT_ANISOTROPY,d=nr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Wu++}),this.uuid=Ei(),this.name="",this.source=new Zs(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=h,this.format=o,this.internalFormat=null,this.type=l,this.offset=new ve(0,0),this.repeat=new ve(1,1),this.center=new ve(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new bt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Us)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case no:e.x=e.x-Math.floor(e.x);break;case Qn:e.x=e.x<0?0:1;break;case da:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case no:e.y=e.y-Math.floor(e.y);break;case Qn:e.y=e.y<0?0:1;break;case da:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}Hn.DEFAULT_IMAGE=null,Hn.DEFAULT_MAPPING=Us,Hn.DEFAULT_ANISOTROPY=1;class nn{constructor(e=0,t=0,n=0,i=1){nn.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const l=e.elements,h=l[0],d=l[4],p=l[8],m=l[1],g=l[5],x=l[9],A=l[2],y=l[6],_=l[10];if(Math.abs(d-m)<.01&&Math.abs(p-A)<.01&&Math.abs(x-y)<.01){if(Math.abs(d+m)<.1&&Math.abs(p+A)<.1&&Math.abs(x+y)<.1&&Math.abs(h+g+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const S=(h+1)/2,P=(g+1)/2,V=(_+1)/2,F=(d+m)/4,O=(p+A)/4,q=(x+y)/4;return S>P&&S>V?S<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(S),i=F/n,r=O/n):P>V?P<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(P),n=F/i,r=q/i):V<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(V),n=O/r,i=q/r),this.set(n,i,r,t),this}let T=Math.sqrt((y-x)*(y-x)+(p-A)*(p-A)+(m-d)*(m-d));return Math.abs(T)<.001&&(T=1),this.x=(y-x)/T,this.y=(p-A)/T,this.z=(m-d)/T,this.w=Math.acos((h+g+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Xu extends Or{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new nn(0,0,e,t),this.scissorTest=!1,this.viewport=new nn(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:mn,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0,count:1},n);const r=new Hn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);r.flipY=!1,r.generateMipmaps=n.generateMipmaps,r.internalFormat=n.internalFormat,this.textures=[];const a=n.count;for(let o=0;o<a;o++)this.textures[o]=r.clone(),this.textures[o].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Zs(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class vs extends Xu{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class _c extends Hn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=En,this.minFilter=En,this.wrapR=Qn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Bh extends null{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new _c(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Nl extends Hn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=En,this.minFilter=En,this.wrapR=Qn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class zh extends null{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Nl(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Ai{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,o){let l=n[i+0],h=n[i+1],d=n[i+2],p=n[i+3];const m=r[a+0],g=r[a+1],x=r[a+2],A=r[a+3];if(o===0){e[t+0]=l,e[t+1]=h,e[t+2]=d,e[t+3]=p;return}if(o===1){e[t+0]=m,e[t+1]=g,e[t+2]=x,e[t+3]=A;return}if(p!==A||l!==m||h!==g||d!==x){let y=1-o;const _=l*m+h*g+d*x+p*A,T=_>=0?1:-1,S=1-_*_;if(S>Number.EPSILON){const V=Math.sqrt(S),F=Math.atan2(V,_*T);y=Math.sin(y*F)/V,o=Math.sin(o*F)/V}const P=o*T;if(l=l*y+m*P,h=h*y+g*P,d=d*y+x*P,p=p*y+A*P,y===1-o){const V=1/Math.sqrt(l*l+h*h+d*d+p*p);l*=V,h*=V,d*=V,p*=V}}e[t]=l,e[t+1]=h,e[t+2]=d,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,r,a){const o=n[i],l=n[i+1],h=n[i+2],d=n[i+3],p=r[a],m=r[a+1],g=r[a+2],x=r[a+3];return e[t]=o*x+d*p+l*g-h*m,e[t+1]=l*x+d*m+h*p-o*g,e[t+2]=h*x+d*g+o*m-l*p,e[t+3]=d*x-o*p-l*m-h*g,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,r=e._z,a=e._order,o=Math.cos,l=Math.sin,h=o(n/2),d=o(i/2),p=o(r/2),m=l(n/2),g=l(i/2),x=l(r/2);switch(a){case"XYZ":this._x=m*d*p+h*g*x,this._y=h*g*p-m*d*x,this._z=h*d*x+m*g*p,this._w=h*d*p-m*g*x;break;case"YXZ":this._x=m*d*p+h*g*x,this._y=h*g*p-m*d*x,this._z=h*d*x-m*g*p,this._w=h*d*p+m*g*x;break;case"ZXY":this._x=m*d*p-h*g*x,this._y=h*g*p+m*d*x,this._z=h*d*x+m*g*p,this._w=h*d*p-m*g*x;break;case"ZYX":this._x=m*d*p-h*g*x,this._y=h*g*p+m*d*x,this._z=h*d*x-m*g*p,this._w=h*d*p+m*g*x;break;case"YZX":this._x=m*d*p+h*g*x,this._y=h*g*p+m*d*x,this._z=h*d*x-m*g*p,this._w=h*d*p-m*g*x;break;case"XZY":this._x=m*d*p-h*g*x,this._y=h*g*p-m*d*x,this._z=h*d*x+m*g*p,this._w=h*d*p+m*g*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],o=t[5],l=t[9],h=t[2],d=t[6],p=t[10],m=n+o+p;if(m>0){const g=.5/Math.sqrt(m+1);this._w=.25/g,this._x=(d-l)*g,this._y=(r-h)*g,this._z=(a-i)*g}else if(n>o&&n>p){const g=2*Math.sqrt(1+n-o-p);this._w=(d-l)/g,this._x=.25*g,this._y=(i+a)/g,this._z=(r+h)/g}else if(o>p){const g=2*Math.sqrt(1+o-n-p);this._w=(r-h)/g,this._x=(i+a)/g,this._y=.25*g,this._z=(l+d)/g}else{const g=2*Math.sqrt(1+p-n-o);this._w=(a-i)/g,this._x=(r+h)/g,this._y=(l+d)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(en(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,o=t._x,l=t._y,h=t._z,d=t._w;return this._x=n*d+a*o+i*h-r*l,this._y=i*d+a*l+r*o-n*h,this._z=r*d+a*h+n*l-i*o,this._w=a*d-n*o-i*l-r*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let o=a*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const l=1-o*o;if(l<=Number.EPSILON){const g=1-t;return this._w=g*a+t*this._w,this._x=g*n+t*this._x,this._y=g*i+t*this._y,this._z=g*r+t*this._z,this.normalize(),this}const h=Math.sqrt(l),d=Math.atan2(h,o),p=Math.sin((1-t)*d)/h,m=Math.sin(t*d)/h;return this._w=a*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=r*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class B{constructor(e=0,t=0,n=0){B.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Fl.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Fl.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,o=e.z,l=e.w,h=2*(a*i-o*n),d=2*(o*t-r*i),p=2*(r*n-a*t);return this.x=t+l*h+a*p-o*d,this.y=n+l*d+o*h-r*p,this.z=i+l*p+r*d-a*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,o=t.y,l=t.z;return this.x=i*l-r*o,this.y=r*a-n*l,this.z=n*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return vc.copy(this).projectOnVector(e),this.sub(vc)}reflect(e){return this.sub(vc.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(en(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const vc=new B,Fl=new Ai;class ci{constructor(e=new B(1/0,1/0,1/0),t=new B(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Hi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Hi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Hi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const r=n.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let a=0,o=r.count;a<o;a++)e.isMesh===!0?e.getVertexPosition(a,Hi):Hi.fromBufferAttribute(r,a),Hi.applyMatrix4(e.matrixWorld),this.expandByPoint(Hi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Mo.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Mo.copy(n.boundingBox)),Mo.applyMatrix4(e.matrixWorld),this.union(Mo)}const i=e.children;for(let r=0,a=i.length;r<a;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Hi),Hi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Wi),So.subVectors(this.max,Wi),xs.subVectors(e.a,Wi),ys.subVectors(e.b,Wi),Js.subVectors(e.c,Wi),gr.subVectors(ys,xs),Vr.subVectors(Js,ys),bs.subVectors(xs,Js);let t=[0,-gr.z,gr.y,0,-Vr.z,Vr.y,0,-bs.z,bs.y,gr.z,0,-gr.x,Vr.z,0,-Vr.x,bs.z,0,-bs.x,-gr.y,gr.x,0,-Vr.y,Vr.x,0,-bs.y,bs.x,0];return!xc(t,xs,ys,Js,So)||(t=[1,0,0,0,1,0,0,0,1],!xc(t,xs,ys,Js,So))?!1:(Eo.crossVectors(gr,Vr),t=[Eo.x,Eo.y,Eo.z],xc(t,xs,ys,Js,So))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Hi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Hi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(mr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),mr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),mr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),mr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),mr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),mr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),mr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),mr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(mr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const mr=[new B,new B,new B,new B,new B,new B,new B,new B],Hi=new B,Mo=new ci,xs=new B,ys=new B,Js=new B,gr=new B,Vr=new B,bs=new B,Wi=new B,So=new B,Eo=new B,Li=new B;function xc(s,e,t,n,i){for(let r=0,a=s.length-3;r<=a;r+=3){Li.fromArray(s,r);const o=i.x*Math.abs(Li.x)+i.y*Math.abs(Li.y)+i.z*Math.abs(Li.z),l=e.dot(Li),h=t.dot(Li),d=n.dot(Li);if(Math.max(-Math.max(l,h,d),Math.min(l,h,d))>o)return!1}return!0}const $u=new ci,Ta=new B,yc=new B;class ni{constructor(e=new B,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):$u.setFromPoints(e).getCenter(n);let i=0;for(let r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Ta.subVectors(e,this.center);const t=Ta.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Ta,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(yc.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Ta.copy(e.center).add(yc)),this.expandByPoint(Ta.copy(e.center).sub(yc))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Xi=new B,ii=new B,wa=new B,_r=new B,Ks=new B,Ra=new B,Ao=new B;class Ca{constructor(e=new B,t=new B(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Xi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Xi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Xi.copy(this.origin).addScaledVector(this.direction,t),Xi.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){ii.copy(e).add(t).multiplyScalar(.5),wa.copy(t).sub(e).normalize(),_r.copy(this.origin).sub(ii);const r=e.distanceTo(t)*.5,a=-this.direction.dot(wa),o=_r.dot(this.direction),l=-_r.dot(wa),h=_r.lengthSq(),d=Math.abs(1-a*a);let p,m,g,x;if(d>0)if(p=a*l-o,m=a*o-l,x=r*d,p>=0)if(m>=-x)if(m<=x){const A=1/d;p*=A,m*=A,g=p*(p+a*m+2*o)+m*(a*p+m+2*l)+h}else m=r,p=Math.max(0,-(a*m+o)),g=-p*p+m*(m+2*l)+h;else m=-r,p=Math.max(0,-(a*m+o)),g=-p*p+m*(m+2*l)+h;else m<=-x?(p=Math.max(0,-(-a*r+o)),m=p>0?-r:Math.min(Math.max(-r,-l),r),g=-p*p+m*(m+2*l)+h):m<=x?(p=0,m=Math.min(Math.max(-r,-l),r),g=m*(m+2*l)+h):(p=Math.max(0,-(a*r+o)),m=p>0?r:Math.min(Math.max(-r,-l),r),g=-p*p+m*(m+2*l)+h);else m=a>0?-r:r,p=Math.max(0,-(a*m+o)),g=-p*p+m*(m+2*l)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(ii).addScaledVector(wa,m),g}intersectSphere(e,t){Xi.subVectors(e.center,this.origin);const n=Xi.dot(this.direction),i=Xi.dot(Xi)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),o=n-a,l=n+a;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,o,l;const h=1/this.direction.x,d=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),d>=0?(r=(e.min.y-m.y)*d,a=(e.max.y-m.y)*d):(r=(e.max.y-m.y)*d,a=(e.min.y-m.y)*d),n>a||r>i||((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),p>=0?(o=(e.min.z-m.z)*p,l=(e.max.z-m.z)*p):(o=(e.max.z-m.z)*p,l=(e.min.z-m.z)*p),n>l||o>i)||((o>n||n!==n)&&(n=o),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Xi)!==null}intersectTriangle(e,t,n,i,r){Ks.subVectors(t,e),Ra.subVectors(n,e),Ao.crossVectors(Ks,Ra);let a=this.direction.dot(Ao),o;if(a>0){if(i)return null;o=1}else if(a<0)o=-1,a=-a;else return null;_r.subVectors(this.origin,e);const l=o*this.direction.dot(Ra.crossVectors(_r,Ra));if(l<0)return null;const h=o*this.direction.dot(Ks.cross(_r));if(h<0||l+h>a)return null;const d=-o*_r.dot(Ao);return d<0?null:this.at(d/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class st{constructor(e,t,n,i,r,a,o,l,h,d,p,m,g,x,A,y){st.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,a,o,l,h,d,p,m,g,x,A,y)}set(e,t,n,i,r,a,o,l,h,d,p,m,g,x,A,y){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=r,_[5]=a,_[9]=o,_[13]=l,_[2]=h,_[6]=d,_[10]=p,_[14]=m,_[3]=g,_[7]=x,_[11]=A,_[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new st().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Kt.setFromMatrixColumn(e,0).length(),r=1/Kt.setFromMatrixColumn(e,1).length(),a=1/Kt.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),o=Math.sin(n),l=Math.cos(i),h=Math.sin(i),d=Math.cos(r),p=Math.sin(r);if(e.order==="XYZ"){const m=a*d,g=a*p,x=o*d,A=o*p;t[0]=l*d,t[4]=-l*p,t[8]=h,t[1]=g+x*h,t[5]=m-A*h,t[9]=-o*l,t[2]=A-m*h,t[6]=x+g*h,t[10]=a*l}else if(e.order==="YXZ"){const m=l*d,g=l*p,x=h*d,A=h*p;t[0]=m+A*o,t[4]=x*o-g,t[8]=a*h,t[1]=a*p,t[5]=a*d,t[9]=-o,t[2]=g*o-x,t[6]=A+m*o,t[10]=a*l}else if(e.order==="ZXY"){const m=l*d,g=l*p,x=h*d,A=h*p;t[0]=m-A*o,t[4]=-a*p,t[8]=x+g*o,t[1]=g+x*o,t[5]=a*d,t[9]=A-m*o,t[2]=-a*h,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const m=a*d,g=a*p,x=o*d,A=o*p;t[0]=l*d,t[4]=x*h-g,t[8]=m*h+A,t[1]=l*p,t[5]=A*h+m,t[9]=g*h-x,t[2]=-h,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const m=a*l,g=a*h,x=o*l,A=o*h;t[0]=l*d,t[4]=A-m*p,t[8]=x*p+g,t[1]=p,t[5]=a*d,t[9]=-o*d,t[2]=-h*d,t[6]=g*p+x,t[10]=m-A*p}else if(e.order==="XZY"){const m=a*l,g=a*h,x=o*l,A=o*h;t[0]=l*d,t[4]=-p,t[8]=h*d,t[1]=m*p+A,t[5]=a*d,t[9]=g*p-x,t[2]=x*p-g,t[6]=o*d,t[10]=A*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Ms,e,Pa)}lookAt(e,t,n){const i=this.elements;return hi.subVectors(e,t),hi.lengthSq()===0&&(hi.z=1),hi.normalize(),ui.crossVectors(n,hi),ui.lengthSq()===0&&(Math.abs(n.z)===1?hi.x+=1e-4:hi.z+=1e-4,hi.normalize(),ui.crossVectors(n,hi)),ui.normalize(),Dn.crossVectors(hi,ui),i[0]=ui.x,i[4]=Dn.x,i[8]=hi.x,i[1]=ui.y,i[5]=Dn.y,i[9]=hi.y,i[2]=ui.z,i[6]=Dn.z,i[10]=hi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[4],l=n[8],h=n[12],d=n[1],p=n[5],m=n[9],g=n[13],x=n[2],A=n[6],y=n[10],_=n[14],T=n[3],S=n[7],P=n[11],V=n[15],F=i[0],O=i[4],q=i[8],ie=i[12],C=i[1],k=i[5],Me=i[9],Se=i[13],Z=i[2],me=i[6],le=i[10],be=i[14],_e=i[3],xe=i[7],Ue=i[11],Le=i[15];return r[0]=a*F+o*C+l*Z+h*_e,r[4]=a*O+o*k+l*me+h*xe,r[8]=a*q+o*Me+l*le+h*Ue,r[12]=a*ie+o*Se+l*be+h*Le,r[1]=d*F+p*C+m*Z+g*_e,r[5]=d*O+p*k+m*me+g*xe,r[9]=d*q+p*Me+m*le+g*Ue,r[13]=d*ie+p*Se+m*be+g*Le,r[2]=x*F+A*C+y*Z+_*_e,r[6]=x*O+A*k+y*me+_*xe,r[10]=x*q+A*Me+y*le+_*Ue,r[14]=x*ie+A*Se+y*be+_*Le,r[3]=T*F+S*C+P*Z+V*_e,r[7]=T*O+S*k+P*me+V*xe,r[11]=T*q+S*Me+P*le+V*Ue,r[15]=T*ie+S*Se+P*be+V*Le,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],o=e[5],l=e[9],h=e[13],d=e[2],p=e[6],m=e[10],g=e[14],x=e[3],A=e[7],y=e[11],_=e[15];return x*(+r*l*p-i*h*p-r*o*m+n*h*m+i*o*g-n*l*g)+A*(+t*l*g-t*h*m+r*a*m-i*a*g+i*h*d-r*l*d)+y*(+t*h*p-t*o*g-r*a*p+n*a*g+r*o*d-n*h*d)+_*(-i*o*d-t*l*p+t*o*m+i*a*p-n*a*m+n*l*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],h=e[7],d=e[8],p=e[9],m=e[10],g=e[11],x=e[12],A=e[13],y=e[14],_=e[15],T=p*y*h-A*m*h+A*l*g-o*y*g-p*l*_+o*m*_,S=x*m*h-d*y*h-x*l*g+a*y*g+d*l*_-a*m*_,P=d*A*h-x*p*h+x*o*g-a*A*g-d*o*_+a*p*_,V=x*p*l-d*A*l-x*o*m+a*A*m+d*o*y-a*p*y,F=t*T+n*S+i*P+r*V;if(F===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const O=1/F;return e[0]=T*O,e[1]=(A*m*r-p*y*r-A*i*g+n*y*g+p*i*_-n*m*_)*O,e[2]=(o*y*r-A*l*r+A*i*h-n*y*h-o*i*_+n*l*_)*O,e[3]=(p*l*r-o*m*r-p*i*h+n*m*h+o*i*g-n*l*g)*O,e[4]=S*O,e[5]=(d*y*r-x*m*r+x*i*g-t*y*g-d*i*_+t*m*_)*O,e[6]=(x*l*r-a*y*r-x*i*h+t*y*h+a*i*_-t*l*_)*O,e[7]=(a*m*r-d*l*r+d*i*h-t*m*h-a*i*g+t*l*g)*O,e[8]=P*O,e[9]=(x*p*r-d*A*r-x*n*g+t*A*g+d*n*_-t*p*_)*O,e[10]=(a*A*r-x*o*r+x*n*h-t*A*h-a*n*_+t*o*_)*O,e[11]=(d*o*r-a*p*r-d*n*h+t*p*h+a*n*g-t*o*g)*O,e[12]=V*O,e[13]=(d*A*i-x*p*i+x*n*m-t*A*m-d*n*y+t*p*y)*O,e[14]=(x*o*i-a*A*i-x*n*l+t*A*l+a*n*y-t*o*y)*O,e[15]=(a*p*i-d*o*i+d*n*l-t*p*l-a*n*m+t*o*m)*O,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,o=e.y,l=e.z,h=r*a,d=r*o;return this.set(h*a+n,h*o-i*l,h*l+i*o,0,h*o+i*l,d*o+n,d*l-i*a,0,h*l-i*o,d*l+i*a,r*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,o=t._z,l=t._w,h=r+r,d=a+a,p=o+o,m=r*h,g=r*d,x=r*p,A=a*d,y=a*p,_=o*p,T=l*h,S=l*d,P=l*p,V=n.x,F=n.y,O=n.z;return i[0]=(1-(A+_))*V,i[1]=(g+P)*V,i[2]=(x-S)*V,i[3]=0,i[4]=(g-P)*F,i[5]=(1-(m+_))*F,i[6]=(y+T)*F,i[7]=0,i[8]=(x+S)*O,i[9]=(y-T)*O,i[10]=(1-(m+A))*O,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Kt.set(i[0],i[1],i[2]).length();const a=Kt.set(i[4],i[5],i[6]).length(),o=Kt.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],li.copy(this);const h=1/r,d=1/a,p=1/o;return li.elements[0]*=h,li.elements[1]*=h,li.elements[2]*=h,li.elements[4]*=d,li.elements[5]*=d,li.elements[6]*=d,li.elements[8]*=p,li.elements[9]*=p,li.elements[10]*=p,t.setFromRotationMatrix(li),n.x=r,n.y=a,n.z=o,this}makePerspective(e,t,n,i,r,a,o=Wt){const l=this.elements,h=2*r/(t-e),d=2*r/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let g,x;if(o===Wt)g=-(a+r)/(a-r),x=-2*a*r/(a-r);else if(o===gs)g=-a/(a-r),x=-a*r/(a-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=h,l[4]=0,l[8]=p,l[12]=0,l[1]=0,l[5]=d,l[9]=m,l[13]=0,l[2]=0,l[6]=0,l[10]=g,l[14]=x,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,r,a,o=Wt){const l=this.elements,h=1/(t-e),d=1/(n-i),p=1/(a-r),m=(t+e)*h,g=(n+i)*d;let x,A;if(o===Wt)x=(a+r)*p,A=-2*p;else if(o===gs)x=r*p,A=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=2*h,l[4]=0,l[8]=0,l[12]=-m,l[1]=0,l[5]=2*d,l[9]=0,l[13]=-g,l[2]=0,l[6]=0,l[10]=A,l[14]=-x,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Kt=new B,li=new st,Ms=new B(0,0,0),Pa=new B(1,1,1),ui=new B,Dn=new B,hi=new B,Ia=new st,Hr=new Ai;class vn{constructor(e=0,t=0,n=0,i=vn.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],a=i[4],o=i[8],l=i[1],h=i[5],d=i[9],p=i[2],m=i[6],g=i[10];switch(t){case"XYZ":this._y=Math.asin(en(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-d,g),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-en(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(o,g),this._z=Math.atan2(l,h)):(this._y=Math.atan2(-p,r),this._z=0);break;case"ZXY":this._x=Math.asin(en(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,g),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-en(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,g),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(en(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-p,r)):(this._x=0,this._y=Math.atan2(o,g));break;case"XZY":this._z=Math.asin(-en(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-d,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Ia.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Ia,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Hr.setFromEuler(this),this.setFromQuaternion(Hr,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}vn.DEFAULT_ORDER="XYZ";class Ss{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let bc=0;const Mc=new B,$i=new Ai,vr=new st,La=new B,xr=new B,Es=new B,Da=new Ai,Wr=new B(1,0,0),Xr=new B(0,1,0),yr=new B(0,0,1),Ol={type:"added"},Sc={type:"removed"},js={type:"childadded",child:null},To={type:"childremoved",child:null};class fn extends Or{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:bc++}),this.uuid=Ei(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=fn.DEFAULT_UP.clone();const e=new B,t=new vn,n=new Ai,i=new B(1,1,1);function r(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new st},normalMatrix:{value:new bt}}),this.matrix=new st,this.matrixWorld=new st,this.matrixAutoUpdate=fn.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=fn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ss,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return $i.setFromAxisAngle(e,t),this.quaternion.multiply($i),this}rotateOnWorldAxis(e,t){return $i.setFromAxisAngle(e,t),this.quaternion.premultiply($i),this}rotateX(e){return this.rotateOnAxis(Wr,e)}rotateY(e){return this.rotateOnAxis(Xr,e)}rotateZ(e){return this.rotateOnAxis(yr,e)}translateOnAxis(e,t){return Mc.copy(e).applyQuaternion(this.quaternion),this.position.add(Mc.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Wr,e)}translateY(e){return this.translateOnAxis(Xr,e)}translateZ(e){return this.translateOnAxis(yr,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(vr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?La.copy(e):La.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),xr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?vr.lookAt(xr,La,this.up):vr.lookAt(La,xr,this.up),this.quaternion.setFromRotationMatrix(vr),i&&(vr.extractRotation(i.matrixWorld),$i.setFromRotationMatrix(vr),this.quaternion.premultiply($i.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Ol),js.child=e,this.dispatchEvent(js),js.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Sc),To.child=e,this.dispatchEvent(To),To.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),vr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),vr.multiply(e.parent.matrixWorld)),e.applyMatrix4(vr),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let r=0,a=i.length;r<a;r++)i[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xr,e,Es),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xr,Da,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,a=i.length;r<a;r++){const o=i[r];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),i.maxGeometryCount=this._maxGeometryCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function r(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let h=0,d=l.length;h<d;h++){const p=l[h];r(e.shapes,p)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,h=this.material.length;l<h;l++)o.push(r(e.materials,this.material[l]));i.material=o}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];i.animations.push(r(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),h=a(e.textures),d=a(e.images),p=a(e.shapes),m=a(e.skeletons),g=a(e.animations),x=a(e.nodes);o.length>0&&(n.geometries=o),l.length>0&&(n.materials=l),h.length>0&&(n.textures=h),d.length>0&&(n.images=d),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),g.length>0&&(n.animations=g),x.length>0&&(n.nodes=x)}return n.object=i,n;function a(o){const l=[];for(const h in o){const d=o[h];delete d.metadata,l.push(d)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}fn.DEFAULT_UP=new B(0,1,0),fn.DEFAULT_MATRIX_AUTO_UPDATE=!0,fn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Di=new B,rr=new B,wo=new B,qi=new B,As=new B,Yi=new B,Ua=new B,Qs=new B,br=new B,Na=new B;class Ti{constructor(e=new B,t=new B,n=new B){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Di.subVectors(e,t),i.cross(Di);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Di.subVectors(i,t),rr.subVectors(n,t),wo.subVectors(e,t);const a=Di.dot(Di),o=Di.dot(rr),l=Di.dot(wo),h=rr.dot(rr),d=rr.dot(wo),p=a*h-o*o;if(p===0)return r.set(0,0,0),null;const m=1/p,g=(h*l-o*d)*m,x=(a*d-o*l)*m;return r.set(1-g-x,x,g)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,qi)===null?!1:qi.x>=0&&qi.y>=0&&qi.x+qi.y<=1}static getInterpolation(e,t,n,i,r,a,o,l){return this.getBarycoord(e,t,n,i,qi)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(r,qi.x),l.addScaledVector(a,qi.y),l.addScaledVector(o,qi.z),l)}static isFrontFacing(e,t,n,i){return Di.subVectors(n,t),rr.subVectors(e,t),Di.cross(rr).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Di.subVectors(this.c,this.b),rr.subVectors(this.a,this.b),Di.cross(rr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Ti.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Ti.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,r){return Ti.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return Ti.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Ti.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,o;As.subVectors(i,n),Yi.subVectors(r,n),Qs.subVectors(e,n);const l=As.dot(Qs),h=Yi.dot(Qs);if(l<=0&&h<=0)return t.copy(n);br.subVectors(e,i);const d=As.dot(br),p=Yi.dot(br);if(d>=0&&p<=d)return t.copy(i);const m=l*p-d*h;if(m<=0&&l>=0&&d<=0)return a=l/(l-d),t.copy(n).addScaledVector(As,a);Na.subVectors(e,r);const g=As.dot(Na),x=Yi.dot(Na);if(x>=0&&g<=x)return t.copy(r);const A=g*h-l*x;if(A<=0&&h>=0&&x<=0)return o=h/(h-x),t.copy(n).addScaledVector(Yi,o);const y=d*x-g*p;if(y<=0&&p-d>=0&&g-x>=0)return Ua.subVectors(r,i),o=(p-d)/(p-d+(g-x)),t.copy(i).addScaledVector(Ua,o);const _=1/(y+A+m);return a=A*_,o=m*_,t.copy(n).addScaledVector(As,a).addScaledVector(Yi,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Ro={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Mr={h:0,s:0,l:0},ri={h:0,s:0,l:0};function $r(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class $e{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Si){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,sn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=sn.workingColorSpace){return this.r=e,this.g=t,this.b=n,sn.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=sn.workingColorSpace){if(e=Vi(e,1),t=en(t,0,1),n=en(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=$r(a,r,e+1/3),this.g=$r(a,r,e),this.b=$r(a,r,e-1/3)}return sn.toWorkingColorSpace(this,i),this}setStyle(e,t=Si){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const a=i[1],o=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],a=r.length;if(a===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Si){const n=Ro[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=pr(e.r),this.g=pr(e.g),this.b=pr(e.b),this}copyLinearToSRGB(e){return this.r=dc(e.r),this.g=dc(e.g),this.b=dc(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Si){return sn.fromWorkingColorSpace(An.copy(this),e),Math.round(en(An.r*255,0,255))*65536+Math.round(en(An.g*255,0,255))*256+Math.round(en(An.b*255,0,255))}getHexString(e=Si){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=sn.workingColorSpace){sn.fromWorkingColorSpace(An.copy(this),t);const n=An.r,i=An.g,r=An.b,a=Math.max(n,i,r),o=Math.min(n,i,r);let l,h;const d=(o+a)/2;if(o===a)l=0,h=0;else{const p=a-o;switch(h=d<=.5?p/(a+o):p/(2-a-o),a){case n:l=(i-r)/p+(i<r?6:0);break;case i:l=(r-n)/p+2;break;case r:l=(n-i)/p+4;break}l/=6}return e.h=l,e.s=h,e.l=d,e}getRGB(e,t=sn.workingColorSpace){return sn.fromWorkingColorSpace(An.copy(this),t),e.r=An.r,e.g=An.g,e.b=An.b,e}getStyle(e=Si){sn.fromWorkingColorSpace(An.copy(this),e);const t=An.r,n=An.g,i=An.b;return e!==Si?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Mr),this.setHSL(Mr.h+e,Mr.s+t,Mr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Mr),e.getHSL(ri);const n=kr(Mr.h,ri.h,t),i=kr(Mr.s,ri.s,t),r=kr(Mr.l,ri.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const An=new $e;$e.NAMES=Ro;let Fa=0;class Ui extends Or{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Fa++}),this.uuid=Ei(),this.name="",this.type="Material",this.blending=is,this.side=De,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Qa,this.blendDst=Ls,this.blendEquation=ln,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new $e(0,0,0),this.blendAlpha=0,this.depthFunc=eo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=oc,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ms,this.stencilZFail=ms,this.stencilZPass=ms,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==is&&(n.blending=this.blending),this.side!==De&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Qa&&(n.blendSrc=this.blendSrc),this.blendDst!==Ls&&(n.blendDst=this.blendDst),this.blendEquation!==ln&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==eo&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==oc&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==ms&&(n.stencilFail=this.stencilFail),this.stencilZFail!==ms&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==ms&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const a=[];for(const o in r){const l=r[o];delete l.metadata,a.push(l)}return a}if(t){const r=i(e.textures),a=i(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Sr extends Ui{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new $e(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new vn,this.combine=to,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Ni=ea();function ea(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const h=l-127;h<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):h<-14?(n[l]=1024>>-h-14,n[l|256]=1024>>-h-14|32768,i[l]=-h-1,i[l|256]=-h-1):h<=15?(n[l]=h+15<<10,n[l|256]=h+15<<10|32768,i[l]=13,i[l|256]=13):h<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let h=l<<13,d=0;for(;!(h&8388608);)h<<=1,d-=8388608;h&=-8388609,d+=947912704,r[l]=h|d}for(let l=1024;l<2048;++l)r[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)a[l]=l<<23;a[31]=1199570944,a[32]=2147483648;for(let l=33;l<63;++l)a[l]=2147483648+(l-32<<23);a[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(o[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:a,offsetTable:o}}function fi(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=en(s,-65504,65504),Ni.floatView[0]=s;const e=Ni.uint32View[0],t=e>>23&511;return Ni.baseTable[t]+((e&8388607)>>Ni.shiftTable[t])}function Ts(s){const e=s>>10;return Ni.uint32View[0]=Ni.mantissaTable[Ni.offsetTable[e]+(s&1023)]+Ni.exponentTable[e],Ni.floatView[0]}const sr={toHalfFloat:fi,fromHalfFloat:Ts},an=new B,wi=new ve;class xn{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=cc,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=ei,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return Ll("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)wi.fromBufferAttribute(this,t),wi.applyMatrix3(e),this.setXY(t,wi.x,wi.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.applyMatrix3(e),this.setXYZ(t,an.x,an.y,an.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.applyMatrix4(e),this.setXYZ(t,an.x,an.y,an.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.applyNormalMatrix(e),this.setXYZ(t,an.x,an.y,an.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.transformDirection(e),this.setXYZ(t,an.x,an.y,an.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Zn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=yt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Zn(t,this.array)),t}setX(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Zn(t,this.array)),t}setY(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Zn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Zn(t,this.array)),t}setW(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array),i=yt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array),i=yt(i,this.array),r=yt(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==cc&&(e.usage=this.usage),e}}class qu extends null{constructor(e,t,n){super(new Int8Array(e),t,n)}}class kh extends null{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class Gh extends null{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Yu extends null{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Ec extends xn{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Ac extends null{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Tc extends xn{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Vh extends null{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Ts(this.array[e*this.itemSize]);return this.normalized&&(t=Zn(t,this.array)),t}setX(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize]=fi(t),this}getY(e){let t=Ts(this.array[e*this.itemSize+1]);return this.normalized&&(t=Zn(t,this.array)),t}setY(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize+1]=fi(t),this}getZ(e){let t=Ts(this.array[e*this.itemSize+2]);return this.normalized&&(t=Zn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize+2]=fi(t),this}getW(e){let t=Ts(this.array[e*this.itemSize+3]);return this.normalized&&(t=Zn(t,this.array)),t}setW(e,t){return this.normalized&&(t=yt(t,this.array)),this.array[e*this.itemSize+3]=fi(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array)),this.array[e+0]=fi(t),this.array[e+1]=fi(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array),i=yt(i,this.array)),this.array[e+0]=fi(t),this.array[e+1]=fi(n),this.array[e+2]=fi(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array),i=yt(i,this.array),r=yt(r,this.array)),this.array[e+0]=fi(t),this.array[e+1]=fi(n),this.array[e+2]=fi(i),this.array[e+3]=fi(r),this}}class Ke extends xn{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Hh=0;const di=new st,wc=new fn,qr=new B,Jn=new ci,ta=new ci,Tn=new B;class Pt extends Or{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Hh++}),this.uuid=Ei(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Ma(e)?Tc:Ec)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new bt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return di.makeRotationFromQuaternion(e),this.applyMatrix4(di),this}rotateX(e){return di.makeRotationX(e),this.applyMatrix4(di),this}rotateY(e){return di.makeRotationY(e),this.applyMatrix4(di),this}rotateZ(e){return di.makeRotationZ(e),this.applyMatrix4(di),this}translate(e,t,n){return di.makeTranslation(e,t,n),this.applyMatrix4(di),this}scale(e,t,n){return di.makeScale(e,t,n),this.applyMatrix4(di),this}lookAt(e){return wc.lookAt(e),wc.updateMatrix(),this.applyMatrix4(wc.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(qr).negate(),this.translate(qr.x,qr.y,qr.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Ke(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ci);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new B(-1/0,-1/0,-1/0),new B(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Jn.setFromBufferAttribute(r),this.morphTargetsRelative?(Tn.addVectors(this.boundingBox.min,Jn.min),this.boundingBox.expandByPoint(Tn),Tn.addVectors(this.boundingBox.max,Jn.max),this.boundingBox.expandByPoint(Tn)):(this.boundingBox.expandByPoint(Jn.min),this.boundingBox.expandByPoint(Jn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ni);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new B,1/0);return}if(e){const n=this.boundingSphere.center;if(Jn.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){const o=t[r];ta.setFromBufferAttribute(o),this.morphTargetsRelative?(Tn.addVectors(Jn.min,ta.min),Jn.expandByPoint(Tn),Tn.addVectors(Jn.max,ta.max),Jn.expandByPoint(Tn)):(Jn.expandByPoint(ta.min),Jn.expandByPoint(ta.max))}Jn.getCenter(n);let i=0;for(let r=0,a=e.count;r<a;r++)Tn.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(Tn));if(t)for(let r=0,a=t.length;r<a;r++){const o=t[r],l=this.morphTargetsRelative;for(let h=0,d=o.count;h<d;h++)Tn.fromBufferAttribute(o,h),l&&(qr.fromBufferAttribute(e,h),Tn.add(qr)),i=Math.max(i,n.distanceToSquared(Tn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new xn(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),o=[],l=[];for(let q=0;q<n.count;q++)o[q]=new B,l[q]=new B;const h=new B,d=new B,p=new B,m=new ve,g=new ve,x=new ve,A=new B,y=new B;function _(q,ie,C){h.fromBufferAttribute(n,q),d.fromBufferAttribute(n,ie),p.fromBufferAttribute(n,C),m.fromBufferAttribute(r,q),g.fromBufferAttribute(r,ie),x.fromBufferAttribute(r,C),d.sub(h),p.sub(h),g.sub(m),x.sub(m);const k=1/(g.x*x.y-x.x*g.y);isFinite(k)&&(A.copy(d).multiplyScalar(x.y).addScaledVector(p,-g.y).multiplyScalar(k),y.copy(p).multiplyScalar(g.x).addScaledVector(d,-x.x).multiplyScalar(k),o[q].add(A),o[ie].add(A),o[C].add(A),l[q].add(y),l[ie].add(y),l[C].add(y))}let T=this.groups;T.length===0&&(T=[{start:0,count:e.count}]);for(let q=0,ie=T.length;q<ie;++q){const C=T[q],k=C.start,Me=C.count;for(let Se=k,Z=k+Me;Se<Z;Se+=3)_(e.getX(Se+0),e.getX(Se+1),e.getX(Se+2))}const S=new B,P=new B,V=new B,F=new B;function O(q){V.fromBufferAttribute(i,q),F.copy(V);const ie=o[q];S.copy(ie),S.sub(V.multiplyScalar(V.dot(ie))).normalize(),P.crossVectors(F,ie);const k=P.dot(l[q])<0?-1:1;a.setXYZW(q,S.x,S.y,S.z,k)}for(let q=0,ie=T.length;q<ie;++q){const C=T[q],k=C.start,Me=C.count;for(let Se=k,Z=k+Me;Se<Z;Se+=3)O(e.getX(Se+0)),O(e.getX(Se+1)),O(e.getX(Se+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new xn(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,g=n.count;m<g;m++)n.setXYZ(m,0,0,0);const i=new B,r=new B,a=new B,o=new B,l=new B,h=new B,d=new B,p=new B;if(e)for(let m=0,g=e.count;m<g;m+=3){const x=e.getX(m+0),A=e.getX(m+1),y=e.getX(m+2);i.fromBufferAttribute(t,x),r.fromBufferAttribute(t,A),a.fromBufferAttribute(t,y),d.subVectors(a,r),p.subVectors(i,r),d.cross(p),o.fromBufferAttribute(n,x),l.fromBufferAttribute(n,A),h.fromBufferAttribute(n,y),o.add(d),l.add(d),h.add(d),n.setXYZ(x,o.x,o.y,o.z),n.setXYZ(A,l.x,l.y,l.z),n.setXYZ(y,h.x,h.y,h.z)}else for(let m=0,g=t.count;m<g;m+=3)i.fromBufferAttribute(t,m+0),r.fromBufferAttribute(t,m+1),a.fromBufferAttribute(t,m+2),d.subVectors(a,r),p.subVectors(i,r),d.cross(p),n.setXYZ(m+0,d.x,d.y,d.z),n.setXYZ(m+1,d.x,d.y,d.z),n.setXYZ(m+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Tn.fromBufferAttribute(e,t),Tn.normalize(),e.setXYZ(t,Tn.x,Tn.y,Tn.z)}toNonIndexed(){function e(o,l){const h=o.array,d=o.itemSize,p=o.normalized,m=new h.constructor(l.length*d);let g=0,x=0;for(let A=0,y=l.length;A<y;A++){o.isInterleavedBufferAttribute?g=l[A]*o.data.stride+o.offset:g=l[A]*d;for(let _=0;_<d;_++)m[x++]=h[g++]}return new xn(m,d,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Pt,n=this.index.array,i=this.attributes;for(const o in i){const l=i[o],h=e(l,n);t.setAttribute(o,h)}const r=this.morphAttributes;for(const o in r){const l=[],h=r[o];for(let d=0,p=h.length;d<p;d++){const m=h[d],g=e(m,n);l.push(g)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const h=a[o];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const h in l)l[h]!==void 0&&(e[h]=l[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const h=n[l];e.data.attributes[l]=h.toJSON(e.data)}const i={};let r=!1;for(const l in this.morphAttributes){const h=this.morphAttributes[l],d=[];for(let p=0,m=h.length;p<m;p++){const g=h[p];d.push(g.toJSON(e.data))}d.length>0&&(i[l]=d,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const d=i[h];this.setAttribute(h,d.clone(t))}const r=e.morphAttributes;for(const h in r){const d=[],p=r[h];for(let m=0,g=p.length;m<g;m++)d.push(p[m].clone(t));this.morphAttributes[h]=d}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let h=0,d=a.length;h<d;h++){const p=a[h];this.addGroup(p.start,p.count,p.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Co=new st,Yr=new Ca,Oa=new ni,Bl=new B,Zr=new B,ws=new B,na=new B,Rc=new B,Ba=new B,za=new ve,ka=new ve,Ga=new ve,Cc=new B,zl=new B,Pc=new B,Fi=new B,dn=new B;class Wn extends fn{constructor(e=new Pt,t=new Sr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const o=this.morphTargetInfluences;if(r&&o){Ba.set(0,0,0);for(let l=0,h=r.length;l<h;l++){const d=o[l],p=r[l];d!==0&&(Rc.fromBufferAttribute(p,e),a?Ba.addScaledVector(Rc,d):Ba.addScaledVector(Rc.sub(t),d))}t.add(Ba)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Oa.copy(n.boundingSphere),Oa.applyMatrix4(r),Yr.copy(e.ray).recast(e.near),!(Oa.containsPoint(Yr.origin)===!1&&(Yr.intersectSphere(Oa,Bl)===null||Yr.origin.distanceToSquared(Bl)>W0(e.far-e.near,2)))&&(Co.copy(r).invert(),Yr.copy(e.ray).applyMatrix4(Co),!(n.boundingBox!==null&&Yr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Yr)))}_computeIntersections(e,t,n){let i;const r=this.geometry,a=this.material,o=r.index,l=r.attributes.position,h=r.attributes.uv,d=r.attributes.uv1,p=r.attributes.normal,m=r.groups,g=r.drawRange;if(o!==null)if(Array.isArray(a))for(let x=0,A=m.length;x<A;x++){const y=m[x],_=a[y.materialIndex],T=Math.max(y.start,g.start),S=Math.min(o.count,Math.min(y.start+y.count,g.start+g.count));for(let P=T,V=S;P<V;P+=3){const F=o.getX(P),O=o.getX(P+1),q=o.getX(P+2);i=ia(this,_,e,n,h,d,p,F,O,q),i&&(i.faceIndex=Math.floor(P/3),i.face.materialIndex=y.materialIndex,t.push(i))}}else{const x=Math.max(0,g.start),A=Math.min(o.count,g.start+g.count);for(let y=x,_=A;y<_;y+=3){const T=o.getX(y),S=o.getX(y+1),P=o.getX(y+2);i=ia(this,a,e,n,h,d,p,T,S,P),i&&(i.faceIndex=Math.floor(y/3),t.push(i))}}else if(l!==void 0)if(Array.isArray(a))for(let x=0,A=m.length;x<A;x++){const y=m[x],_=a[y.materialIndex],T=Math.max(y.start,g.start),S=Math.min(l.count,Math.min(y.start+y.count,g.start+g.count));for(let P=T,V=S;P<V;P+=3){const F=P,O=P+1,q=P+2;i=ia(this,_,e,n,h,d,p,F,O,q),i&&(i.faceIndex=Math.floor(P/3),i.face.materialIndex=y.materialIndex,t.push(i))}}else{const x=Math.max(0,g.start),A=Math.min(l.count,g.start+g.count);for(let y=x,_=A;y<_;y+=3){const T=y,S=y+1,P=y+2;i=ia(this,a,e,n,h,d,p,T,S,P),i&&(i.faceIndex=Math.floor(y/3),t.push(i))}}}}function kl(s,e,t,n,i,r,a,o){let l;if(e.side===Jt?l=n.intersectTriangle(a,r,i,!0,o):l=n.intersectTriangle(i,r,a,e.side===De,o),l===null)return null;dn.copy(o),dn.applyMatrix4(s.matrixWorld);const h=t.ray.origin.distanceTo(dn);return h<t.near||h>t.far?null:{distance:h,point:dn.clone(),object:s}}function ia(s,e,t,n,i,r,a,o,l,h){s.getVertexPosition(o,Zr),s.getVertexPosition(l,ws),s.getVertexPosition(h,na);const d=kl(s,e,t,n,Zr,ws,na,Fi);if(d){i&&(za.fromBufferAttribute(i,o),ka.fromBufferAttribute(i,l),Ga.fromBufferAttribute(i,h),d.uv=Ti.getInterpolation(Fi,Zr,ws,na,za,ka,Ga,new ve)),r&&(za.fromBufferAttribute(r,o),ka.fromBufferAttribute(r,l),Ga.fromBufferAttribute(r,h),d.uv1=Ti.getInterpolation(Fi,Zr,ws,na,za,ka,Ga,new ve)),a&&(Cc.fromBufferAttribute(a,o),zl.fromBufferAttribute(a,l),Pc.fromBufferAttribute(a,h),d.normal=Ti.getInterpolation(Fi,Zr,ws,na,Cc,zl,Pc,new B),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const p={a:o,b:l,c:h,normal:new B,materialIndex:0};Ti.getNormal(Zr,ws,na,p.normal),d.face=p}return d}class ar extends Pt{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const o=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const l=[],h=[],d=[],p=[];let m=0,g=0;x("z","y","x",-1,-1,n,t,e,a,r,0),x("z","y","x",1,-1,n,t,-e,a,r,1),x("x","z","y",1,1,e,n,t,i,a,2),x("x","z","y",1,-1,e,n,-t,i,a,3),x("x","y","z",1,-1,e,t,n,i,r,4),x("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new Ke(h,3)),this.setAttribute("normal",new Ke(d,3)),this.setAttribute("uv",new Ke(p,2));function x(A,y,_,T,S,P,V,F,O,q,ie){const C=P/O,k=V/q,Me=P/2,Se=V/2,Z=F/2,me=O+1,le=q+1;let be=0,_e=0;const xe=new B;for(let Ue=0;Ue<le;Ue++){const Le=Ue*k-Se;for(let et=0;et<me;et++){const wt=et*C-Me;xe[A]=wt*T,xe[y]=Le*S,xe[_]=Z,h.push(xe.x,xe.y,xe.z),xe[A]=0,xe[y]=0,xe[_]=F>0?1:-1,d.push(xe.x,xe.y,xe.z),p.push(et/O),p.push(1-Ue/q),be+=1}}for(let Ue=0;Ue<q;Ue++)for(let Le=0;Le<O;Le++){const et=m+Le+me*Ue,wt=m+Le+me*(Ue+1),ue=m+(Le+1)+me*(Ue+1),Pe=m+(Le+1)+me*Ue;l.push(et,wt,Pe),l.push(wt,ue,Pe),_e+=6}o.addGroup(g,_e,ie),g+=_e,m+=be}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ar(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function or(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Xn(s){const e={};for(let t=0;t<s.length;t++){const n=or(s[t]);for(const i in n)e[i]=n[i]}return e}function Gl(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function Po(s){return s.getRenderTarget()===null?s.outputColorSpace:sn.workingColorSpace}const Vl={clone:or,merge:Xn};var Ic=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Hl=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class cr extends Ui{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Ic,this.fragmentShader=Hl,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=or(e.uniforms),this.uniformsGroups=Gl(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Io extends fn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new st,this.projectionMatrix=new st,this.projectionMatrixInverse=new st,this.coordinateSystem=Wt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const lr=new B,Lc=new ve,Wl=new ve;class Cn extends Io{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=$s*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(oi*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return $s*2*Math.atan(Math.tan(oi*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){lr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(lr.x,lr.y).multiplyScalar(-e/lr.z),lr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(lr.x,lr.y).multiplyScalar(-e/lr.z)}getViewSize(e,t){return this.getViewBounds(e,Lc,Wl),t.subVectors(Wl,Lc)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(oi*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,h=a.fullHeight;r+=a.offsetX*i/l,t-=a.offsetY*n/h,i*=a.width/l,n*=a.height/h}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Jr=-90,Rs=1;class Xl extends fn{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new Cn(Jr,Rs,e,t);i.layers=this.layers,this.add(i);const r=new Cn(Jr,Rs,e,t);r.layers=this.layers,this.add(r);const a=new Cn(Jr,Rs,e,t);a.layers=this.layers,this.add(a);const o=new Cn(Jr,Rs,e,t);o.layers=this.layers,this.add(o);const l=new Cn(Jr,Rs,e,t);l.layers=this.layers,this.add(l);const h=new Cn(Jr,Rs,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,a,o,l]=t;for(const h of t)this.remove(h);if(e===Wt)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===gs)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,a,o,l,h,d]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),g=e.getActiveMipmapLevel(),x=e.xr.enabled;e.xr.enabled=!1;const A=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,r),e.setRenderTarget(n,1,i),e.render(t,a),e.setRenderTarget(n,2,i),e.render(t,o),e.setRenderTarget(n,3,i),e.render(t,l),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=A,e.setRenderTarget(n,5,i),e.render(t,d),e.setRenderTarget(p,m,g),e.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class Lo extends Hn{constructor(e,t,n,i,r,a,o,l,h,d){e=e!==void 0?e:[],t=t!==void 0?t:ki,super(e,t,n,i,r,a,o,l,h,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class On extends vs{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Lo(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:mn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new ar(5,5,5),r=new cr({name:"CubemapFromEquirect",uniforms:or(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Jt,blending:Rr});r.uniforms.tEquirect.value=t;const a=new Wn(i,r),o=t.minFilter;return t.minFilter===Gi&&(t.minFilter=mn),new Xl(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}}const Dc=new B,b=new B,M=new bt;class w{constructor(e=new B(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Dc.subVectors(n,t).cross(b.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Dc),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||M.getNormalMatrix(e),i=this.coplanarPoint(Dc).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const N=new ni,$=new B;class Y{constructor(e=new w,t=new w,n=new w,i=new w,r=new w,a=new w){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Wt){const n=this.planes,i=e.elements,r=i[0],a=i[1],o=i[2],l=i[3],h=i[4],d=i[5],p=i[6],m=i[7],g=i[8],x=i[9],A=i[10],y=i[11],_=i[12],T=i[13],S=i[14],P=i[15];if(n[0].setComponents(l-r,m-h,y-g,P-_).normalize(),n[1].setComponents(l+r,m+h,y+g,P+_).normalize(),n[2].setComponents(l+a,m+d,y+x,P+T).normalize(),n[3].setComponents(l-a,m-d,y-x,P-T).normalize(),n[4].setComponents(l-o,m-p,y-A,P-S).normalize(),t===Wt)n[5].setComponents(l+o,m+p,y+A,P+S).normalize();else if(t===gs)n[5].setComponents(o,p,A,S).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),N.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),N.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(N)}intersectsSprite(e){return N.center.set(0,0,0),N.radius=.7071067811865476,N.applyMatrix4(e.matrixWorld),this.intersectsSphere(N)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if($.x=i.normal.x>0?e.max.x:e.min.x,$.y=i.normal.y>0?e.max.y:e.min.y,$.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint($)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function H(){let s=null,e=!1,t=null,n=null;function i(r,a){t(r,a),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function Q(s,e){const t=e.isWebGL2,n=new WeakMap;function i(h,d){const p=h.array,m=h.usage,g=p.byteLength,x=s.createBuffer();s.bindBuffer(d,x),s.bufferData(d,p,m),h.onUploadCallback();let A;if(p instanceof Float32Array)A=s.FLOAT;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)A=s.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else A=s.UNSIGNED_SHORT;else if(p instanceof Int16Array)A=s.SHORT;else if(p instanceof Uint32Array)A=s.UNSIGNED_INT;else if(p instanceof Int32Array)A=s.INT;else if(p instanceof Int8Array)A=s.BYTE;else if(p instanceof Uint8Array)A=s.UNSIGNED_BYTE;else if(p instanceof Uint8ClampedArray)A=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:x,type:A,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version,size:g}}function r(h,d,p){const m=d.array,g=d._updateRange,x=d.updateRanges;if(s.bindBuffer(p,h),g.count===-1&&x.length===0&&s.bufferSubData(p,0,m),x.length!==0){for(let A=0,y=x.length;A<y;A++){const _=x[A];t?s.bufferSubData(p,_.start*m.BYTES_PER_ELEMENT,m,_.start,_.count):s.bufferSubData(p,_.start*m.BYTES_PER_ELEMENT,m.subarray(_.start,_.start+_.count))}d.clearUpdateRanges()}g.count!==-1&&(t?s.bufferSubData(p,g.offset*m.BYTES_PER_ELEMENT,m,g.offset,g.count):s.bufferSubData(p,g.offset*m.BYTES_PER_ELEMENT,m.subarray(g.offset,g.offset+g.count)),g.count=-1),d.onUploadCallback()}function a(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function o(h){h.isInterleavedBufferAttribute&&(h=h.data);const d=n.get(h);d&&(s.deleteBuffer(d.buffer),n.delete(h))}function l(h,d){if(h.isGLBufferAttribute){const m=n.get(h);(!m||m.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);if(p===void 0)n.set(h,i(h,d));else if(p.version<h.version){if(p.size!==h.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");r(p.buffer,h,d),p.version=h.version}}return{get:a,remove:o,update:l}}class te extends Pt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,o=Math.floor(n),l=Math.floor(i),h=o+1,d=l+1,p=e/o,m=t/l,g=[],x=[],A=[],y=[];for(let _=0;_<d;_++){const T=_*m-a;for(let S=0;S<h;S++){const P=S*p-r;x.push(P,-T,0),A.push(0,0,1),y.push(S/o),y.push(1-_/l)}}for(let _=0;_<l;_++)for(let T=0;T<o;T++){const S=T+h*_,P=T+h*(_+1),V=T+1+h*(_+1),F=T+1+h*_;g.push(S,P,F),g.push(P,V,F)}this.setIndex(g),this.setAttribute("position",new Ke(x,3)),this.setAttribute("normal",new Ke(A,3)),this.setAttribute("uv",new Ke(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new te(e.width,e.height,e.widthSegments,e.heightSegments)}}var pe=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,Ee=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,He=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,we=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Ze=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,Ye=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,At=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Et=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Nt=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,$t=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,Pn=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,tt=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,si=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,zt=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Re=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,ut=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,It=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Tt=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Bn=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,un=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,kt=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,jt=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Qt=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,rn=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Zi=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Kr=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,jr=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,ra=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,sa=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Er=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Cs="gl_FragColor = linearToOutputTexel( gl_FragColor );",Va=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,Ps=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Uc=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Nc=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,od=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,cd=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Ri=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Ci=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,$l=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,aa=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,ql=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Zu=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,zn=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,ld=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,ud=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Wh=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Xh=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,$h=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,hd=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Do=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,fd=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,dd=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,pd=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,md=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,qh=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Yl=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,Zl=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,gd=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,_d=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Yh=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,vd=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Zh=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,xd=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Jh=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Kh=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,yd=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,bd=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[MORPHTARGETS_COUNT];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,jh=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Qh=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,ef=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
	#endif
	#ifdef MORPHTARGETS_TEXTURE
		#ifndef USE_INSTANCING_MORPH
			uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		#endif
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,tf=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Md=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,nf=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,rf=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Sd=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Ed=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,sf=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Ad=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,af=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Td=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,wd=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,of=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Fc=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Rd=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,cf=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Ju=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Jl=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Kl=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Cd=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Ku=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,lf=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,ju=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,uf=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Pd=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Id=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,Bp=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,hf=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,ff=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Qu=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,df=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,zp=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	float startCompression = 0.8 - 0.04;
	float desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min(color.r, min(color.g, color.b));
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max(color.r, max(color.g, color.b));
	if (peak < startCompression) return color;
	float d = 1. - startCompression;
	float newPeak = 1. - d * d / (peak + d - startCompression);
	color *= newPeak / peak;
	float g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);
	return mix(color, vec3(1, 1, 1), g);
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,pf=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Ha=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,Ld=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Dd=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Ud=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Nd=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Lt={alphahash_fragment:pe,alphahash_pars_fragment:Ee,alphamap_fragment:He,alphamap_pars_fragment:we,alphatest_fragment:Ze,alphatest_pars_fragment:Ye,aomap_fragment:At,aomap_pars_fragment:Et,batching_pars_vertex:Nt,batching_vertex:$t,begin_vertex:Pn,beginnormal_vertex:tt,bsdfs:si,iridescence_fragment:zt,bumpmap_pars_fragment:Re,clipping_planes_fragment:ut,clipping_planes_pars_fragment:It,clipping_planes_pars_vertex:Tt,clipping_planes_vertex:Bn,color_fragment:un,color_pars_fragment:kt,color_pars_vertex:jt,color_vertex:Qt,common:rn,cube_uv_reflection_fragment:Zi,defaultnormal_vertex:Kr,displacementmap_pars_vertex:jr,displacementmap_vertex:ra,emissivemap_fragment:sa,emissivemap_pars_fragment:Er,colorspace_fragment:Cs,colorspace_pars_fragment:Va,envmap_fragment:Ps,envmap_common_pars_fragment:Uc,envmap_pars_fragment:Nc,envmap_pars_vertex:od,envmap_physical_pars_fragment:Xh,envmap_vertex:cd,fog_vertex:Ri,fog_pars_vertex:Ci,fog_fragment:$l,fog_pars_fragment:aa,gradientmap_pars_fragment:ql,lightmap_fragment:Zu,lightmap_pars_fragment:zn,lights_lambert_fragment:ld,lights_lambert_pars_fragment:ud,lights_pars_begin:Wh,lights_toon_fragment:$h,lights_toon_pars_fragment:hd,lights_phong_fragment:Do,lights_phong_pars_fragment:fd,lights_physical_fragment:dd,lights_physical_pars_fragment:pd,lights_fragment_begin:md,lights_fragment_maps:qh,lights_fragment_end:Yl,logdepthbuf_fragment:Zl,logdepthbuf_pars_fragment:gd,logdepthbuf_pars_vertex:_d,logdepthbuf_vertex:Yh,map_fragment:vd,map_pars_fragment:Zh,map_particle_fragment:xd,map_particle_pars_fragment:Jh,metalnessmap_fragment:Kh,metalnessmap_pars_fragment:yd,morphinstance_vertex:bd,morphcolor_vertex:jh,morphnormal_vertex:Qh,morphtarget_pars_vertex:ef,morphtarget_vertex:tf,normal_fragment_begin:Md,normal_fragment_maps:nf,normal_pars_fragment:rf,normal_pars_vertex:Sd,normal_vertex:Ed,normalmap_pars_fragment:sf,clearcoat_normal_fragment_begin:Ad,clearcoat_normal_fragment_maps:af,clearcoat_pars_fragment:Td,iridescence_pars_fragment:wd,opaque_fragment:of,packing:Fc,premultiplied_alpha_fragment:Rd,project_vertex:cf,dithering_fragment:Ju,dithering_pars_fragment:Jl,roughnessmap_fragment:Kl,roughnessmap_pars_fragment:Cd,shadowmap_pars_fragment:Ku,shadowmap_pars_vertex:lf,shadowmap_vertex:ju,shadowmask_pars_fragment:uf,skinbase_vertex:Pd,skinning_pars_vertex:Id,skinning_vertex:Bp,skinnormal_vertex:hf,specularmap_fragment:ff,specularmap_pars_fragment:Qu,tonemapping_fragment:df,tonemapping_pars_fragment:zp,transmission_fragment:pf,transmission_pars_fragment:Ha,uv_pars_fragment:Ld,uv_pars_vertex:Dd,uv_vertex:Ud,worldpos_vertex:Nd,background_vert:`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,background_frag:`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,backgroundCube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,backgroundCube_frag:`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,cube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,cube_frag:`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,depth_vert:`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,depth_frag:`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,distanceRGBA_vert:`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,distanceRGBA_frag:`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,equirect_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,equirect_frag:`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,linedashed_vert:`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,linedashed_frag:`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,meshbasic_vert:`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,meshbasic_frag:`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshlambert_vert:`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshlambert_frag:`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshmatcap_vert:`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,meshmatcap_frag:`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshnormal_vert:`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,meshnormal_frag:`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,meshphong_vert:`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshphong_frag:`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshphysical_vert:`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,meshphysical_frag:`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshtoon_vert:`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshtoon_frag:`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,points_vert:`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,points_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,shadow_vert:`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,shadow_frag:`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,sprite_vert:`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,sprite_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`},ze={common:{diffuse:{value:new $e(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new bt},alphaMap:{value:null},alphaMapTransform:{value:new bt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new bt}},envmap:{envMap:{value:null},envMapRotation:{value:new bt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new bt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new bt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new bt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new bt},normalScale:{value:new ve(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new bt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new bt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new bt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new bt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new $e(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new $e(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new bt},alphaTest:{value:0},uvTransform:{value:new bt}},sprite:{diffuse:{value:new $e(16777215)},opacity:{value:1},center:{value:new ve(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new bt},alphaMap:{value:null},alphaMapTransform:{value:new bt},alphaTest:{value:0}}},es={basic:{uniforms:Xn([ze.common,ze.specularmap,ze.envmap,ze.aomap,ze.lightmap,ze.fog]),vertexShader:Lt.meshbasic_vert,fragmentShader:Lt.meshbasic_frag},lambert:{uniforms:Xn([ze.common,ze.specularmap,ze.envmap,ze.aomap,ze.lightmap,ze.emissivemap,ze.bumpmap,ze.normalmap,ze.displacementmap,ze.fog,ze.lights,{emissive:{value:new $e(0)}}]),vertexShader:Lt.meshlambert_vert,fragmentShader:Lt.meshlambert_frag},phong:{uniforms:Xn([ze.common,ze.specularmap,ze.envmap,ze.aomap,ze.lightmap,ze.emissivemap,ze.bumpmap,ze.normalmap,ze.displacementmap,ze.fog,ze.lights,{emissive:{value:new $e(0)},specular:{value:new $e(1118481)},shininess:{value:30}}]),vertexShader:Lt.meshphong_vert,fragmentShader:Lt.meshphong_frag},standard:{uniforms:Xn([ze.common,ze.envmap,ze.aomap,ze.lightmap,ze.emissivemap,ze.bumpmap,ze.normalmap,ze.displacementmap,ze.roughnessmap,ze.metalnessmap,ze.fog,ze.lights,{emissive:{value:new $e(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Lt.meshphysical_vert,fragmentShader:Lt.meshphysical_frag},toon:{uniforms:Xn([ze.common,ze.aomap,ze.lightmap,ze.emissivemap,ze.bumpmap,ze.normalmap,ze.displacementmap,ze.gradientmap,ze.fog,ze.lights,{emissive:{value:new $e(0)}}]),vertexShader:Lt.meshtoon_vert,fragmentShader:Lt.meshtoon_frag},matcap:{uniforms:Xn([ze.common,ze.bumpmap,ze.normalmap,ze.displacementmap,ze.fog,{matcap:{value:null}}]),vertexShader:Lt.meshmatcap_vert,fragmentShader:Lt.meshmatcap_frag},points:{uniforms:Xn([ze.points,ze.fog]),vertexShader:Lt.points_vert,fragmentShader:Lt.points_frag},dashed:{uniforms:Xn([ze.common,ze.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Lt.linedashed_vert,fragmentShader:Lt.linedashed_frag},depth:{uniforms:Xn([ze.common,ze.displacementmap]),vertexShader:Lt.depth_vert,fragmentShader:Lt.depth_frag},normal:{uniforms:Xn([ze.common,ze.bumpmap,ze.normalmap,ze.displacementmap,{opacity:{value:1}}]),vertexShader:Lt.meshnormal_vert,fragmentShader:Lt.meshnormal_frag},sprite:{uniforms:Xn([ze.sprite,ze.fog]),vertexShader:Lt.sprite_vert,fragmentShader:Lt.sprite_frag},background:{uniforms:{uvTransform:{value:new bt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Lt.background_vert,fragmentShader:Lt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new bt}},vertexShader:Lt.backgroundCube_vert,fragmentShader:Lt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Lt.cube_vert,fragmentShader:Lt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Lt.equirect_vert,fragmentShader:Lt.equirect_frag},distanceRGBA:{uniforms:Xn([ze.common,ze.displacementmap,{referencePosition:{value:new B},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Lt.distanceRGBA_vert,fragmentShader:Lt.distanceRGBA_frag},shadow:{uniforms:Xn([ze.lights,ze.fog,{color:{value:new $e(0)},opacity:{value:1}}]),vertexShader:Lt.shadow_vert,fragmentShader:Lt.shadow_frag}};es.physical={uniforms:Xn([es.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new bt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new bt},clearcoatNormalScale:{value:new ve(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new bt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new bt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new bt},sheen:{value:0},sheenColor:{value:new $e(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new bt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new bt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new bt},transmissionSamplerSize:{value:new ve},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new bt},attenuationDistance:{value:0},attenuationColor:{value:new $e(0)},specularColor:{value:new $e(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new bt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new bt},anisotropyVector:{value:new ve},anisotropyMap:{value:null},anisotropyMapTransform:{value:new bt}}]),vertexShader:Lt.meshphysical_vert,fragmentShader:Lt.meshphysical_frag};const Oc={r:0,b:0,g:0},oa=new vn,Vd=new st;function im(s,e,t,n,i,r,a){const o=new $e(0);let l=r===!0?0:1,h,d,p=null,m=0,g=null;function x(y,_){let T=!1,S=_.isScene===!0?_.background:null;S&&S.isTexture&&(S=(_.backgroundBlurriness>0?t:e).get(S)),S===null?A(o,l):S&&S.isColor&&(A(S,1),T=!0);const P=s.xr.getEnvironmentBlendMode();P==="additive"?n.buffers.color.setClear(0,0,0,1,a):P==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(s.autoClear||T)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),S&&(S.isCubeTexture||S.mapping===Fs)?(d===void 0&&(d=new Wn(new ar(1,1,1),new cr({name:"BackgroundCubeMaterial",uniforms:or(es.backgroundCube.uniforms),vertexShader:es.backgroundCube.vertexShader,fragmentShader:es.backgroundCube.fragmentShader,side:Jt,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(V,F,O){this.matrixWorld.copyPosition(O.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(d)),oa.copy(_.backgroundRotation),oa.x*=-1,oa.y*=-1,oa.z*=-1,S.isCubeTexture&&S.isRenderTargetTexture===!1&&(oa.y*=-1,oa.z*=-1),d.material.uniforms.envMap.value=S,d.material.uniforms.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,d.material.uniforms.backgroundRotation.value.setFromMatrix4(Vd.makeRotationFromEuler(oa)),d.material.toneMapped=sn.getTransfer(S.colorSpace)!==Ht,(p!==S||m!==S.version||g!==s.toneMapping)&&(d.material.needsUpdate=!0,p=S,m=S.version,g=s.toneMapping),d.layers.enableAll(),y.unshift(d,d.geometry,d.material,0,0,null)):S&&S.isTexture&&(h===void 0&&(h=new Wn(new te(2,2),new cr({name:"BackgroundMaterial",uniforms:or(es.background.uniforms),vertexShader:es.background.vertexShader,fragmentShader:es.background.fragmentShader,side:De,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=S,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.toneMapped=sn.getTransfer(S.colorSpace)!==Ht,S.matrixAutoUpdate===!0&&S.updateMatrix(),h.material.uniforms.uvTransform.value.copy(S.matrix),(p!==S||m!==S.version||g!==s.toneMapping)&&(h.material.needsUpdate=!0,p=S,m=S.version,g=s.toneMapping),h.layers.enableAll(),y.unshift(h,h.geometry,h.material,0,0,null))}function A(y,_){y.getRGB(Oc,Po(s)),n.buffers.color.setClear(Oc.r,Oc.g,Oc.b,_,a)}return{getClearColor:function(){return o},setClearColor:function(y,_=1){o.set(y),l=_,A(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(y){l=y,A(o,l)},render:x}}function Hd(s,e,t,n){const i=s.getParameter(s.MAX_VERTEX_ATTRIBS),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||r!==null,o={},l=y(null);let h=l,d=!1;function p(Z,me,le,be,_e){let xe=!1;if(a){const Ue=A(be,le,me);h!==Ue&&(h=Ue,g(h.object)),xe=_(Z,be,le,_e),xe&&T(Z,be,le,_e)}else{const Ue=me.wireframe===!0;(h.geometry!==be.id||h.program!==le.id||h.wireframe!==Ue)&&(h.geometry=be.id,h.program=le.id,h.wireframe=Ue,xe=!0)}_e!==null&&t.update(_e,s.ELEMENT_ARRAY_BUFFER),(xe||d)&&(d=!1,q(Z,me,le,be),_e!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get(_e).buffer))}function m(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function g(Z){return n.isWebGL2?s.bindVertexArray(Z):r.bindVertexArrayOES(Z)}function x(Z){return n.isWebGL2?s.deleteVertexArray(Z):r.deleteVertexArrayOES(Z)}function A(Z,me,le){const be=le.wireframe===!0;let _e=o[Z.id];_e===void 0&&(_e={},o[Z.id]=_e);let xe=_e[me.id];xe===void 0&&(xe={},_e[me.id]=xe);let Ue=xe[be];return Ue===void 0&&(Ue=y(m()),xe[be]=Ue),Ue}function y(Z){const me=[],le=[],be=[];for(let _e=0;_e<i;_e++)me[_e]=0,le[_e]=0,be[_e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:me,enabledAttributes:le,attributeDivisors:be,object:Z,attributes:{},index:null}}function _(Z,me,le,be){const _e=h.attributes,xe=me.attributes;let Ue=0;const Le=le.getAttributes();for(const et in Le)if(Le[et].location>=0){const ue=_e[et];let Pe=xe[et];if(Pe===void 0&&(et==="instanceMatrix"&&Z.instanceMatrix&&(Pe=Z.instanceMatrix),et==="instanceColor"&&Z.instanceColor&&(Pe=Z.instanceColor)),ue===void 0||ue.attribute!==Pe||Pe&&ue.data!==Pe.data)return!0;Ue++}return h.attributesNum!==Ue||h.index!==be}function T(Z,me,le,be){const _e={},xe=me.attributes;let Ue=0;const Le=le.getAttributes();for(const et in Le)if(Le[et].location>=0){let ue=xe[et];ue===void 0&&(et==="instanceMatrix"&&Z.instanceMatrix&&(ue=Z.instanceMatrix),et==="instanceColor"&&Z.instanceColor&&(ue=Z.instanceColor));const Pe={};Pe.attribute=ue,ue&&ue.data&&(Pe.data=ue.data),_e[et]=Pe,Ue++}h.attributes=_e,h.attributesNum=Ue,h.index=be}function S(){const Z=h.newAttributes;for(let me=0,le=Z.length;me<le;me++)Z[me]=0}function P(Z){V(Z,0)}function V(Z,me){const le=h.newAttributes,be=h.enabledAttributes,_e=h.attributeDivisors;le[Z]=1,be[Z]===0&&(s.enableVertexAttribArray(Z),be[Z]=1),_e[Z]!==me&&((n.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](Z,me),_e[Z]=me)}function F(){const Z=h.newAttributes,me=h.enabledAttributes;for(let le=0,be=me.length;le<be;le++)me[le]!==Z[le]&&(s.disableVertexAttribArray(le),me[le]=0)}function O(Z,me,le,be,_e,xe,Ue){Ue===!0?s.vertexAttribIPointer(Z,me,le,_e,xe):s.vertexAttribPointer(Z,me,le,be,_e,xe)}function q(Z,me,le,be){if(n.isWebGL2===!1&&(Z.isInstancedMesh||be.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;S();const _e=be.attributes,xe=le.getAttributes(),Ue=me.defaultAttributeValues;for(const Le in xe){const et=xe[Le];if(et.location>=0){let wt=_e[Le];if(wt===void 0&&(Le==="instanceMatrix"&&Z.instanceMatrix&&(wt=Z.instanceMatrix),Le==="instanceColor"&&Z.instanceColor&&(wt=Z.instanceColor)),wt!==void 0){const ue=wt.normalized,Pe=wt.itemSize,je=t.get(wt);if(je===void 0)continue;const dt=je.buffer,ct=je.type,rt=je.bytesPerElement,Gt=n.isWebGL2===!0&&(ct===s.INT||ct===s.UNSIGNED_INT||wt.gpuType===ro);if(wt.isInterleavedBufferAttribute){const pt=wt.data,W=pt.stride,Be=wt.offset;if(pt.isInstancedInterleavedBuffer){for(let ye=0;ye<et.locationSize;ye++)V(et.location+ye,pt.meshPerAttribute);Z.isInstancedMesh!==!0&&be._maxInstanceCount===void 0&&(be._maxInstanceCount=pt.meshPerAttribute*pt.count)}else for(let ye=0;ye<et.locationSize;ye++)P(et.location+ye);s.bindBuffer(s.ARRAY_BUFFER,dt);for(let ye=0;ye<et.locationSize;ye++)O(et.location+ye,Pe/et.locationSize,ct,ue,W*rt,(Be+Pe/et.locationSize*ye)*rt,Gt)}else{if(wt.isInstancedBufferAttribute){for(let pt=0;pt<et.locationSize;pt++)V(et.location+pt,wt.meshPerAttribute);Z.isInstancedMesh!==!0&&be._maxInstanceCount===void 0&&(be._maxInstanceCount=wt.meshPerAttribute*wt.count)}else for(let pt=0;pt<et.locationSize;pt++)P(et.location+pt);s.bindBuffer(s.ARRAY_BUFFER,dt);for(let pt=0;pt<et.locationSize;pt++)O(et.location+pt,Pe/et.locationSize,ct,ue,Pe*rt,Pe/et.locationSize*pt*rt,Gt)}}else if(Ue!==void 0){const ue=Ue[Le];if(ue!==void 0)switch(ue.length){case 2:s.vertexAttrib2fv(et.location,ue);break;case 3:s.vertexAttrib3fv(et.location,ue);break;case 4:s.vertexAttrib4fv(et.location,ue);break;default:s.vertexAttrib1fv(et.location,ue)}}}}F()}function ie(){Me();for(const Z in o){const me=o[Z];for(const le in me){const be=me[le];for(const _e in be)x(be[_e].object),delete be[_e];delete me[le]}delete o[Z]}}function C(Z){if(o[Z.id]===void 0)return;const me=o[Z.id];for(const le in me){const be=me[le];for(const _e in be)x(be[_e].object),delete be[_e];delete me[le]}delete o[Z.id]}function k(Z){for(const me in o){const le=o[me];if(le[Z.id]===void 0)continue;const be=le[Z.id];for(const _e in be)x(be[_e].object),delete be[_e];delete le[Z.id]}}function Me(){Se(),d=!0,h!==l&&(h=l,g(h.object))}function Se(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:p,reset:Me,resetDefaultState:Se,dispose:ie,releaseStatesOfGeometry:C,releaseStatesOfProgram:k,initAttributes:S,enableAttribute:P,disableUnusedAttributes:F}}function rm(s,e,t,n){const i=n.isWebGL2;let r;function a(d){r=d}function o(d,p){s.drawArrays(r,d,p),t.update(p,r,1)}function l(d,p,m){if(m===0)return;let g,x;if(i)g=s,x="drawArraysInstanced";else if(g=e.get("ANGLE_instanced_arrays"),x="drawArraysInstancedANGLE",g===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[x](r,d,p,m),t.update(p,r,m)}function h(d,p,m){if(m===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let x=0;x<m;x++)this.render(d[x],p[x]);else{g.multiDrawArraysWEBGL(r,d,0,p,0,m);let x=0;for(let A=0;A<m;A++)x+=p[A];t.update(x,r,1)}}this.setMode=a,this.render=o,this.renderInstances=l,this.renderMultiDraw=h}function Wd(s,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const O=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(O.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(O){if(O==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";O="mediump"}return O==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext!="undefined"&&s.constructor.name==="WebGL2RenderingContext";let o=t.precision!==void 0?t.precision:"highp";const l=r(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const h=a||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,p=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),m=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=s.getParameter(s.MAX_TEXTURE_SIZE),x=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),A=s.getParameter(s.MAX_VERTEX_ATTRIBS),y=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),_=s.getParameter(s.MAX_VARYING_VECTORS),T=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),S=m>0,P=a||e.has("OES_texture_float"),V=S&&P,F=a?s.getParameter(s.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:r,precision:o,logarithmicDepthBuffer:d,maxTextures:p,maxVertexTextures:m,maxTextureSize:g,maxCubemapSize:x,maxAttributes:A,maxVertexUniforms:y,maxVaryings:_,maxFragmentUniforms:T,vertexTextures:S,floatFragmentTextures:P,floatVertexTextures:V,maxSamples:F}}function c(s){const e=this;let t=null,n=0,i=!1,r=!1;const a=new w,o=new bt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const g=p.length!==0||m||n!==0||i;return i=m,n=p.length,g},this.beginShadows=function(){r=!0,d(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(p,m){t=d(p,m,0)},this.setState=function(p,m,g){const x=p.clippingPlanes,A=p.clipIntersection,y=p.clipShadows,_=s.get(p);if(!i||x===null||x.length===0||r&&!y)r?d(null):h();else{const T=r?0:n,S=T*4;let P=_.clippingState||null;l.value=P,P=d(x,m,S,g);for(let V=0;V!==S;++V)P[V]=t[V];_.clippingState=P,this.numIntersection=A?this.numPlanes:0,this.numPlanes+=T}};function h(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(p,m,g,x){const A=p!==null?p.length:0;let y=null;if(A!==0){if(y=l.value,x!==!0||y===null){const _=g+A*4,T=m.matrixWorldInverse;o.getNormalMatrix(T),(y===null||y.length<_)&&(y=new Float32Array(_));for(let S=0,P=g;S!==A;++S,P+=4)a.copy(p[S]).applyMatrix4(T,o),a.normal.toArray(y,P),y[P+3]=a.constant}l.value=y,l.needsUpdate=!0}return e.numPlanes=A,e.numIntersection=0,y}}function u(s){let e=new WeakMap;function t(a,o){return o===Ns?a.mapping=ki:o===ss&&(a.mapping=hr),a}function n(a){if(a&&a.isTexture){const o=a.mapping;if(o===Ns||o===ss)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const h=new On(l.height);return h.fromEquirectangularTexture(s,a),e.set(a,h),a.addEventListener("dispose",i),t(h.texture,a.mapping)}else return null}}return a}function i(a){const o=a.target;o.removeEventListener("dispose",i);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class f extends Io{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,o=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=h*this.view.offsetX,a=r+h*this.view.width,o-=d*this.view.offsetY,l=o-d*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const v=4,E=[.125,.215,.35,.446,.526,.582],R=20,L=new f,U=new $e;let G=null,X=0,j=0;const ee=(1+Math.sqrt(5))/2,J=1/ee,fe=[new B(1,1,1),new B(-1,1,1),new B(1,1,-1),new B(-1,1,-1),new B(0,ee,J),new B(0,ee,-J),new B(J,0,ee),new B(-J,0,ee),new B(ee,J,0),new B(-ee,J,0)];class re{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){G=this._renderer.getRenderTarget(),X=this._renderer.getActiveCubeFace(),j=this._renderer.getActiveMipmapLevel(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=mt(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=ot(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(G,X,j),e.scissorTest=!1,Ne(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ki||e.mapping===hr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),G=this._renderer.getRenderTarget(),X=this._renderer.getActiveCubeFace(),j=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:mn,minFilter:mn,generateMipmaps:!1,type:ma,format:gn,colorSpace:ir,depthBuffer:!1},i=Te(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Te(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=de(r)),this._blurMaterial=ke(r,e,t)}return i}_compileMaterial(e){const t=new Wn(this._lodPlanes[0],e);this._renderer.compile(t,L)}_sceneToCubeUV(e,t,n,i){const o=new Cn(90,1,t,n),l=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,p=d.autoClear,m=d.toneMapping;d.getClearColor(U),d.toneMapping=Ir,d.autoClear=!1;const g=new Sr({name:"PMREM.Background",side:Jt,depthWrite:!1,depthTest:!1}),x=new Wn(new ar,g);let A=!1;const y=e.background;y?y.isColor&&(g.color.copy(y),e.background=null,A=!0):(g.color.copy(U),A=!0);for(let _=0;_<6;_++){const T=_%3;T===0?(o.up.set(0,l[_],0),o.lookAt(h[_],0,0)):T===1?(o.up.set(0,0,l[_]),o.lookAt(0,h[_],0)):(o.up.set(0,l[_],0),o.lookAt(0,0,h[_]));const S=this._cubeSize;Ne(i,T*S,_>2?S:0,S,S),d.setRenderTarget(i),A&&d.render(x,o),d.render(e,o)}x.geometry.dispose(),x.material.dispose(),d.toneMapping=m,d.autoClear=p,e.background=y}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===ki||e.mapping===hr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=mt()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=ot());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new Wn(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=e;const l=this._cubeSize;Ne(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(a,L)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=fe[(i-1)%fe.length];this._blur(e,i-1,i,r,a)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,o){const l=this._renderer,h=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,p=new Wn(this._lodPlanes[i],h),m=h.uniforms,g=this._sizeLods[n]-1,x=isFinite(r)?Math.PI/(2*g):2*Math.PI/(2*R-1),A=r/x,y=isFinite(r)?1+Math.floor(d*A):R;y>R&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${R}`);const _=[];let T=0;for(let O=0;O<R;++O){const q=O/A,ie=Math.exp(-q*q/2);_.push(ie),O===0?T+=ie:O<y&&(T+=2*ie)}for(let O=0;O<_.length;O++)_[O]=_[O]/T;m.envMap.value=e.texture,m.samples.value=y,m.weights.value=_,m.latitudinal.value=a==="latitudinal",o&&(m.poleAxis.value=o);const{_lodMax:S}=this;m.dTheta.value=x,m.mipInt.value=S-n;const P=this._sizeLods[i],V=3*P*(i>S-v?i-S+v:0),F=4*(this._cubeSize-P);Ne(t,V,F,3*P,2*P),l.setRenderTarget(t),l.render(p,L)}}function de(s){const e=[],t=[],n=[];let i=s;const r=s-v+1+E.length;for(let a=0;a<r;a++){const o=Math.pow(2,i);t.push(o);let l=1/o;a>s-v?l=E[a-s+v-1]:a===0&&(l=0),n.push(l);const h=1/(o-2),d=-h,p=1+h,m=[d,d,p,d,p,p,d,d,p,p,d,p],g=6,x=6,A=3,y=2,_=1,T=new Float32Array(A*x*g),S=new Float32Array(y*x*g),P=new Float32Array(_*x*g);for(let F=0;F<g;F++){const O=F%3*2/3-1,q=F>2?0:-1,ie=[O,q,0,O+2/3,q,0,O+2/3,q+1,0,O,q,0,O+2/3,q+1,0,O,q+1,0];T.set(ie,A*x*F),S.set(m,y*x*F);const C=[F,F,F,F,F,F];P.set(C,_*x*F)}const V=new Pt;V.setAttribute("position",new xn(T,A)),V.setAttribute("uv",new xn(S,y)),V.setAttribute("faceIndex",new xn(P,_)),e.push(V),i>v&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Te(s,e,t){const n=new vs(s,e,t);return n.texture.mapping=Fs,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Ne(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function ke(s,e,t){const n=new Float32Array(R),i=new B(0,1,0);return new cr({name:"SphericalGaussianBlur",defines:{n:R,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:it(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Rr,depthTest:!1,depthWrite:!1})}function ot(){return new cr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:it(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Rr,depthTest:!1,depthWrite:!1})}function mt(){return new cr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:it(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Rr,depthTest:!1,depthWrite:!1})}function it(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function gt(s){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const l=o.mapping,h=l===Ns||l===ss,d=l===ki||l===hr;if(h||d)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let p=e.get(o);return t===null&&(t=new re(s)),p=h?t.fromEquirectangular(o,p):t.fromCubemap(o,p),e.set(o,p),p.texture}else{if(e.has(o))return e.get(o).texture;{const p=o.image;if(h&&p&&p.height>0||d&&p&&i(p)){t===null&&(t=new re(s));const m=h?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,m),o.addEventListener("dispose",r),m.texture}else return null}}}return o}function i(o){let l=0;const h=6;for(let d=0;d<h;d++)o[d]!==void 0&&l++;return l===h}function r(o){const l=o.target;l.removeEventListener("dispose",r);const h=e.get(l);h!==void 0&&(e.delete(l),h.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function Xt(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?(t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance")):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function on(s,e,t,n){const i={},r=new WeakMap;function a(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const x in m.attributes)e.remove(m.attributes[x]);for(const x in m.morphAttributes){const A=m.morphAttributes[x];for(let y=0,_=A.length;y<_;y++)e.remove(A[y])}m.removeEventListener("dispose",a),delete i[m.id];const g=r.get(m);g&&(e.remove(g),r.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function o(p,m){return i[m.id]===!0||(m.addEventListener("dispose",a),i[m.id]=!0,t.memory.geometries++),m}function l(p){const m=p.attributes;for(const x in m)e.update(m[x],s.ARRAY_BUFFER);const g=p.morphAttributes;for(const x in g){const A=g[x];for(let y=0,_=A.length;y<_;y++)e.update(A[y],s.ARRAY_BUFFER)}}function h(p){const m=[],g=p.index,x=p.attributes.position;let A=0;if(g!==null){const T=g.array;A=g.version;for(let S=0,P=T.length;S<P;S+=3){const V=T[S+0],F=T[S+1],O=T[S+2];m.push(V,F,F,O,O,V)}}else if(x!==void 0){const T=x.array;A=x.version;for(let S=0,P=T.length/3-1;S<P;S+=3){const V=S+0,F=S+1,O=S+2;m.push(V,F,F,O,O,V)}}else return;const y=new(Ma(m)?Tc:Ec)(m,1);y.version=A;const _=r.get(p);_&&e.remove(_),r.set(p,y)}function d(p){const m=r.get(p);if(m){const g=p.index;g!==null&&m.version<g.version&&h(p)}else h(p);return r.get(p)}return{get:o,update:l,getWireframeAttribute:d}}function pn(s,e,t,n){const i=n.isWebGL2;let r;function a(g){r=g}let o,l;function h(g){o=g.type,l=g.bytesPerElement}function d(g,x){s.drawElements(r,x,o,g*l),t.update(x,r,1)}function p(g,x,A){if(A===0)return;let y,_;if(i)y=s,_="drawElementsInstanced";else if(y=e.get("ANGLE_instanced_arrays"),_="drawElementsInstancedANGLE",y===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}y[_](r,x,o,g*l,A),t.update(x,r,A)}function m(g,x,A){if(A===0)return;const y=e.get("WEBGL_multi_draw");if(y===null)for(let _=0;_<A;_++)this.render(g[_]/l,x[_]);else{y.multiDrawElementsWEBGL(r,x,0,o,g,0,A);let _=0;for(let T=0;T<A;T++)_+=x[T];t.update(_,r,1)}}this.setMode=a,this.setIndex=h,this.render=d,this.renderInstances=p,this.renderMultiDraw=m}function yn(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,o){switch(t.calls++,a){case s.TRIANGLES:t.triangles+=o*(r/3);break;case s.LINES:t.lines+=o*(r/2);break;case s.LINE_STRIP:t.lines+=o*(r-1);break;case s.LINE_LOOP:t.lines+=o*r;break;case s.POINTS:t.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function wn(s,e){return s[0]-e[0]}function Kn(s,e){return Math.abs(e[1])-Math.abs(s[1])}function $n(s,e,t){const n={},i=new Float32Array(8),r=new WeakMap,a=new nn,o=[];for(let h=0;h<8;h++)o[h]=[h,0];function l(h,d,p){const m=h.morphTargetInfluences;if(e.isWebGL2===!0){const g=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,x=g!==void 0?g.length:0;let A=r.get(d);if(A===void 0||A.count!==x){let Me=function(){C.dispose(),r.delete(d),d.removeEventListener("dispose",Me)};A!==void 0&&A.texture.dispose();const y=d.morphAttributes.position!==void 0,_=d.morphAttributes.normal!==void 0,T=d.morphAttributes.color!==void 0,S=d.morphAttributes.position||[],P=d.morphAttributes.normal||[],V=d.morphAttributes.color||[];let F=0;y===!0&&(F=1),_===!0&&(F=2),T===!0&&(F=3);let O=d.attributes.position.count*F,q=1;O>e.maxTextureSize&&(q=Math.ceil(O/e.maxTextureSize),O=e.maxTextureSize);const ie=new Float32Array(O*q*4*x),C=new _c(ie,O,q,x);C.type=ei,C.needsUpdate=!0;const k=F*4;for(let Se=0;Se<x;Se++){const Z=S[Se],me=P[Se],le=V[Se],be=O*q*4*Se;for(let _e=0;_e<Z.count;_e++){const xe=_e*k;y===!0&&(a.fromBufferAttribute(Z,_e),ie[be+xe+0]=a.x,ie[be+xe+1]=a.y,ie[be+xe+2]=a.z,ie[be+xe+3]=0),_===!0&&(a.fromBufferAttribute(me,_e),ie[be+xe+4]=a.x,ie[be+xe+5]=a.y,ie[be+xe+6]=a.z,ie[be+xe+7]=0),T===!0&&(a.fromBufferAttribute(le,_e),ie[be+xe+8]=a.x,ie[be+xe+9]=a.y,ie[be+xe+10]=a.z,ie[be+xe+11]=le.itemSize===4?a.w:1)}}A={count:x,texture:C,size:new ve(O,q)},r.set(d,A),d.addEventListener("dispose",Me)}if(h.isInstancedMesh===!0&&h.morphTexture!==null)p.getUniforms().setValue(s,"morphTexture",h.morphTexture,t);else{let y=0;for(let T=0;T<m.length;T++)y+=m[T];const _=d.morphTargetsRelative?1:1-y;p.getUniforms().setValue(s,"morphTargetBaseInfluence",_),p.getUniforms().setValue(s,"morphTargetInfluences",m)}p.getUniforms().setValue(s,"morphTargetsTexture",A.texture,t),p.getUniforms().setValue(s,"morphTargetsTextureSize",A.size)}else{const g=m===void 0?0:m.length;let x=n[d.id];if(x===void 0||x.length!==g){x=[];for(let S=0;S<g;S++)x[S]=[S,0];n[d.id]=x}for(let S=0;S<g;S++){const P=x[S];P[0]=S,P[1]=m[S]}x.sort(Kn);for(let S=0;S<8;S++)S<g&&x[S][1]?(o[S][0]=x[S][0],o[S][1]=x[S][1]):(o[S][0]=Number.MAX_SAFE_INTEGER,o[S][1]=0);o.sort(wn);const A=d.morphAttributes.position,y=d.morphAttributes.normal;let _=0;for(let S=0;S<8;S++){const P=o[S],V=P[0],F=P[1];V!==Number.MAX_SAFE_INTEGER&&F?(A&&d.getAttribute("morphTarget"+S)!==A[V]&&d.setAttribute("morphTarget"+S,A[V]),y&&d.getAttribute("morphNormal"+S)!==y[V]&&d.setAttribute("morphNormal"+S,y[V]),i[S]=F,_+=F):(A&&d.hasAttribute("morphTarget"+S)===!0&&d.deleteAttribute("morphTarget"+S),y&&d.hasAttribute("morphNormal"+S)===!0&&d.deleteAttribute("morphNormal"+S),i[S]=0)}const T=d.morphTargetsRelative?1:1-_;p.getUniforms().setValue(s,"morphTargetBaseInfluence",T),p.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:l}}function pi(s,e,t,n){let i=new WeakMap;function r(l){const h=n.render.frame,d=l.geometry,p=e.get(l,d);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),i.get(l)!==h&&(t.update(l.instanceMatrix,s.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,s.ARRAY_BUFFER),i.set(l,h))),l.isSkinnedMesh){const m=l.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function a(){i=new WeakMap}function o(l){const h=l.target;h.removeEventListener("dispose",o),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:r,dispose:a}}class mi extends Hn{constructor(e,t,n,i,r,a,o,l,h,d){if(d=d!==void 0?d:Ur,d!==Ur&&d!==Bs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===Ur&&(n=Qi),n===void 0&&d===Bs&&(n=os),super(null,i,r,a,o,l,d,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:En,this.minFilter=l!==void 0?l:En,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const gi=new Hn,_i=new mi(1,1);_i.compareFunction=Tl;const vi=new _c,Xa=new Nl,Bc=new Lo,zc=[],kc=[],Gc=new Float32Array(16),Vc=new Float32Array(9),Hc=new Float32Array(4);function $a(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=zc[i];if(r===void 0&&(r=new Float32Array(i),zc[i]=r),e!==0){n.toArray(r,0);for(let a=1,o=0;a!==e;++a)o+=t,s[a].toArray(r,o)}return r}function kn(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function Gn(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function Wc(s,e){let t=kc[e];t===void 0&&(t=new Int32Array(e),kc[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function xi(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function Y0(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(kn(t,e))return;s.uniform2fv(this.addr,e),Gn(t,e)}}function Z0(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(kn(t,e))return;s.uniform3fv(this.addr,e),Gn(t,e)}}function J0(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(kn(t,e))return;s.uniform4fv(this.addr,e),Gn(t,e)}}function K0(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(kn(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),Gn(t,e)}else{if(kn(t,n))return;Hc.set(n),s.uniformMatrix2fv(this.addr,!1,Hc),Gn(t,n)}}function j0(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(kn(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),Gn(t,e)}else{if(kn(t,n))return;Vc.set(n),s.uniformMatrix3fv(this.addr,!1,Vc),Gn(t,n)}}function Q0(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(kn(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),Gn(t,e)}else{if(kn(t,n))return;Gc.set(n),s.uniformMatrix4fv(this.addr,!1,Gc),Gn(t,n)}}function eg(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function tg(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(kn(t,e))return;s.uniform2iv(this.addr,e),Gn(t,e)}}function ng(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(kn(t,e))return;s.uniform3iv(this.addr,e),Gn(t,e)}}function ig(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(kn(t,e))return;s.uniform4iv(this.addr,e),Gn(t,e)}}function rg(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function sg(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(kn(t,e))return;s.uniform2uiv(this.addr,e),Gn(t,e)}}function ag(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(kn(t,e))return;s.uniform3uiv(this.addr,e),Gn(t,e)}}function og(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(kn(t,e))return;s.uniform4uiv(this.addr,e),Gn(t,e)}}function cg(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);const r=this.type===s.SAMPLER_2D_SHADOW?_i:gi;t.setTexture2D(e||r,i)}function lg(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Xa,i)}function ug(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Bc,i)}function hg(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||vi,i)}function fg(s){switch(s){case 5126:return xi;case 35664:return Y0;case 35665:return Z0;case 35666:return J0;case 35674:return K0;case 35675:return j0;case 35676:return Q0;case 5124:case 35670:return eg;case 35667:case 35671:return tg;case 35668:case 35672:return ng;case 35669:case 35673:return ig;case 5125:return rg;case 36294:return sg;case 36295:return ag;case 36296:return og;case 35678:case 36198:case 36298:case 36306:case 35682:return cg;case 35679:case 36299:case 36307:return lg;case 35680:case 36300:case 36308:case 36293:return ug;case 36289:case 36303:case 36311:case 36292:return hg}}function dg(s,e){s.uniform1fv(this.addr,e)}function pg(s,e){const t=$a(e,this.size,2);s.uniform2fv(this.addr,t)}function mg(s,e){const t=$a(e,this.size,3);s.uniform3fv(this.addr,t)}function gg(s,e){const t=$a(e,this.size,4);s.uniform4fv(this.addr,t)}function _g(s,e){const t=$a(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function vg(s,e){const t=$a(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function xg(s,e){const t=$a(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function yg(s,e){s.uniform1iv(this.addr,e)}function bg(s,e){s.uniform2iv(this.addr,e)}function Mg(s,e){s.uniform3iv(this.addr,e)}function Sg(s,e){s.uniform4iv(this.addr,e)}function Eg(s,e){s.uniform1uiv(this.addr,e)}function Ag(s,e){s.uniform2uiv(this.addr,e)}function Tg(s,e){s.uniform3uiv(this.addr,e)}function wg(s,e){s.uniform4uiv(this.addr,e)}function Rg(s,e,t){const n=this.cache,i=e.length,r=Wc(t,i);kn(n,r)||(s.uniform1iv(this.addr,r),Gn(n,r));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||gi,r[a])}function Cg(s,e,t){const n=this.cache,i=e.length,r=Wc(t,i);kn(n,r)||(s.uniform1iv(this.addr,r),Gn(n,r));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||Xa,r[a])}function Pg(s,e,t){const n=this.cache,i=e.length,r=Wc(t,i);kn(n,r)||(s.uniform1iv(this.addr,r),Gn(n,r));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||Bc,r[a])}function Ig(s,e,t){const n=this.cache,i=e.length,r=Wc(t,i);kn(n,r)||(s.uniform1iv(this.addr,r),Gn(n,r));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||vi,r[a])}function Lg(s){switch(s){case 5126:return dg;case 35664:return pg;case 35665:return mg;case 35666:return gg;case 35674:return _g;case 35675:return vg;case 35676:return xg;case 5124:case 35670:return yg;case 35667:case 35671:return bg;case 35668:case 35672:return Mg;case 35669:case 35673:return Sg;case 5125:return Eg;case 36294:return Ag;case 36295:return Tg;case 36296:return wg;case 35678:case 36198:case 36298:case 36306:case 35682:return Rg;case 35679:case 36299:case 36307:return Cg;case 35680:case 36300:case 36308:case 36293:return Pg;case 36289:case 36303:case 36311:case 36292:return Ig}}class Dg{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=fg(t.type)}}class Ug{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=Lg(t.type)}}class Ng{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const o=i[r];o.setValue(e,t[o.id],n)}}}const Xd=/(\w+)(\])?(\[|\.)?/g;function sm(s,e){s.seq.push(e),s.map[e.id]=e}function Fg(s,e,t){const n=s.name,i=n.length;for(Xd.lastIndex=0;;){const r=Xd.exec(n),a=Xd.lastIndex;let o=r[1];const l=r[2]==="]",h=r[3];if(l&&(o=o|0),h===void 0||h==="["&&a+2===i){sm(t,h===void 0?new Dg(o,s,e):new Ug(o,s,e));break}else{let p=t.map[o];p===void 0&&(p=new Ng(o),sm(t,p)),t=p}}}class bf{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),a=e.getUniformLocation(t,r.name);Fg(r,a,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const o=t[r],l=n[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const a=e[i];a.id in t&&n.push(a)}return n}}function am(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}const Og=37297;let Bg=0;function zg(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let a=i;a<r;a++){const o=a+1;n.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return n.join(`
`)}function kg(s){const e=sn.getPrimaries(sn.workingColorSpace),t=sn.getPrimaries(s);let n;switch(e===t?n="":e===Hs&&t===mo?n="LinearDisplayP3ToLinearSRGB":e===mo&&t===Hs&&(n="LinearSRGBToLinearDisplayP3"),s){case ir:case Vs:return[n,"LinearTransferOETF"];case Si:case xa:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",s),[n,"LinearTransferOETF"]}}function om(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const a=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+zg(s.getShaderSource(e),a)}else return i}function Gg(s,e){const t=kg(e);return`vec4 ${s}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function Vg(s,e){let t;switch(e){case ol:t="Linear";break;case cl:t="Reinhard";break;case ll:t="OptimizedCineon";break;case Ho:t="ACESFilmic";break;case ul:t="AgX";break;case hl:t="Neutral";break;case Wo:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Hg(s){return[s.extensionDerivatives||s.envMapCubeUVHeight||s.bumpMap||s.normalMapTangentSpace||s.clearcoatNormalMap||s.flatShading||s.alphaToCoverage||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(jl).join(`
`)}function Wg(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(jl).join(`
`)}function Xg(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function $g(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),a=r.name;let o=1;r.type===s.FLOAT_MAT2&&(o=2),r.type===s.FLOAT_MAT3&&(o=3),r.type===s.FLOAT_MAT4&&(o=4),t[a]={type:r.type,location:s.getAttribLocation(e,a),locationSize:o}}return t}function jl(s){return s!==""}function cm(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function lm(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const qg=/^[ \t]*#include +<([\w\d./]+)>/gm;function $d(s){return s.replace(qg,Zg)}const Yg=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function Zg(s,e){let t=Lt[e];if(t===void 0){const n=Yg.get(e);if(n!==void 0)t=Lt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return $d(t)}const Jg=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function um(s){return s.replace(Jg,Kg)}function Kg(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function hm(s){let e=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	`;return s.isWebGL2&&(e+=`precision ${s.precision} sampler3D;
		precision ${s.precision} sampler2DArray;
		precision ${s.precision} sampler2DShadow;
		precision ${s.precision} samplerCubeShadow;
		precision ${s.precision} sampler2DArrayShadow;
		precision ${s.precision} isampler2D;
		precision ${s.precision} isampler3D;
		precision ${s.precision} isamplerCube;
		precision ${s.precision} isampler2DArray;
		precision ${s.precision} usampler2D;
		precision ${s.precision} usampler3D;
		precision ${s.precision} usamplerCube;
		precision ${s.precision} usampler2DArray;
		`),s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function jg(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===rl?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===hu?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Mi&&(e="SHADOWMAP_TYPE_VSM"),e}function Qg(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case ki:case hr:e="ENVMAP_TYPE_CUBE";break;case Fs:e="ENVMAP_TYPE_CUBE_UV";break}return e}function e_(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case hr:e="ENVMAP_MODE_REFRACTION";break}return e}function t_(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case to:e="ENVMAP_BLENDING_MULTIPLY";break;case wu:e="ENVMAP_BLENDING_MIX";break;case Vo:e="ENVMAP_BLENDING_ADD";break}return e}function n_(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function i_(s,e,t,n){const i=s.getContext(),r=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=jg(t),h=Qg(t),d=e_(t),p=t_(t),m=n_(t),g=t.isWebGL2?"":Hg(t),x=Wg(t),A=Xg(r),y=i.createProgram();let _,T,S=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,A].filter(jl).join(`
`),_.length>0&&(_+=`
`),T=[g,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,A].filter(jl).join(`
`),T.length>0&&(T+=`
`)):(_=[hm(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,A,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(jl).join(`
`),T=[g,hm(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,A,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ir?"#define TONE_MAPPING":"",t.toneMapping!==Ir?Lt.tonemapping_pars_fragment:"",t.toneMapping!==Ir?Vg("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Lt.colorspace_pars_fragment,Gg("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(jl).join(`
`)),a=$d(a),a=cm(a,t),a=lm(a,t),o=$d(o),o=cm(o,t),o=lm(o,t),a=um(a),o=um(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(S=`#version 300 es
`,_=[x,"precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+_,T=["precision mediump sampler2DArray;","#define varying in",t.glslVersion===Xs?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Xs?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+T);const P=S+_+a,V=S+T+o,F=am(i,i.VERTEX_SHADER,P),O=am(i,i.FRAGMENT_SHADER,V);i.attachShader(y,F),i.attachShader(y,O),t.index0AttributeName!==void 0?i.bindAttribLocation(y,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(y,0,"position"),i.linkProgram(y);function q(Me){if(s.debug.checkShaderErrors){const Se=i.getProgramInfoLog(y).trim(),Z=i.getShaderInfoLog(F).trim(),me=i.getShaderInfoLog(O).trim();let le=!0,be=!0;if(i.getProgramParameter(y,i.LINK_STATUS)===!1)if(le=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,y,F,O);else{const _e=om(i,F,"vertex"),xe=om(i,O,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(y,i.VALIDATE_STATUS)+`

Material Name: `+Me.name+`
Material Type: `+Me.type+`

Program Info Log: `+Se+`
`+_e+`
`+xe)}else Se!==""?console.warn("THREE.WebGLProgram: Program Info Log:",Se):(Z===""||me==="")&&(be=!1);be&&(Me.diagnostics={runnable:le,programLog:Se,vertexShader:{log:Z,prefix:_},fragmentShader:{log:me,prefix:T}})}i.deleteShader(F),i.deleteShader(O),ie=new bf(i,y),C=$g(i,y)}let ie;this.getUniforms=function(){return ie===void 0&&q(this),ie};let C;this.getAttributes=function(){return C===void 0&&q(this),C};let k=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return k===!1&&(k=i.getProgramParameter(y,Og)),k},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(y),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=Bg++,this.cacheKey=e,this.usedTimes=1,this.program=y,this.vertexShader=F,this.fragmentShader=O,this}let r_=0;class s_{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new a_(e),t.set(e,n)),n}}class a_{constructor(e){this.id=r_++,this.code=e,this.usedTimes=0}}function o_(s,e,t,n,i,r,a){const o=new Ss,l=new s_,h=new Set,d=[],p=i.isWebGL2,m=i.logarithmicDepthBuffer,g=i.vertexTextures;let x=i.precision;const A={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function y(C){return h.add(C),C===0?"uv":`uv${C}`}function _(C,k,Me,Se,Z){const me=Se.fog,le=Z.geometry,be=C.isMeshStandardMaterial?Se.environment:null,_e=(C.isMeshStandardMaterial?t:e).get(C.envMap||be),xe=_e&&_e.mapping===Fs?_e.image.height:null,Ue=A[C.type];C.precision!==null&&(x=i.getMaxPrecision(C.precision),x!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",x,"instead."));const Le=le.morphAttributes.position||le.morphAttributes.normal||le.morphAttributes.color,et=Le!==void 0?Le.length:0;let wt=0;le.morphAttributes.position!==void 0&&(wt=1),le.morphAttributes.normal!==void 0&&(wt=2),le.morphAttributes.color!==void 0&&(wt=3);let ue,Pe,je,dt;if(Ue){const bn=es[Ue];ue=bn.vertexShader,Pe=bn.fragmentShader}else ue=C.vertexShader,Pe=C.fragmentShader,l.update(C),je=l.getVertexShaderID(C),dt=l.getFragmentShaderID(C);const ct=s.getRenderTarget(),rt=Z.isInstancedMesh===!0,Gt=Z.isBatchedMesh===!0,pt=!!C.map,W=!!C.matcap,Be=!!_e,ye=!!C.aoMap,Fe=!!C.lightMap,Ae=!!C.bumpMap,nt=!!C.normalMap,Je=!!C.displacementMap,at=!!C.emissiveMap,qt=!!C.metalnessMap,z=!!C.roughnessMap,I=C.anisotropy>0,he=C.clearcoat>0,ge=C.iridescence>0,Ie=C.sheen>0,Ce=C.transmission>0,Rt=I&&!!C.anisotropyMap,vt=he&&!!C.clearcoatMap,Ve=he&&!!C.clearcoatNormalMap,We=he&&!!C.clearcoatRoughnessMap,Ct=ge&&!!C.iridescenceMap,Oe=ge&&!!C.iridescenceThicknessMap,jn=Ie&&!!C.sheenColorMap,Yt=Ie&&!!C.sheenRoughnessMap,_t=!!C.specularMap,lt=!!C.specularColorMap,ht=!!C.specularIntensityMap,tn=Ce&&!!C.transmissionMap,Ft=Ce&&!!C.thicknessMap,In=!!C.gradientMap,K=!!C.alphaMap,Xe=C.alphaTest>0,ae=!!C.alphaHash,Ge=!!C.extensions;let qe=Ir;C.toneMapped&&(ct===null||ct.isXRRenderTarget===!0)&&(qe=s.toneMapping);const Zt={isWebGL2:p,shaderID:Ue,shaderType:C.type,shaderName:C.name,vertexShader:ue,fragmentShader:Pe,defines:C.defines,customVertexShaderID:je,customFragmentShaderID:dt,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:x,batching:Gt,instancing:rt,instancingColor:rt&&Z.instanceColor!==null,instancingMorph:rt&&Z.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:ct===null?s.outputColorSpace:ct.isXRRenderTarget===!0?ct.texture.colorSpace:ir,alphaToCoverage:!!C.alphaToCoverage,map:pt,matcap:W,envMap:Be,envMapMode:Be&&_e.mapping,envMapCubeUVHeight:xe,aoMap:ye,lightMap:Fe,bumpMap:Ae,normalMap:nt,displacementMap:g&&Je,emissiveMap:at,normalMapObjectSpace:nt&&C.normalMapType===fr,normalMapTangentSpace:nt&&C.normalMapType===tr,metalnessMap:qt,roughnessMap:z,anisotropy:I,anisotropyMap:Rt,clearcoat:he,clearcoatMap:vt,clearcoatNormalMap:Ve,clearcoatRoughnessMap:We,iridescence:ge,iridescenceMap:Ct,iridescenceThicknessMap:Oe,sheen:Ie,sheenColorMap:jn,sheenRoughnessMap:Yt,specularMap:_t,specularColorMap:lt,specularIntensityMap:ht,transmission:Ce,transmissionMap:tn,thicknessMap:Ft,gradientMap:In,opaque:C.transparent===!1&&C.blending===is&&C.alphaToCoverage===!1,alphaMap:K,alphaTest:Xe,alphaHash:ae,combine:C.combine,mapUv:pt&&y(C.map.channel),aoMapUv:ye&&y(C.aoMap.channel),lightMapUv:Fe&&y(C.lightMap.channel),bumpMapUv:Ae&&y(C.bumpMap.channel),normalMapUv:nt&&y(C.normalMap.channel),displacementMapUv:Je&&y(C.displacementMap.channel),emissiveMapUv:at&&y(C.emissiveMap.channel),metalnessMapUv:qt&&y(C.metalnessMap.channel),roughnessMapUv:z&&y(C.roughnessMap.channel),anisotropyMapUv:Rt&&y(C.anisotropyMap.channel),clearcoatMapUv:vt&&y(C.clearcoatMap.channel),clearcoatNormalMapUv:Ve&&y(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:We&&y(C.clearcoatRoughnessMap.channel),iridescenceMapUv:Ct&&y(C.iridescenceMap.channel),iridescenceThicknessMapUv:Oe&&y(C.iridescenceThicknessMap.channel),sheenColorMapUv:jn&&y(C.sheenColorMap.channel),sheenRoughnessMapUv:Yt&&y(C.sheenRoughnessMap.channel),specularMapUv:_t&&y(C.specularMap.channel),specularColorMapUv:lt&&y(C.specularColorMap.channel),specularIntensityMapUv:ht&&y(C.specularIntensityMap.channel),transmissionMapUv:tn&&y(C.transmissionMap.channel),thicknessMapUv:Ft&&y(C.thicknessMap.channel),alphaMapUv:K&&y(C.alphaMap.channel),vertexTangents:!!le.attributes.tangent&&(nt||I),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!le.attributes.color&&le.attributes.color.itemSize===4,pointsUvs:Z.isPoints===!0&&!!le.attributes.uv&&(pt||K),fog:!!me,useFog:C.fog===!0,fogExp2:!!me&&me.isFogExp2,flatShading:C.flatShading===!0,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:m,skinning:Z.isSkinnedMesh===!0,morphTargets:le.morphAttributes.position!==void 0,morphNormals:le.morphAttributes.normal!==void 0,morphColors:le.morphAttributes.color!==void 0,morphTargetsCount:et,morphTextureStride:wt,numDirLights:k.directional.length,numPointLights:k.point.length,numSpotLights:k.spot.length,numSpotLightMaps:k.spotLightMap.length,numRectAreaLights:k.rectArea.length,numHemiLights:k.hemi.length,numDirLightShadows:k.directionalShadowMap.length,numPointLightShadows:k.pointShadowMap.length,numSpotLightShadows:k.spotShadowMap.length,numSpotLightShadowsWithMaps:k.numSpotLightShadowsWithMaps,numLightProbes:k.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:C.dithering,shadowMapEnabled:s.shadowMap.enabled&&Me.length>0,shadowMapType:s.shadowMap.type,toneMapping:qe,useLegacyLights:s._useLegacyLights,decodeVideoTexture:pt&&C.map.isVideoTexture===!0&&sn.getTransfer(C.map.colorSpace)===Ht,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===ur,flipSided:C.side===Jt,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionDerivatives:Ge&&C.extensions.derivatives===!0,extensionFragDepth:Ge&&C.extensions.fragDepth===!0,extensionDrawBuffers:Ge&&C.extensions.drawBuffers===!0,extensionShaderTextureLOD:Ge&&C.extensions.shaderTextureLOD===!0,extensionClipCullDistance:Ge&&C.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:Ge&&C.extensions.multiDraw===!0&&n.has("WEBGL_multi_draw"),rendererExtensionFragDepth:p||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:p||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:p||n.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:C.customProgramCacheKey()};return Zt.vertexUv1s=h.has(1),Zt.vertexUv2s=h.has(2),Zt.vertexUv3s=h.has(3),h.clear(),Zt}function T(C){const k=[];if(C.shaderID?k.push(C.shaderID):(k.push(C.customVertexShaderID),k.push(C.customFragmentShaderID)),C.defines!==void 0)for(const Me in C.defines)k.push(Me),k.push(C.defines[Me]);return C.isRawShaderMaterial===!1&&(S(k,C),P(k,C),k.push(s.outputColorSpace)),k.push(C.customProgramCacheKey),k.join()}function S(C,k){C.push(k.precision),C.push(k.outputColorSpace),C.push(k.envMapMode),C.push(k.envMapCubeUVHeight),C.push(k.mapUv),C.push(k.alphaMapUv),C.push(k.lightMapUv),C.push(k.aoMapUv),C.push(k.bumpMapUv),C.push(k.normalMapUv),C.push(k.displacementMapUv),C.push(k.emissiveMapUv),C.push(k.metalnessMapUv),C.push(k.roughnessMapUv),C.push(k.anisotropyMapUv),C.push(k.clearcoatMapUv),C.push(k.clearcoatNormalMapUv),C.push(k.clearcoatRoughnessMapUv),C.push(k.iridescenceMapUv),C.push(k.iridescenceThicknessMapUv),C.push(k.sheenColorMapUv),C.push(k.sheenRoughnessMapUv),C.push(k.specularMapUv),C.push(k.specularColorMapUv),C.push(k.specularIntensityMapUv),C.push(k.transmissionMapUv),C.push(k.thicknessMapUv),C.push(k.combine),C.push(k.fogExp2),C.push(k.sizeAttenuation),C.push(k.morphTargetsCount),C.push(k.morphAttributeCount),C.push(k.numDirLights),C.push(k.numPointLights),C.push(k.numSpotLights),C.push(k.numSpotLightMaps),C.push(k.numHemiLights),C.push(k.numRectAreaLights),C.push(k.numDirLightShadows),C.push(k.numPointLightShadows),C.push(k.numSpotLightShadows),C.push(k.numSpotLightShadowsWithMaps),C.push(k.numLightProbes),C.push(k.shadowMapType),C.push(k.toneMapping),C.push(k.numClippingPlanes),C.push(k.numClipIntersection),C.push(k.depthPacking)}function P(C,k){o.disableAll(),k.isWebGL2&&o.enable(0),k.supportsVertexTextures&&o.enable(1),k.instancing&&o.enable(2),k.instancingColor&&o.enable(3),k.instancingMorph&&o.enable(4),k.matcap&&o.enable(5),k.envMap&&o.enable(6),k.normalMapObjectSpace&&o.enable(7),k.normalMapTangentSpace&&o.enable(8),k.clearcoat&&o.enable(9),k.iridescence&&o.enable(10),k.alphaTest&&o.enable(11),k.vertexColors&&o.enable(12),k.vertexAlphas&&o.enable(13),k.vertexUv1s&&o.enable(14),k.vertexUv2s&&o.enable(15),k.vertexUv3s&&o.enable(16),k.vertexTangents&&o.enable(17),k.anisotropy&&o.enable(18),k.alphaHash&&o.enable(19),k.batching&&o.enable(20),C.push(o.mask),o.disableAll(),k.fog&&o.enable(0),k.useFog&&o.enable(1),k.flatShading&&o.enable(2),k.logarithmicDepthBuffer&&o.enable(3),k.skinning&&o.enable(4),k.morphTargets&&o.enable(5),k.morphNormals&&o.enable(6),k.morphColors&&o.enable(7),k.premultipliedAlpha&&o.enable(8),k.shadowMapEnabled&&o.enable(9),k.useLegacyLights&&o.enable(10),k.doubleSided&&o.enable(11),k.flipSided&&o.enable(12),k.useDepthPacking&&o.enable(13),k.dithering&&o.enable(14),k.transmission&&o.enable(15),k.sheen&&o.enable(16),k.opaque&&o.enable(17),k.pointsUvs&&o.enable(18),k.decodeVideoTexture&&o.enable(19),k.alphaToCoverage&&o.enable(20),C.push(o.mask)}function V(C){const k=A[C.type];let Me;if(k){const Se=es[k];Me=Vl.clone(Se.uniforms)}else Me=C.uniforms;return Me}function F(C,k){let Me;for(let Se=0,Z=d.length;Se<Z;Se++){const me=d[Se];if(me.cacheKey===k){Me=me,++Me.usedTimes;break}}return Me===void 0&&(Me=new i_(s,k,C,r),d.push(Me)),Me}function O(C){if(--C.usedTimes===0){const k=d.indexOf(C);d[k]=d[d.length-1],d.pop(),C.destroy()}}function q(C){l.remove(C)}function ie(){l.dispose()}return{getParameters:_,getProgramCacheKey:T,getUniforms:V,acquireProgram:F,releaseProgram:O,releaseShaderCache:q,programs:d,dispose:ie}}function c_(){let s=new WeakMap;function e(r){let a=s.get(r);return a===void 0&&(a={},s.set(r,a)),a}function t(r){s.delete(r)}function n(r,a,o){s.get(r)[a]=o}function i(){s=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function l_(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function fm(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function dm(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function a(p,m,g,x,A,y){let _=s[e];return _===void 0?(_={id:p.id,object:p,geometry:m,material:g,groupOrder:x,renderOrder:p.renderOrder,z:A,group:y},s[e]=_):(_.id=p.id,_.object=p,_.geometry=m,_.material=g,_.groupOrder=x,_.renderOrder=p.renderOrder,_.z=A,_.group=y),e++,_}function o(p,m,g,x,A,y){const _=a(p,m,g,x,A,y);g.transmission>0?n.push(_):g.transparent===!0?i.push(_):t.push(_)}function l(p,m,g,x,A,y){const _=a(p,m,g,x,A,y);g.transmission>0?n.unshift(_):g.transparent===!0?i.unshift(_):t.unshift(_)}function h(p,m){t.length>1&&t.sort(p||l_),n.length>1&&n.sort(m||fm),i.length>1&&i.sort(m||fm)}function d(){for(let p=e,m=s.length;p<m;p++){const g=s[p];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:o,unshift:l,finish:d,sort:h}}function u_(){let s=new WeakMap;function e(n,i){const r=s.get(n);let a;return r===void 0?(a=new dm,s.set(n,[a])):i>=r.length?(a=new dm,r.push(a)):a=r[i],a}function t(){s=new WeakMap}return{get:e,dispose:t}}function h_(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new B,color:new $e};break;case"SpotLight":t={position:new B,direction:new B,color:new $e,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new B,color:new $e,distance:0,decay:0};break;case"HemisphereLight":t={direction:new B,skyColor:new $e,groundColor:new $e};break;case"RectAreaLight":t={color:new $e,position:new B,halfWidth:new B,halfHeight:new B};break}return s[e.id]=t,t}}}function f_(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let d_=0;function p_(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function m_(s,e){const t=new h_,n=f_(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let d=0;d<9;d++)i.probe.push(new B);const r=new B,a=new st,o=new st;function l(d,p){let m=0,g=0,x=0;for(let Me=0;Me<9;Me++)i.probe[Me].set(0,0,0);let A=0,y=0,_=0,T=0,S=0,P=0,V=0,F=0,O=0,q=0,ie=0;d.sort(p_);const C=p===!0?Math.PI:1;for(let Me=0,Se=d.length;Me<Se;Me++){const Z=d[Me],me=Z.color,le=Z.intensity,be=Z.distance,_e=Z.shadow&&Z.shadow.map?Z.shadow.map.texture:null;if(Z.isAmbientLight)m+=me.r*le*C,g+=me.g*le*C,x+=me.b*le*C;else if(Z.isLightProbe){for(let xe=0;xe<9;xe++)i.probe[xe].addScaledVector(Z.sh.coefficients[xe],le);ie++}else if(Z.isDirectionalLight){const xe=t.get(Z);if(xe.color.copy(Z.color).multiplyScalar(Z.intensity*C),Z.castShadow){const Ue=Z.shadow,Le=n.get(Z);Le.shadowBias=Ue.bias,Le.shadowNormalBias=Ue.normalBias,Le.shadowRadius=Ue.radius,Le.shadowMapSize=Ue.mapSize,i.directionalShadow[A]=Le,i.directionalShadowMap[A]=_e,i.directionalShadowMatrix[A]=Z.shadow.matrix,P++}i.directional[A]=xe,A++}else if(Z.isSpotLight){const xe=t.get(Z);xe.position.setFromMatrixPosition(Z.matrixWorld),xe.color.copy(me).multiplyScalar(le*C),xe.distance=be,xe.coneCos=Math.cos(Z.angle),xe.penumbraCos=Math.cos(Z.angle*(1-Z.penumbra)),xe.decay=Z.decay,i.spot[_]=xe;const Ue=Z.shadow;if(Z.map&&(i.spotLightMap[O]=Z.map,O++,Ue.updateMatrices(Z),Z.castShadow&&q++),i.spotLightMatrix[_]=Ue.matrix,Z.castShadow){const Le=n.get(Z);Le.shadowBias=Ue.bias,Le.shadowNormalBias=Ue.normalBias,Le.shadowRadius=Ue.radius,Le.shadowMapSize=Ue.mapSize,i.spotShadow[_]=Le,i.spotShadowMap[_]=_e,F++}_++}else if(Z.isRectAreaLight){const xe=t.get(Z);xe.color.copy(me).multiplyScalar(le),xe.halfWidth.set(Z.width*.5,0,0),xe.halfHeight.set(0,Z.height*.5,0),i.rectArea[T]=xe,T++}else if(Z.isPointLight){const xe=t.get(Z);if(xe.color.copy(Z.color).multiplyScalar(Z.intensity*C),xe.distance=Z.distance,xe.decay=Z.decay,Z.castShadow){const Ue=Z.shadow,Le=n.get(Z);Le.shadowBias=Ue.bias,Le.shadowNormalBias=Ue.normalBias,Le.shadowRadius=Ue.radius,Le.shadowMapSize=Ue.mapSize,Le.shadowCameraNear=Ue.camera.near,Le.shadowCameraFar=Ue.camera.far,i.pointShadow[y]=Le,i.pointShadowMap[y]=_e,i.pointShadowMatrix[y]=Z.shadow.matrix,V++}i.point[y]=xe,y++}else if(Z.isHemisphereLight){const xe=t.get(Z);xe.skyColor.copy(Z.color).multiplyScalar(le*C),xe.groundColor.copy(Z.groundColor).multiplyScalar(le*C),i.hemi[S]=xe,S++}}T>0&&(e.isWebGL2?s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=ze.LTC_FLOAT_1,i.rectAreaLTC2=ze.LTC_FLOAT_2):(i.rectAreaLTC1=ze.LTC_HALF_1,i.rectAreaLTC2=ze.LTC_HALF_2):s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=ze.LTC_FLOAT_1,i.rectAreaLTC2=ze.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=ze.LTC_HALF_1,i.rectAreaLTC2=ze.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=m,i.ambient[1]=g,i.ambient[2]=x;const k=i.hash;(k.directionalLength!==A||k.pointLength!==y||k.spotLength!==_||k.rectAreaLength!==T||k.hemiLength!==S||k.numDirectionalShadows!==P||k.numPointShadows!==V||k.numSpotShadows!==F||k.numSpotMaps!==O||k.numLightProbes!==ie)&&(i.directional.length=A,i.spot.length=_,i.rectArea.length=T,i.point.length=y,i.hemi.length=S,i.directionalShadow.length=P,i.directionalShadowMap.length=P,i.pointShadow.length=V,i.pointShadowMap.length=V,i.spotShadow.length=F,i.spotShadowMap.length=F,i.directionalShadowMatrix.length=P,i.pointShadowMatrix.length=V,i.spotLightMatrix.length=F+O-q,i.spotLightMap.length=O,i.numSpotLightShadowsWithMaps=q,i.numLightProbes=ie,k.directionalLength=A,k.pointLength=y,k.spotLength=_,k.rectAreaLength=T,k.hemiLength=S,k.numDirectionalShadows=P,k.numPointShadows=V,k.numSpotShadows=F,k.numSpotMaps=O,k.numLightProbes=ie,i.version=d_++)}function h(d,p){let m=0,g=0,x=0,A=0,y=0;const _=p.matrixWorldInverse;for(let T=0,S=d.length;T<S;T++){const P=d[T];if(P.isDirectionalLight){const V=i.directional[m];V.direction.setFromMatrixPosition(P.matrixWorld),r.setFromMatrixPosition(P.target.matrixWorld),V.direction.sub(r),V.direction.transformDirection(_),m++}else if(P.isSpotLight){const V=i.spot[x];V.position.setFromMatrixPosition(P.matrixWorld),V.position.applyMatrix4(_),V.direction.setFromMatrixPosition(P.matrixWorld),r.setFromMatrixPosition(P.target.matrixWorld),V.direction.sub(r),V.direction.transformDirection(_),x++}else if(P.isRectAreaLight){const V=i.rectArea[A];V.position.setFromMatrixPosition(P.matrixWorld),V.position.applyMatrix4(_),o.identity(),a.copy(P.matrixWorld),a.premultiply(_),o.extractRotation(a),V.halfWidth.set(P.width*.5,0,0),V.halfHeight.set(0,P.height*.5,0),V.halfWidth.applyMatrix4(o),V.halfHeight.applyMatrix4(o),A++}else if(P.isPointLight){const V=i.point[g];V.position.setFromMatrixPosition(P.matrixWorld),V.position.applyMatrix4(_),g++}else if(P.isHemisphereLight){const V=i.hemi[y];V.direction.setFromMatrixPosition(P.matrixWorld),V.direction.transformDirection(_),y++}}}return{setup:l,setupView:h,state:i}}function pm(s,e){const t=new m_(s,e),n=[],i=[];function r(){n.length=0,i.length=0}function a(p){n.push(p)}function o(p){i.push(p)}function l(p){t.setup(n,p)}function h(p){t.setupView(n,p)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:l,setupLightsView:h,pushLight:a,pushShadow:o}}function g_(s,e){let t=new WeakMap;function n(r,a=0){const o=t.get(r);let l;return o===void 0?(l=new pm(s,e),t.set(r,[l])):a>=o.length?(l=new pm(s,e),o.push(l)):l=o[a],l}function i(){t=new WeakMap}return{get:n,dispose:i}}class mm extends Ui{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Gs,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class gm extends Ui{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const __=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,v_=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function x_(s,e,t){let n=new Y;const i=new ve,r=new ve,a=new nn,o=new mm({depthPacking:Sl}),l=new gm,h={},d=t.maxTextureSize,p={[De]:Jt,[Jt]:De,[ur]:ur},m=new cr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ve},radius:{value:4}},vertexShader:__,fragmentShader:v_}),g=m.clone();g.defines.HORIZONTAL_PASS=1;const x=new Pt;x.setAttribute("position",new xn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const A=new Wn(x,m),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=rl;let _=this.type;this.render=function(F,O,q){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||F.length===0)return;const ie=s.getRenderTarget(),C=s.getActiveCubeFace(),k=s.getActiveMipmapLevel(),Me=s.state;Me.setBlending(Rr),Me.buffers.color.setClear(1,1,1,1),Me.buffers.depth.setTest(!0),Me.setScissorTest(!1);const Se=_!==Mi&&this.type===Mi,Z=_===Mi&&this.type!==Mi;for(let me=0,le=F.length;me<le;me++){const be=F[me],_e=be.shadow;if(_e===void 0){console.warn("THREE.WebGLShadowMap:",be,"has no shadow.");continue}if(_e.autoUpdate===!1&&_e.needsUpdate===!1)continue;i.copy(_e.mapSize);const xe=_e.getFrameExtents();if(i.multiply(xe),r.copy(_e.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(r.x=Math.floor(d/xe.x),i.x=r.x*xe.x,_e.mapSize.x=r.x),i.y>d&&(r.y=Math.floor(d/xe.y),i.y=r.y*xe.y,_e.mapSize.y=r.y)),_e.map===null||Se===!0||Z===!0){const Le=this.type!==Mi?{minFilter:En,magFilter:En}:{};_e.map!==null&&_e.map.dispose(),_e.map=new vs(i.x,i.y,Le),_e.map.texture.name=be.name+".shadowMap",_e.camera.updateProjectionMatrix()}s.setRenderTarget(_e.map),s.clear();const Ue=_e.getViewportCount();for(let Le=0;Le<Ue;Le++){const et=_e.getViewport(Le);a.set(r.x*et.x,r.y*et.y,r.x*et.z,r.y*et.w),Me.viewport(a),_e.updateMatrices(be,Le),n=_e.getFrustum(),P(O,q,_e.camera,be,this.type)}_e.isPointLightShadow!==!0&&this.type===Mi&&T(_e,q),_e.needsUpdate=!1}_=this.type,y.needsUpdate=!1,s.setRenderTarget(ie,C,k)};function T(F,O){const q=e.update(A);m.defines.VSM_SAMPLES!==F.blurSamples&&(m.defines.VSM_SAMPLES=F.blurSamples,g.defines.VSM_SAMPLES=F.blurSamples,m.needsUpdate=!0,g.needsUpdate=!0),F.mapPass===null&&(F.mapPass=new vs(i.x,i.y)),m.uniforms.shadow_pass.value=F.map.texture,m.uniforms.resolution.value=F.mapSize,m.uniforms.radius.value=F.radius,s.setRenderTarget(F.mapPass),s.clear(),s.renderBufferDirect(O,null,q,m,A,null),g.uniforms.shadow_pass.value=F.mapPass.texture,g.uniforms.resolution.value=F.mapSize,g.uniforms.radius.value=F.radius,s.setRenderTarget(F.map),s.clear(),s.renderBufferDirect(O,null,q,g,A,null)}function S(F,O,q,ie){let C=null;const k=q.isPointLight===!0?F.customDistanceMaterial:F.customDepthMaterial;if(k!==void 0)C=k;else if(C=q.isPointLight===!0?l:o,s.localClippingEnabled&&O.clipShadows===!0&&Array.isArray(O.clippingPlanes)&&O.clippingPlanes.length!==0||O.displacementMap&&O.displacementScale!==0||O.alphaMap&&O.alphaTest>0||O.map&&O.alphaTest>0){const Me=C.uuid,Se=O.uuid;let Z=h[Me];Z===void 0&&(Z={},h[Me]=Z);let me=Z[Se];me===void 0&&(me=C.clone(),Z[Se]=me,O.addEventListener("dispose",V)),C=me}if(C.visible=O.visible,C.wireframe=O.wireframe,ie===Mi?C.side=O.shadowSide!==null?O.shadowSide:O.side:C.side=O.shadowSide!==null?O.shadowSide:p[O.side],C.alphaMap=O.alphaMap,C.alphaTest=O.alphaTest,C.map=O.map,C.clipShadows=O.clipShadows,C.clippingPlanes=O.clippingPlanes,C.clipIntersection=O.clipIntersection,C.displacementMap=O.displacementMap,C.displacementScale=O.displacementScale,C.displacementBias=O.displacementBias,C.wireframeLinewidth=O.wireframeLinewidth,C.linewidth=O.linewidth,q.isPointLight===!0&&C.isMeshDistanceMaterial===!0){const Me=s.properties.get(C);Me.light=q}return C}function P(F,O,q,ie,C){if(F.visible===!1)return;if(F.layers.test(O.layers)&&(F.isMesh||F.isLine||F.isPoints)&&(F.castShadow||F.receiveShadow&&C===Mi)&&(!F.frustumCulled||n.intersectsObject(F))){F.modelViewMatrix.multiplyMatrices(q.matrixWorldInverse,F.matrixWorld);const Se=e.update(F),Z=F.material;if(Array.isArray(Z)){const me=Se.groups;for(let le=0,be=me.length;le<be;le++){const _e=me[le],xe=Z[_e.materialIndex];if(xe&&xe.visible){const Ue=S(F,xe,ie,C);F.onBeforeShadow(s,F,O,q,Se,Ue,_e),s.renderBufferDirect(q,null,Se,Ue,F,_e),F.onAfterShadow(s,F,O,q,Se,Ue,_e)}}}else if(Z.visible){const me=S(F,Z,ie,C);F.onBeforeShadow(s,F,O,q,Se,me,null),s.renderBufferDirect(q,null,Se,me,F,null),F.onAfterShadow(s,F,O,q,Se,me,null)}}const Me=F.children;for(let Se=0,Z=Me.length;Se<Z;Se++)P(Me[Se],O,q,ie,C)}function V(F){F.target.removeEventListener("dispose",V);for(const q in h){const ie=h[q],C=F.target.uuid;C in ie&&(ie[C].dispose(),delete ie[C])}}}function y_(s,e,t){const n=t.isWebGL2;function i(){let K=!1;const Xe=new nn;let ae=null;const Ge=new nn(0,0,0,0);return{setMask:function(qe){ae!==qe&&!K&&(s.colorMask(qe,qe,qe,qe),ae=qe)},setLocked:function(qe){K=qe},setClear:function(qe,Zt,bn,Pi,ts){ts===!0&&(qe*=Pi,Zt*=Pi,bn*=Pi),Xe.set(qe,Zt,bn,Pi),Ge.equals(Xe)===!1&&(s.clearColor(qe,Zt,bn,Pi),Ge.copy(Xe))},reset:function(){K=!1,ae=null,Ge.set(-1,0,0,0)}}}function r(){let K=!1,Xe=null,ae=null,Ge=null;return{setTest:function(qe){qe?rt(s.DEPTH_TEST):Gt(s.DEPTH_TEST)},setMask:function(qe){Xe!==qe&&!K&&(s.depthMask(qe),Xe=qe)},setFunc:function(qe){if(ae!==qe){switch(qe){case rs:s.depthFunc(s.NEVER);break;case ji:s.depthFunc(s.ALWAYS);break;case Su:s.depthFunc(s.LESS);break;case eo:s.depthFunc(s.LEQUAL);break;case Eu:s.depthFunc(s.EQUAL);break;case Au:s.depthFunc(s.GEQUAL);break;case Go:s.depthFunc(s.GREATER);break;case Tu:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}ae=qe}},setLocked:function(qe){K=qe},setClear:function(qe){Ge!==qe&&(s.clearDepth(qe),Ge=qe)},reset:function(){K=!1,Xe=null,ae=null,Ge=null}}}function a(){let K=!1,Xe=null,ae=null,Ge=null,qe=null,Zt=null,bn=null,Pi=null,ts=null;return{setTest:function(Mn){K||(Mn?rt(s.STENCIL_TEST):Gt(s.STENCIL_TEST))},setMask:function(Mn){Xe!==Mn&&!K&&(s.stencilMask(Mn),Xe=Mn)},setFunc:function(Mn,Ki,ua){(ae!==Mn||Ge!==Ki||qe!==ua)&&(s.stencilFunc(Mn,Ki,ua),ae=Mn,Ge=Ki,qe=ua)},setOp:function(Mn,Ki,ua){(Zt!==Mn||bn!==Ki||Pi!==ua)&&(s.stencilOp(Mn,Ki,ua),Zt=Mn,bn=Ki,Pi=ua)},setLocked:function(Mn){K=Mn},setClear:function(Mn){ts!==Mn&&(s.clearStencil(Mn),ts=Mn)},reset:function(){K=!1,Xe=null,ae=null,Ge=null,qe=null,Zt=null,bn=null,Pi=null,ts=null}}}const o=new i,l=new r,h=new a,d=new WeakMap,p=new WeakMap;let m={},g={},x=new WeakMap,A=[],y=null,_=!1,T=null,S=null,P=null,V=null,F=null,O=null,q=null,ie=new $e(0,0,0),C=0,k=!1,Me=null,Se=null,Z=null,me=null,le=null;const be=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let _e=!1,xe=0;const Ue=s.getParameter(s.VERSION);Ue.indexOf("WebGL")!==-1?(xe=parseFloat(/^WebGL (\d)/.exec(Ue)[1]),_e=xe>=1):Ue.indexOf("OpenGL ES")!==-1&&(xe=parseFloat(/^OpenGL ES (\d)/.exec(Ue)[1]),_e=xe>=2);let Le=null,et={};const wt=s.getParameter(s.SCISSOR_BOX),ue=s.getParameter(s.VIEWPORT),Pe=new nn().fromArray(wt),je=new nn().fromArray(ue);function dt(K,Xe,ae,Ge){const qe=new Uint8Array(4),Zt=s.createTexture();s.bindTexture(K,Zt),s.texParameteri(K,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(K,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let bn=0;bn<ae;bn++)n&&(K===s.TEXTURE_3D||K===s.TEXTURE_2D_ARRAY)?s.texImage3D(Xe,0,s.RGBA,1,1,Ge,0,s.RGBA,s.UNSIGNED_BYTE,qe):s.texImage2D(Xe+bn,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,qe);return Zt}const ct={};ct[s.TEXTURE_2D]=dt(s.TEXTURE_2D,s.TEXTURE_2D,1),ct[s.TEXTURE_CUBE_MAP]=dt(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(ct[s.TEXTURE_2D_ARRAY]=dt(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),ct[s.TEXTURE_3D]=dt(s.TEXTURE_3D,s.TEXTURE_3D,1,1)),o.setClear(0,0,0,1),l.setClear(1),h.setClear(0),rt(s.DEPTH_TEST),l.setFunc(eo),Je(!1),at(wr),rt(s.CULL_FACE),Ae(Rr);function rt(K){m[K]!==!0&&(s.enable(K),m[K]=!0)}function Gt(K){m[K]!==!1&&(s.disable(K),m[K]=!1)}function pt(K,Xe){return g[K]!==Xe?(s.bindFramebuffer(K,Xe),g[K]=Xe,n&&(K===s.DRAW_FRAMEBUFFER&&(g[s.FRAMEBUFFER]=Xe),K===s.FRAMEBUFFER&&(g[s.DRAW_FRAMEBUFFER]=Xe)),!0):!1}function W(K,Xe){let ae=A,Ge=!1;if(K){ae=x.get(Xe),ae===void 0&&(ae=[],x.set(Xe,ae));const qe=K.textures;if(ae.length!==qe.length||ae[0]!==s.COLOR_ATTACHMENT0){for(let Zt=0,bn=qe.length;Zt<bn;Zt++)ae[Zt]=s.COLOR_ATTACHMENT0+Zt;ae.length=qe.length,Ge=!0}}else ae[0]!==s.BACK&&(ae[0]=s.BACK,Ge=!0);if(Ge)if(t.isWebGL2)s.drawBuffers(ae);else if(e.has("WEBGL_draw_buffers")===!0)e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ae);else throw new Error("THREE.WebGLState: Usage of gl.drawBuffers() require WebGL2 or WEBGL_draw_buffers extension")}function Be(K){return y!==K?(s.useProgram(K),y=K,!0):!1}const ye={[ln]:s.FUNC_ADD,[fu]:s.FUNC_SUBTRACT,[du]:s.FUNC_REVERSE_SUBTRACT};if(n)ye[hn]=s.MIN,ye[sl]=s.MAX;else{const K=e.get("EXT_blend_minmax");K!==null&&(ye[hn]=K.MIN_EXT,ye[sl]=K.MAX_EXT)}const Fe={[pu]:s.ZERO,[mu]:s.ONE,[al]:s.SRC_COLOR,[Qa]:s.SRC_ALPHA,[yu]:s.SRC_ALPHA_SATURATE,[vu]:s.DST_COLOR,[gu]:s.DST_ALPHA,[zo]:s.ONE_MINUS_SRC_COLOR,[Ls]:s.ONE_MINUS_SRC_ALPHA,[xu]:s.ONE_MINUS_DST_COLOR,[_u]:s.ONE_MINUS_DST_ALPHA,[ko]:s.CONSTANT_COLOR,[bu]:s.ONE_MINUS_CONSTANT_COLOR,[Mu]:s.CONSTANT_ALPHA,[Pr]:s.ONE_MINUS_CONSTANT_ALPHA};function Ae(K,Xe,ae,Ge,qe,Zt,bn,Pi,ts,Mn){if(K===Rr){_===!0&&(Gt(s.BLEND),_=!1);return}if(_===!1&&(rt(s.BLEND),_=!0),K!==ja){if(K!==T||Mn!==k){if((S!==ln||F!==ln)&&(s.blendEquation(s.FUNC_ADD),S=ln,F=ln),Mn)switch(K){case is:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Cr:s.blendFunc(s.ONE,s.ONE);break;case Is:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Mt:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",K);break}else switch(K){case is:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Cr:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case Is:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Mt:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",K);break}P=null,V=null,O=null,q=null,ie.set(0,0,0),C=0,T=K,k=Mn}return}qe=qe||Xe,Zt=Zt||ae,bn=bn||Ge,(Xe!==S||qe!==F)&&(s.blendEquationSeparate(ye[Xe],ye[qe]),S=Xe,F=qe),(ae!==P||Ge!==V||Zt!==O||bn!==q)&&(s.blendFuncSeparate(Fe[ae],Fe[Ge],Fe[Zt],Fe[bn]),P=ae,V=Ge,O=Zt,q=bn),(Pi.equals(ie)===!1||ts!==C)&&(s.blendColor(Pi.r,Pi.g,Pi.b,ts),ie.copy(Pi),C=ts),T=K,k=!1}function nt(K,Xe){K.side===ur?Gt(s.CULL_FACE):rt(s.CULL_FACE);let ae=K.side===Jt;Xe&&(ae=!ae),Je(ae),K.blending===is&&K.transparent===!1?Ae(Rr):Ae(K.blending,K.blendEquation,K.blendSrc,K.blendDst,K.blendEquationAlpha,K.blendSrcAlpha,K.blendDstAlpha,K.blendColor,K.blendAlpha,K.premultipliedAlpha),l.setFunc(K.depthFunc),l.setTest(K.depthTest),l.setMask(K.depthWrite),o.setMask(K.colorWrite);const Ge=K.stencilWrite;h.setTest(Ge),Ge&&(h.setMask(K.stencilWriteMask),h.setFunc(K.stencilFunc,K.stencilRef,K.stencilFuncMask),h.setOp(K.stencilFail,K.stencilZFail,K.stencilZPass)),z(K.polygonOffset,K.polygonOffsetFactor,K.polygonOffsetUnits),K.alphaToCoverage===!0?rt(s.SAMPLE_ALPHA_TO_COVERAGE):Gt(s.SAMPLE_ALPHA_TO_COVERAGE)}function Je(K){Me!==K&&(K?s.frontFace(s.CW):s.frontFace(s.CCW),Me=K)}function at(K){K!==ha?(rt(s.CULL_FACE),K!==Se&&(K===wr?s.cullFace(s.BACK):K===Ii?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):Gt(s.CULL_FACE),Se=K}function qt(K){K!==Z&&(_e&&s.lineWidth(K),Z=K)}function z(K,Xe,ae){K?(rt(s.POLYGON_OFFSET_FILL),(me!==Xe||le!==ae)&&(s.polygonOffset(Xe,ae),me=Xe,le=ae)):Gt(s.POLYGON_OFFSET_FILL)}function I(K){K?rt(s.SCISSOR_TEST):Gt(s.SCISSOR_TEST)}function he(K){K===void 0&&(K=s.TEXTURE0+be-1),Le!==K&&(s.activeTexture(K),Le=K)}function ge(K,Xe,ae){ae===void 0&&(Le===null?ae=s.TEXTURE0+be-1:ae=Le);let Ge=et[ae];Ge===void 0&&(Ge={type:void 0,texture:void 0},et[ae]=Ge),(Ge.type!==K||Ge.texture!==Xe)&&(Le!==ae&&(s.activeTexture(ae),Le=ae),s.bindTexture(K,Xe||ct[K]),Ge.type=K,Ge.texture=Xe)}function Ie(){const K=et[Le];K!==void 0&&K.type!==void 0&&(s.bindTexture(K.type,null),K.type=void 0,K.texture=void 0)}function Ce(){try{s.compressedTexImage2D.apply(s,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function Rt(){try{s.compressedTexImage3D.apply(s,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function vt(){try{s.texSubImage2D.apply(s,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function Ve(){try{s.texSubImage3D.apply(s,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function We(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function Ct(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function Oe(){try{s.texStorage2D.apply(s,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function jn(){try{s.texStorage3D.apply(s,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function Yt(){try{s.texImage2D.apply(s,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function _t(){try{s.texImage3D.apply(s,arguments)}catch(K){console.error("THREE.WebGLState:",K)}}function lt(K){Pe.equals(K)===!1&&(s.scissor(K.x,K.y,K.z,K.w),Pe.copy(K))}function ht(K){je.equals(K)===!1&&(s.viewport(K.x,K.y,K.z,K.w),je.copy(K))}function tn(K,Xe){let ae=p.get(Xe);ae===void 0&&(ae=new WeakMap,p.set(Xe,ae));let Ge=ae.get(K);Ge===void 0&&(Ge=s.getUniformBlockIndex(Xe,K.name),ae.set(K,Ge))}function Ft(K,Xe){const Ge=p.get(Xe).get(K);d.get(Xe)!==Ge&&(s.uniformBlockBinding(Xe,Ge,K.__bindingPointIndex),d.set(Xe,Ge))}function In(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),n===!0&&(s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),m={},Le=null,et={},g={},x=new WeakMap,A=[],y=null,_=!1,T=null,S=null,P=null,V=null,F=null,O=null,q=null,ie=new $e(0,0,0),C=0,k=!1,Me=null,Se=null,Z=null,me=null,le=null,Pe.set(0,0,s.canvas.width,s.canvas.height),je.set(0,0,s.canvas.width,s.canvas.height),o.reset(),l.reset(),h.reset()}return{buffers:{color:o,depth:l,stencil:h},enable:rt,disable:Gt,bindFramebuffer:pt,drawBuffers:W,useProgram:Be,setBlending:Ae,setMaterial:nt,setFlipSided:Je,setCullFace:at,setLineWidth:qt,setPolygonOffset:z,setScissorTest:I,activeTexture:he,bindTexture:ge,unbindTexture:Ie,compressedTexImage2D:Ce,compressedTexImage3D:Rt,texImage2D:Yt,texImage3D:_t,updateUBOMapping:tn,uniformBlockBinding:Ft,texStorage2D:Oe,texStorage3D:jn,texSubImage2D:vt,texSubImage3D:Ve,compressedTexSubImage2D:We,compressedTexSubImage3D:Ct,scissor:lt,viewport:ht,reset:In}}function b_(s,e,t,n,i,r,a){const o=i.isWebGL2,l=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator=="undefined"?!1:/OculusBrowser/g.test(navigator.userAgent),d=new ve,p=new WeakMap;let m;const g=new WeakMap;let x=!1;try{x=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch(z){}function A(z,I){return x?new OffscreenCanvas(z,I):Ea("canvas")}function y(z,I,he,ge){let Ie=1;const Ce=qt(z);if((Ce.width>ge||Ce.height>ge)&&(Ie=ge/Math.max(Ce.width,Ce.height)),Ie<1||I===!0)if(typeof HTMLImageElement!="undefined"&&z instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&z instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&z instanceof ImageBitmap||typeof VideoFrame!="undefined"&&z instanceof VideoFrame){const Rt=I?_s:Math.floor,vt=Rt(Ie*Ce.width),Ve=Rt(Ie*Ce.height);m===void 0&&(m=A(vt,Ve));const We=he?A(vt,Ve):m;return We.width=vt,We.height=Ve,We.getContext("2d").drawImage(z,0,0,vt,Ve),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+Ce.width+"x"+Ce.height+") to ("+vt+"x"+Ve+")."),We}else return"data"in z&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+Ce.width+"x"+Ce.height+")."),z;return z}function _(z){const I=qt(z);return xo(I.width)&&xo(I.height)}function T(z){return o?!1:z.wrapS!==Qn||z.wrapT!==Qn||z.minFilter!==En&&z.minFilter!==mn}function S(z,I){return z.generateMipmaps&&I&&z.minFilter!==En&&z.minFilter!==mn}function P(z){s.generateMipmap(z)}function V(z,I,he,ge,Ie=!1){if(o===!1)return I;if(z!==null){if(s[z]!==void 0)return s[z];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+z+"'")}let Ce=I;if(I===s.RED&&(he===s.FLOAT&&(Ce=s.R32F),he===s.HALF_FLOAT&&(Ce=s.R16F),he===s.UNSIGNED_BYTE&&(Ce=s.R8)),I===s.RED_INTEGER&&(he===s.UNSIGNED_BYTE&&(Ce=s.R8UI),he===s.UNSIGNED_SHORT&&(Ce=s.R16UI),he===s.UNSIGNED_INT&&(Ce=s.R32UI),he===s.BYTE&&(Ce=s.R8I),he===s.SHORT&&(Ce=s.R16I),he===s.INT&&(Ce=s.R32I)),I===s.RG&&(he===s.FLOAT&&(Ce=s.RG32F),he===s.HALF_FLOAT&&(Ce=s.RG16F),he===s.UNSIGNED_BYTE&&(Ce=s.RG8)),I===s.RG_INTEGER&&(he===s.UNSIGNED_BYTE&&(Ce=s.RG8UI),he===s.UNSIGNED_SHORT&&(Ce=s.RG16UI),he===s.UNSIGNED_INT&&(Ce=s.RG32UI),he===s.BYTE&&(Ce=s.RG8I),he===s.SHORT&&(Ce=s.RG16I),he===s.INT&&(Ce=s.RG32I)),I===s.RGBA){const Rt=Ie?ai:sn.getTransfer(ge);he===s.FLOAT&&(Ce=s.RGBA32F),he===s.HALF_FLOAT&&(Ce=s.RGBA16F),he===s.UNSIGNED_BYTE&&(Ce=Rt===Ht?s.SRGB8_ALPHA8:s.RGBA8),he===s.UNSIGNED_SHORT_4_4_4_4&&(Ce=s.RGBA4),he===s.UNSIGNED_SHORT_5_5_5_1&&(Ce=s.RGB5_A1)}return(Ce===s.R16F||Ce===s.R32F||Ce===s.RG16F||Ce===s.RG32F||Ce===s.RGBA16F||Ce===s.RGBA32F)&&e.get("EXT_color_buffer_float"),Ce}function F(z,I,he){return S(z,he)===!0||z.isFramebufferTexture&&z.minFilter!==En&&z.minFilter!==mn?Math.log2(Math.max(I.width,I.height))+1:z.mipmaps!==void 0&&z.mipmaps.length>0?z.mipmaps.length:z.isCompressedTexture&&Array.isArray(z.image)?I.mipmaps.length:1}function O(z){return z===En||z===Xo||z===Os?s.NEAREST:s.LINEAR}function q(z){const I=z.target;I.removeEventListener("dispose",q),C(I),I.isVideoTexture&&p.delete(I)}function ie(z){const I=z.target;I.removeEventListener("dispose",ie),Me(I)}function C(z){const I=n.get(z);if(I.__webglInit===void 0)return;const he=z.source,ge=g.get(he);if(ge){const Ie=ge[I.__cacheKey];Ie.usedTimes--,Ie.usedTimes===0&&k(z),Object.keys(ge).length===0&&g.delete(he)}n.remove(z)}function k(z){const I=n.get(z);s.deleteTexture(I.__webglTexture);const he=z.source,ge=g.get(he);delete ge[I.__cacheKey],a.memory.textures--}function Me(z){const I=n.get(z);if(z.depthTexture&&z.depthTexture.dispose(),z.isWebGLCubeRenderTarget)for(let ge=0;ge<6;ge++){if(Array.isArray(I.__webglFramebuffer[ge]))for(let Ie=0;Ie<I.__webglFramebuffer[ge].length;Ie++)s.deleteFramebuffer(I.__webglFramebuffer[ge][Ie]);else s.deleteFramebuffer(I.__webglFramebuffer[ge]);I.__webglDepthbuffer&&s.deleteRenderbuffer(I.__webglDepthbuffer[ge])}else{if(Array.isArray(I.__webglFramebuffer))for(let ge=0;ge<I.__webglFramebuffer.length;ge++)s.deleteFramebuffer(I.__webglFramebuffer[ge]);else s.deleteFramebuffer(I.__webglFramebuffer);if(I.__webglDepthbuffer&&s.deleteRenderbuffer(I.__webglDepthbuffer),I.__webglMultisampledFramebuffer&&s.deleteFramebuffer(I.__webglMultisampledFramebuffer),I.__webglColorRenderbuffer)for(let ge=0;ge<I.__webglColorRenderbuffer.length;ge++)I.__webglColorRenderbuffer[ge]&&s.deleteRenderbuffer(I.__webglColorRenderbuffer[ge]);I.__webglDepthRenderbuffer&&s.deleteRenderbuffer(I.__webglDepthRenderbuffer)}const he=z.textures;for(let ge=0,Ie=he.length;ge<Ie;ge++){const Ce=n.get(he[ge]);Ce.__webglTexture&&(s.deleteTexture(Ce.__webglTexture),a.memory.textures--),n.remove(he[ge])}n.remove(z)}let Se=0;function Z(){Se=0}function me(){const z=Se;return z>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+z+" texture units while this GPU supports only "+i.maxTextures),Se+=1,z}function le(z){const I=[];return I.push(z.wrapS),I.push(z.wrapT),I.push(z.wrapR||0),I.push(z.magFilter),I.push(z.minFilter),I.push(z.anisotropy),I.push(z.internalFormat),I.push(z.format),I.push(z.type),I.push(z.generateMipmaps),I.push(z.premultiplyAlpha),I.push(z.flipY),I.push(z.unpackAlignment),I.push(z.colorSpace),I.join()}function be(z,I){const he=n.get(z);if(z.isVideoTexture&&Je(z),z.isRenderTargetTexture===!1&&z.version>0&&he.__version!==z.version){const ge=z.image;if(ge===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ge.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{je(he,z,I);return}}t.bindTexture(s.TEXTURE_2D,he.__webglTexture,s.TEXTURE0+I)}function _e(z,I){const he=n.get(z);if(z.version>0&&he.__version!==z.version){je(he,z,I);return}t.bindTexture(s.TEXTURE_2D_ARRAY,he.__webglTexture,s.TEXTURE0+I)}function xe(z,I){const he=n.get(z);if(z.version>0&&he.__version!==z.version){je(he,z,I);return}t.bindTexture(s.TEXTURE_3D,he.__webglTexture,s.TEXTURE0+I)}function Ue(z,I){const he=n.get(z);if(z.version>0&&he.__version!==z.version){dt(he,z,I);return}t.bindTexture(s.TEXTURE_CUBE_MAP,he.__webglTexture,s.TEXTURE0+I)}const Le={[no]:s.REPEAT,[Qn]:s.CLAMP_TO_EDGE,[da]:s.MIRRORED_REPEAT},et={[En]:s.NEAREST,[Xo]:s.NEAREST_MIPMAP_NEAREST,[Os]:s.NEAREST_MIPMAP_LINEAR,[mn]:s.LINEAR,[Lr]:s.LINEAR_MIPMAP_NEAREST,[Gi]:s.LINEAR_MIPMAP_LINEAR},wt={[Al]:s.NEVER,[Uh]:s.ALWAYS,[Nu]:s.LESS,[Tl]:s.LEQUAL,[Fu]:s.EQUAL,[Bu]:s.GEQUAL,[wl]:s.GREATER,[Ou]:s.NOTEQUAL};function ue(z,I,he){if(I.type===ei&&e.has("OES_texture_float_linear")===!1&&(I.magFilter===mn||I.magFilter===Lr||I.magFilter===Os||I.magFilter===Gi||I.minFilter===mn||I.minFilter===Lr||I.minFilter===Os||I.minFilter===Gi)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),he?(s.texParameteri(z,s.TEXTURE_WRAP_S,Le[I.wrapS]),s.texParameteri(z,s.TEXTURE_WRAP_T,Le[I.wrapT]),(z===s.TEXTURE_3D||z===s.TEXTURE_2D_ARRAY)&&s.texParameteri(z,s.TEXTURE_WRAP_R,Le[I.wrapR]),s.texParameteri(z,s.TEXTURE_MAG_FILTER,et[I.magFilter]),s.texParameteri(z,s.TEXTURE_MIN_FILTER,et[I.minFilter])):(s.texParameteri(z,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(z,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),(z===s.TEXTURE_3D||z===s.TEXTURE_2D_ARRAY)&&s.texParameteri(z,s.TEXTURE_WRAP_R,s.CLAMP_TO_EDGE),(I.wrapS!==Qn||I.wrapT!==Qn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(z,s.TEXTURE_MAG_FILTER,O(I.magFilter)),s.texParameteri(z,s.TEXTURE_MIN_FILTER,O(I.minFilter)),I.minFilter!==En&&I.minFilter!==mn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),I.compareFunction&&(s.texParameteri(z,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(z,s.TEXTURE_COMPARE_FUNC,wt[I.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(I.magFilter===En||I.minFilter!==Os&&I.minFilter!==Gi||I.type===ei&&e.has("OES_texture_float_linear")===!1||o===!1&&I.type===ma&&e.has("OES_texture_half_float_linear")===!1)return;if(I.anisotropy>1||n.get(I).__currentAnisotropy){const ge=e.get("EXT_texture_filter_anisotropic");s.texParameterf(z,ge.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(I.anisotropy,i.getMaxAnisotropy())),n.get(I).__currentAnisotropy=I.anisotropy}}}function Pe(z,I){let he=!1;z.__webglInit===void 0&&(z.__webglInit=!0,I.addEventListener("dispose",q));const ge=I.source;let Ie=g.get(ge);Ie===void 0&&(Ie={},g.set(ge,Ie));const Ce=le(I);if(Ce!==z.__cacheKey){Ie[Ce]===void 0&&(Ie[Ce]={texture:s.createTexture(),usedTimes:0},a.memory.textures++,he=!0),Ie[Ce].usedTimes++;const Rt=Ie[z.__cacheKey];Rt!==void 0&&(Ie[z.__cacheKey].usedTimes--,Rt.usedTimes===0&&k(I)),z.__cacheKey=Ce,z.__webglTexture=Ie[Ce].texture}return he}function je(z,I,he){let ge=s.TEXTURE_2D;(I.isDataArrayTexture||I.isCompressedArrayTexture)&&(ge=s.TEXTURE_2D_ARRAY),I.isData3DTexture&&(ge=s.TEXTURE_3D);const Ie=Pe(z,I),Ce=I.source;t.bindTexture(ge,z.__webglTexture,s.TEXTURE0+he);const Rt=n.get(Ce);if(Ce.version!==Rt.__version||Ie===!0){t.activeTexture(s.TEXTURE0+he);const vt=sn.getPrimaries(sn.workingColorSpace),Ve=I.colorSpace===nr?null:sn.getPrimaries(I.colorSpace),We=I.colorSpace===nr||vt===Ve?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,I.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,I.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,I.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,We);const Ct=T(I)&&_(I.image)===!1;let Oe=y(I.image,Ct,!1,i.maxTextureSize);Oe=at(I,Oe);const jn=_(Oe)||o,Yt=r.convert(I.format,I.colorSpace);let _t=r.convert(I.type),lt=V(I.internalFormat,Yt,_t,I.colorSpace,I.isVideoTexture);ue(ge,I,jn);let ht;const tn=I.mipmaps,Ft=o&&I.isVideoTexture!==!0&&lt!==us,In=Rt.__version===void 0||Ie===!0,K=Ce.dataReady,Xe=F(I,Oe,jn);if(I.isDepthTexture)lt=s.DEPTH_COMPONENT,o?I.type===ei?lt=s.DEPTH_COMPONENT32F:I.type===Qi?lt=s.DEPTH_COMPONENT24:I.type===os?lt=s.DEPTH24_STENCIL8:lt=s.DEPTH_COMPONENT16:I.type===ei&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),I.format===Ur&&lt===s.DEPTH_COMPONENT&&I.type!==io&&I.type!==Qi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),I.type=Qi,_t=r.convert(I.type)),I.format===Bs&&lt===s.DEPTH_COMPONENT&&(lt=s.DEPTH_STENCIL,I.type!==os&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),I.type=os,_t=r.convert(I.type))),In&&(Ft?t.texStorage2D(s.TEXTURE_2D,1,lt,Oe.width,Oe.height):t.texImage2D(s.TEXTURE_2D,0,lt,Oe.width,Oe.height,0,Yt,_t,null));else if(I.isDataTexture)if(tn.length>0&&jn){Ft&&In&&t.texStorage2D(s.TEXTURE_2D,Xe,lt,tn[0].width,tn[0].height);for(let ae=0,Ge=tn.length;ae<Ge;ae++)ht=tn[ae],Ft?K&&t.texSubImage2D(s.TEXTURE_2D,ae,0,0,ht.width,ht.height,Yt,_t,ht.data):t.texImage2D(s.TEXTURE_2D,ae,lt,ht.width,ht.height,0,Yt,_t,ht.data);I.generateMipmaps=!1}else Ft?(In&&t.texStorage2D(s.TEXTURE_2D,Xe,lt,Oe.width,Oe.height),K&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Oe.width,Oe.height,Yt,_t,Oe.data)):t.texImage2D(s.TEXTURE_2D,0,lt,Oe.width,Oe.height,0,Yt,_t,Oe.data);else if(I.isCompressedTexture)if(I.isCompressedArrayTexture){Ft&&In&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Xe,lt,tn[0].width,tn[0].height,Oe.depth);for(let ae=0,Ge=tn.length;ae<Ge;ae++)ht=tn[ae],I.format!==gn?Yt!==null?Ft?K&&t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,ae,0,0,0,ht.width,ht.height,Oe.depth,Yt,ht.data,0,0):t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,ae,lt,ht.width,ht.height,Oe.depth,0,ht.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ft?K&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,ae,0,0,0,ht.width,ht.height,Oe.depth,Yt,_t,ht.data):t.texImage3D(s.TEXTURE_2D_ARRAY,ae,lt,ht.width,ht.height,Oe.depth,0,Yt,_t,ht.data)}else{Ft&&In&&t.texStorage2D(s.TEXTURE_2D,Xe,lt,tn[0].width,tn[0].height);for(let ae=0,Ge=tn.length;ae<Ge;ae++)ht=tn[ae],I.format!==gn?Yt!==null?Ft?K&&t.compressedTexSubImage2D(s.TEXTURE_2D,ae,0,0,ht.width,ht.height,Yt,ht.data):t.compressedTexImage2D(s.TEXTURE_2D,ae,lt,ht.width,ht.height,0,ht.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ft?K&&t.texSubImage2D(s.TEXTURE_2D,ae,0,0,ht.width,ht.height,Yt,_t,ht.data):t.texImage2D(s.TEXTURE_2D,ae,lt,ht.width,ht.height,0,Yt,_t,ht.data)}else if(I.isDataArrayTexture)Ft?(In&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Xe,lt,Oe.width,Oe.height,Oe.depth),K&&t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,Oe.width,Oe.height,Oe.depth,Yt,_t,Oe.data)):t.texImage3D(s.TEXTURE_2D_ARRAY,0,lt,Oe.width,Oe.height,Oe.depth,0,Yt,_t,Oe.data);else if(I.isData3DTexture)Ft?(In&&t.texStorage3D(s.TEXTURE_3D,Xe,lt,Oe.width,Oe.height,Oe.depth),K&&t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,Oe.width,Oe.height,Oe.depth,Yt,_t,Oe.data)):t.texImage3D(s.TEXTURE_3D,0,lt,Oe.width,Oe.height,Oe.depth,0,Yt,_t,Oe.data);else if(I.isFramebufferTexture){if(In)if(Ft)t.texStorage2D(s.TEXTURE_2D,Xe,lt,Oe.width,Oe.height);else{let ae=Oe.width,Ge=Oe.height;for(let qe=0;qe<Xe;qe++)t.texImage2D(s.TEXTURE_2D,qe,lt,ae,Ge,0,Yt,_t,null),ae>>=1,Ge>>=1}}else if(tn.length>0&&jn){if(Ft&&In){const ae=qt(tn[0]);t.texStorage2D(s.TEXTURE_2D,Xe,lt,ae.width,ae.height)}for(let ae=0,Ge=tn.length;ae<Ge;ae++)ht=tn[ae],Ft?K&&t.texSubImage2D(s.TEXTURE_2D,ae,0,0,Yt,_t,ht):t.texImage2D(s.TEXTURE_2D,ae,lt,Yt,_t,ht);I.generateMipmaps=!1}else if(Ft){if(In){const ae=qt(Oe);t.texStorage2D(s.TEXTURE_2D,Xe,lt,ae.width,ae.height)}K&&t.texSubImage2D(s.TEXTURE_2D,0,0,0,Yt,_t,Oe)}else t.texImage2D(s.TEXTURE_2D,0,lt,Yt,_t,Oe);S(I,jn)&&P(ge),Rt.__version=Ce.version,I.onUpdate&&I.onUpdate(I)}z.__version=I.version}function dt(z,I,he){if(I.image.length!==6)return;const ge=Pe(z,I),Ie=I.source;t.bindTexture(s.TEXTURE_CUBE_MAP,z.__webglTexture,s.TEXTURE0+he);const Ce=n.get(Ie);if(Ie.version!==Ce.__version||ge===!0){t.activeTexture(s.TEXTURE0+he);const Rt=sn.getPrimaries(sn.workingColorSpace),vt=I.colorSpace===nr?null:sn.getPrimaries(I.colorSpace),Ve=I.colorSpace===nr||Rt===vt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,I.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,I.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,I.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ve);const We=I.isCompressedTexture||I.image[0].isCompressedTexture,Ct=I.image[0]&&I.image[0].isDataTexture,Oe=[];for(let ae=0;ae<6;ae++)!We&&!Ct?Oe[ae]=y(I.image[ae],!1,!0,i.maxCubemapSize):Oe[ae]=Ct?I.image[ae].image:I.image[ae],Oe[ae]=at(I,Oe[ae]);const jn=Oe[0],Yt=_(jn)||o,_t=r.convert(I.format,I.colorSpace),lt=r.convert(I.type),ht=V(I.internalFormat,_t,lt,I.colorSpace),tn=o&&I.isVideoTexture!==!0,Ft=Ce.__version===void 0||ge===!0,In=Ie.dataReady;let K=F(I,jn,Yt);ue(s.TEXTURE_CUBE_MAP,I,Yt);let Xe;if(We){tn&&Ft&&t.texStorage2D(s.TEXTURE_CUBE_MAP,K,ht,jn.width,jn.height);for(let ae=0;ae<6;ae++){Xe=Oe[ae].mipmaps;for(let Ge=0;Ge<Xe.length;Ge++){const qe=Xe[Ge];I.format!==gn?_t!==null?tn?In&&t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ge,0,0,qe.width,qe.height,_t,qe.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ge,ht,qe.width,qe.height,0,qe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):tn?In&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ge,0,0,qe.width,qe.height,_t,lt,qe.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ge,ht,qe.width,qe.height,0,_t,lt,qe.data)}}}else{if(Xe=I.mipmaps,tn&&Ft){Xe.length>0&&K++;const ae=qt(Oe[0]);t.texStorage2D(s.TEXTURE_CUBE_MAP,K,ht,ae.width,ae.height)}for(let ae=0;ae<6;ae++)if(Ct){tn?In&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,0,0,0,Oe[ae].width,Oe[ae].height,_t,lt,Oe[ae].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,0,ht,Oe[ae].width,Oe[ae].height,0,_t,lt,Oe[ae].data);for(let Ge=0;Ge<Xe.length;Ge++){const Zt=Xe[Ge].image[ae].image;tn?In&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ge+1,0,0,Zt.width,Zt.height,_t,lt,Zt.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ge+1,ht,Zt.width,Zt.height,0,_t,lt,Zt.data)}}else{tn?In&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,0,0,0,_t,lt,Oe[ae]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,0,ht,_t,lt,Oe[ae]);for(let Ge=0;Ge<Xe.length;Ge++){const qe=Xe[Ge];tn?In&&t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ge+1,0,0,_t,lt,qe.image[ae]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ae,Ge+1,ht,_t,lt,qe.image[ae])}}}S(I,Yt)&&P(s.TEXTURE_CUBE_MAP),Ce.__version=Ie.version,I.onUpdate&&I.onUpdate(I)}z.__version=I.version}function ct(z,I,he,ge,Ie,Ce){const Rt=r.convert(he.format,he.colorSpace),vt=r.convert(he.type),Ve=V(he.internalFormat,Rt,vt,he.colorSpace);if(!n.get(I).__hasExternalTextures){const Ct=Math.max(1,I.width>>Ce),Oe=Math.max(1,I.height>>Ce);Ie===s.TEXTURE_3D||Ie===s.TEXTURE_2D_ARRAY?t.texImage3D(Ie,Ce,Ve,Ct,Oe,I.depth,0,Rt,vt,null):t.texImage2D(Ie,Ce,Ve,Ct,Oe,0,Rt,vt,null)}t.bindFramebuffer(s.FRAMEBUFFER,z),nt(I)?l.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,ge,Ie,n.get(he).__webglTexture,0,Ae(I)):(Ie===s.TEXTURE_2D||Ie>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&Ie<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,ge,Ie,n.get(he).__webglTexture,Ce),t.bindFramebuffer(s.FRAMEBUFFER,null)}function rt(z,I,he){if(s.bindRenderbuffer(s.RENDERBUFFER,z),I.depthBuffer&&!I.stencilBuffer){let ge=o===!0?s.DEPTH_COMPONENT24:s.DEPTH_COMPONENT16;if(he||nt(I)){const Ie=I.depthTexture;Ie&&Ie.isDepthTexture&&(Ie.type===ei?ge=s.DEPTH_COMPONENT32F:Ie.type===Qi&&(ge=s.DEPTH_COMPONENT24));const Ce=Ae(I);nt(I)?l.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Ce,ge,I.width,I.height):s.renderbufferStorageMultisample(s.RENDERBUFFER,Ce,ge,I.width,I.height)}else s.renderbufferStorage(s.RENDERBUFFER,ge,I.width,I.height);s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,z)}else if(I.depthBuffer&&I.stencilBuffer){const ge=Ae(I);he&&nt(I)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,ge,s.DEPTH24_STENCIL8,I.width,I.height):nt(I)?l.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,ge,s.DEPTH24_STENCIL8,I.width,I.height):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,I.width,I.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,z)}else{const ge=I.textures;for(let Ie=0;Ie<ge.length;Ie++){const Ce=ge[Ie],Rt=r.convert(Ce.format,Ce.colorSpace),vt=r.convert(Ce.type),Ve=V(Ce.internalFormat,Rt,vt,Ce.colorSpace),We=Ae(I);he&&nt(I)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,We,Ve,I.width,I.height):nt(I)?l.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,We,Ve,I.width,I.height):s.renderbufferStorage(s.RENDERBUFFER,Ve,I.width,I.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function Gt(z,I){if(I&&I.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,z),!(I.depthTexture&&I.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(I.depthTexture).__webglTexture||I.depthTexture.image.width!==I.width||I.depthTexture.image.height!==I.height)&&(I.depthTexture.image.width=I.width,I.depthTexture.image.height=I.height,I.depthTexture.needsUpdate=!0),be(I.depthTexture,0);const ge=n.get(I.depthTexture).__webglTexture,Ie=Ae(I);if(I.depthTexture.format===Ur)nt(I)?l.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,ge,0,Ie):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,ge,0);else if(I.depthTexture.format===Bs)nt(I)?l.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,ge,0,Ie):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,ge,0);else throw new Error("Unknown depthTexture format")}function pt(z){const I=n.get(z),he=z.isWebGLCubeRenderTarget===!0;if(z.depthTexture&&!I.__autoAllocateDepthBuffer){if(he)throw new Error("target.depthTexture not supported in Cube render targets");Gt(I.__webglFramebuffer,z)}else if(he){I.__webglDepthbuffer=[];for(let ge=0;ge<6;ge++)t.bindFramebuffer(s.FRAMEBUFFER,I.__webglFramebuffer[ge]),I.__webglDepthbuffer[ge]=s.createRenderbuffer(),rt(I.__webglDepthbuffer[ge],z,!1)}else t.bindFramebuffer(s.FRAMEBUFFER,I.__webglFramebuffer),I.__webglDepthbuffer=s.createRenderbuffer(),rt(I.__webglDepthbuffer,z,!1);t.bindFramebuffer(s.FRAMEBUFFER,null)}function W(z,I,he){const ge=n.get(z);I!==void 0&&ct(ge.__webglFramebuffer,z,z.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),he!==void 0&&pt(z)}function Be(z){const I=z.texture,he=n.get(z),ge=n.get(I);z.addEventListener("dispose",ie);const Ie=z.textures,Ce=z.isWebGLCubeRenderTarget===!0,Rt=Ie.length>1,vt=_(z)||o;if(Rt||(ge.__webglTexture===void 0&&(ge.__webglTexture=s.createTexture()),ge.__version=I.version,a.memory.textures++),Ce){he.__webglFramebuffer=[];for(let Ve=0;Ve<6;Ve++)if(o&&I.mipmaps&&I.mipmaps.length>0){he.__webglFramebuffer[Ve]=[];for(let We=0;We<I.mipmaps.length;We++)he.__webglFramebuffer[Ve][We]=s.createFramebuffer()}else he.__webglFramebuffer[Ve]=s.createFramebuffer()}else{if(o&&I.mipmaps&&I.mipmaps.length>0){he.__webglFramebuffer=[];for(let Ve=0;Ve<I.mipmaps.length;Ve++)he.__webglFramebuffer[Ve]=s.createFramebuffer()}else he.__webglFramebuffer=s.createFramebuffer();if(Rt)if(i.drawBuffers)for(let Ve=0,We=Ie.length;Ve<We;Ve++){const Ct=n.get(Ie[Ve]);Ct.__webglTexture===void 0&&(Ct.__webglTexture=s.createTexture(),a.memory.textures++)}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&z.samples>0&&nt(z)===!1){he.__webglMultisampledFramebuffer=s.createFramebuffer(),he.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,he.__webglMultisampledFramebuffer);for(let Ve=0;Ve<Ie.length;Ve++){const We=Ie[Ve];he.__webglColorRenderbuffer[Ve]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,he.__webglColorRenderbuffer[Ve]);const Ct=r.convert(We.format,We.colorSpace),Oe=r.convert(We.type),jn=V(We.internalFormat,Ct,Oe,We.colorSpace,z.isXRRenderTarget===!0),Yt=Ae(z);s.renderbufferStorageMultisample(s.RENDERBUFFER,Yt,jn,z.width,z.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Ve,s.RENDERBUFFER,he.__webglColorRenderbuffer[Ve])}s.bindRenderbuffer(s.RENDERBUFFER,null),z.depthBuffer&&(he.__webglDepthRenderbuffer=s.createRenderbuffer(),rt(he.__webglDepthRenderbuffer,z,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(Ce){t.bindTexture(s.TEXTURE_CUBE_MAP,ge.__webglTexture),ue(s.TEXTURE_CUBE_MAP,I,vt);for(let Ve=0;Ve<6;Ve++)if(o&&I.mipmaps&&I.mipmaps.length>0)for(let We=0;We<I.mipmaps.length;We++)ct(he.__webglFramebuffer[Ve][We],z,I,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,We);else ct(he.__webglFramebuffer[Ve],z,I,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,0);S(I,vt)&&P(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Rt){for(let Ve=0,We=Ie.length;Ve<We;Ve++){const Ct=Ie[Ve],Oe=n.get(Ct);t.bindTexture(s.TEXTURE_2D,Oe.__webglTexture),ue(s.TEXTURE_2D,Ct,vt),ct(he.__webglFramebuffer,z,Ct,s.COLOR_ATTACHMENT0+Ve,s.TEXTURE_2D,0),S(Ct,vt)&&P(s.TEXTURE_2D)}t.unbindTexture()}else{let Ve=s.TEXTURE_2D;if((z.isWebGL3DRenderTarget||z.isWebGLArrayRenderTarget)&&(o?Ve=z.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Ve,ge.__webglTexture),ue(Ve,I,vt),o&&I.mipmaps&&I.mipmaps.length>0)for(let We=0;We<I.mipmaps.length;We++)ct(he.__webglFramebuffer[We],z,I,s.COLOR_ATTACHMENT0,Ve,We);else ct(he.__webglFramebuffer,z,I,s.COLOR_ATTACHMENT0,Ve,0);S(I,vt)&&P(Ve),t.unbindTexture()}z.depthBuffer&&pt(z)}function ye(z){const I=_(z)||o,he=z.textures;for(let ge=0,Ie=he.length;ge<Ie;ge++){const Ce=he[ge];if(S(Ce,I)){const Rt=z.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:s.TEXTURE_2D,vt=n.get(Ce).__webglTexture;t.bindTexture(Rt,vt),P(Rt),t.unbindTexture()}}}function Fe(z){if(o&&z.samples>0&&nt(z)===!1){const I=z.textures,he=z.width,ge=z.height;let Ie=s.COLOR_BUFFER_BIT;const Ce=[],Rt=z.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,vt=n.get(z),Ve=I.length>1;if(Ve)for(let We=0;We<I.length;We++)t.bindFramebuffer(s.FRAMEBUFFER,vt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+We,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,vt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+We,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,vt.__webglMultisampledFramebuffer),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,vt.__webglFramebuffer);for(let We=0;We<I.length;We++){Ce.push(s.COLOR_ATTACHMENT0+We),z.depthBuffer&&Ce.push(Rt);const Ct=vt.__ignoreDepthValues!==void 0?vt.__ignoreDepthValues:!1;if(Ct===!1&&(z.depthBuffer&&(Ie|=s.DEPTH_BUFFER_BIT),z.stencilBuffer&&(Ie|=s.STENCIL_BUFFER_BIT)),Ve&&s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,vt.__webglColorRenderbuffer[We]),Ct===!0&&(s.invalidateFramebuffer(s.READ_FRAMEBUFFER,[Rt]),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[Rt])),Ve){const Oe=n.get(I[We]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,Oe,0)}s.blitFramebuffer(0,0,he,ge,0,0,he,ge,Ie,s.NEAREST),h&&s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Ce)}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Ve)for(let We=0;We<I.length;We++){t.bindFramebuffer(s.FRAMEBUFFER,vt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+We,s.RENDERBUFFER,vt.__webglColorRenderbuffer[We]);const Ct=n.get(I[We]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,vt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+We,s.TEXTURE_2D,Ct,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,vt.__webglMultisampledFramebuffer)}}function Ae(z){return Math.min(i.maxSamples,z.samples)}function nt(z){const I=n.get(z);return o&&z.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&I.__useRenderToTexture!==!1}function Je(z){const I=a.render.frame;p.get(z)!==I&&(p.set(z,I),z.update())}function at(z,I){const he=z.colorSpace,ge=z.format,Ie=z.type;return z.isCompressedTexture===!0||z.isVideoTexture===!0||z.format===ti||he!==ir&&he!==nr&&(sn.getTransfer(he)===Ht?o===!1?e.has("EXT_sRGB")===!0&&ge===gn?(z.format=ti,z.minFilter=mn,z.generateMipmaps=!1):I=pc.sRGBToLinear(I):(ge!==gn||Ie!==as)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",he)),I}function qt(z){return typeof HTMLImageElement!="undefined"&&z instanceof HTMLImageElement?(d.width=z.naturalWidth||z.width,d.height=z.naturalHeight||z.height):typeof VideoFrame!="undefined"&&z instanceof VideoFrame?(d.width=z.displayWidth,d.height=z.displayHeight):(d.width=z.width,d.height=z.height),d}this.allocateTextureUnit=me,this.resetTextureUnits=Z,this.setTexture2D=be,this.setTexture2DArray=_e,this.setTexture3D=xe,this.setTextureCube=Ue,this.rebindTextures=W,this.setupRenderTarget=Be,this.updateRenderTargetMipmap=ye,this.updateMultisampleRenderTarget=Fe,this.setupDepthRenderbuffer=pt,this.setupFrameBufferTexture=ct,this.useMultisampledRTT=nt}function M_(s,e,t){const n=t.isWebGL2;function i(r,a=nr){let o;const l=sn.getTransfer(a);if(r===as)return s.UNSIGNED_BYTE;if(r===qo)return s.UNSIGNED_SHORT_4_4_4_4;if(r===Dr)return s.UNSIGNED_SHORT_5_5_5_1;if(r===Ru)return s.BYTE;if(r===$o)return s.SHORT;if(r===io)return s.UNSIGNED_SHORT;if(r===ro)return s.INT;if(r===Qi)return s.UNSIGNED_INT;if(r===ei)return s.FLOAT;if(r===ma)return n?s.HALF_FLOAT:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(r===Yo)return s.ALPHA;if(r===gn)return s.RGBA;if(r===dl)return s.LUMINANCE;if(r===Cu)return s.LUMINANCE_ALPHA;if(r===Ur)return s.DEPTH_COMPONENT;if(r===Bs)return s.DEPTH_STENCIL;if(r===ti)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(r===Zo)return s.RED;if(r===pl)return s.RED_INTEGER;if(r===ml)return s.RG;if(r===gl)return s.RG_INTEGER;if(r===Jo)return s.RGBA_INTEGER;if(r===cs||r===Ko||r===so||r===ao)if(l===Ht)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(r===cs)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Ko)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===so)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===ao)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(r===cs)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Ko)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===so)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===ao)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===ga||r===jo||r===_l||r===ls)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(r===ga)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===jo)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===_l)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===ls)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===us)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===oo||r===hs)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(r===oo)return l===Ht?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(r===hs)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===_a||r===zs||r===vl||r===co||r===xl||r===Qo||r===ec||r===tc||r===yl||r===bl||r===fs||r===nc||r===ic||r===lo)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(r===_a)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===zs)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===vl)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===co)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===xl)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Qo)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===ec)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===tc)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===yl)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===bl)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===fs)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===nc)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===ic)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===lo)return l===Ht?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===uo||r===rc||r===Pu)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(r===uo)return l===Ht?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(r===rc)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(r===Pu)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(r===ds||r===Ml||r===sc||r===Ut)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(r===uo)return o.COMPRESSED_RED_RGTC1_EXT;if(r===Ml)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===sc)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===Ut)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===os?n?s.UNSIGNED_INT_24_8:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return{convert:i}}class S_ extends Cn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class th extends fn{constructor(){super(),this.isGroup=!0,this.type="Group"}}const E_={type:"move"};class qd{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new th,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new th,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new B,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new B),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new th,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new B,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new B),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const o=this._targetRay,l=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){a=!0;for(const A of e.hand.values()){const y=t.getJointPose(A,n),_=this._getHandJoint(h,A);y!==null&&(_.matrix.fromArray(y.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=y.radius),_.visible=y!==null}const d=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=d.position.distanceTo(p.position),g=.02,x=.005;h.inputState.pinching&&m>g+x?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=g-x&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(E_)))}return o!==null&&(o.visible=i!==null),l!==null&&(l.visible=r!==null),h!==null&&(h.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new th;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const A_=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,T_=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class w_{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new Hn,r=e.properties.get(i);r.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}render(e,t){if(this.texture!==null){if(this.mesh===null){const n=t.cameras[0].viewport,i=new cr({extensions:{fragDepth:!0},vertexShader:A_,fragmentShader:T_,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new Wn(new te(20,20),i)}e.render(this.mesh,t)}}reset(){this.texture=null,this.mesh=null}}class R_ extends Or{constructor(e,t){super();const n=this;let i=null,r=1,a=null,o="local-floor",l=1,h=null,d=null,p=null,m=null,g=null,x=null;const A=new w_,y=t.getContextAttributes();let _=null,T=null;const S=[],P=[],V=new ve;let F=null;const O=new Cn;O.layers.enable(1),O.viewport=new nn;const q=new Cn;q.layers.enable(2),q.viewport=new nn;const ie=[O,q],C=new S_;C.layers.enable(1),C.layers.enable(2);let k=null,Me=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ue){let Pe=S[ue];return Pe===void 0&&(Pe=new qd,S[ue]=Pe),Pe.getTargetRaySpace()},this.getControllerGrip=function(ue){let Pe=S[ue];return Pe===void 0&&(Pe=new qd,S[ue]=Pe),Pe.getGripSpace()},this.getHand=function(ue){let Pe=S[ue];return Pe===void 0&&(Pe=new qd,S[ue]=Pe),Pe.getHandSpace()};function Se(ue){const Pe=P.indexOf(ue.inputSource);if(Pe===-1)return;const je=S[Pe];je!==void 0&&(je.update(ue.inputSource,ue.frame,h||a),je.dispatchEvent({type:ue.type,data:ue.inputSource}))}function Z(){i.removeEventListener("select",Se),i.removeEventListener("selectstart",Se),i.removeEventListener("selectend",Se),i.removeEventListener("squeeze",Se),i.removeEventListener("squeezestart",Se),i.removeEventListener("squeezeend",Se),i.removeEventListener("end",Z),i.removeEventListener("inputsourceschange",me);for(let ue=0;ue<S.length;ue++){const Pe=P[ue];Pe!==null&&(P[ue]=null,S[ue].disconnect(Pe))}k=null,Me=null,A.reset(),e.setRenderTarget(_),g=null,m=null,p=null,i=null,T=null,wt.stop(),n.isPresenting=!1,e.setPixelRatio(F),e.setSize(V.width,V.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ue){r=ue,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ue){o=ue,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||a},this.setReferenceSpace=function(ue){h=ue},this.getBaseLayer=function(){return m!==null?m:g},this.getBinding=function(){return p},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=function(ue){return Bo(this,null,function*(){if(i=ue,i!==null){if(_=e.getRenderTarget(),i.addEventListener("select",Se),i.addEventListener("selectstart",Se),i.addEventListener("selectend",Se),i.addEventListener("squeeze",Se),i.addEventListener("squeezestart",Se),i.addEventListener("squeezeend",Se),i.addEventListener("end",Z),i.addEventListener("inputsourceschange",me),y.xrCompatible!==!0&&(yield t.makeXRCompatible()),F=e.getPixelRatio(),e.getSize(V),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const Pe={antialias:i.renderState.layers===void 0?y.antialias:!0,alpha:!0,depth:y.depth,stencil:y.stencil,framebufferScaleFactor:r};g=new XRWebGLLayer(i,t,Pe),i.updateRenderState({baseLayer:g}),e.setPixelRatio(1),e.setSize(g.framebufferWidth,g.framebufferHeight,!1),T=new vs(g.framebufferWidth,g.framebufferHeight,{format:gn,type:as,colorSpace:e.outputColorSpace,stencilBuffer:y.stencil})}else{let Pe=null,je=null,dt=null;y.depth&&(dt=y.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Pe=y.stencil?Bs:Ur,je=y.stencil?os:Qi);const ct={colorFormat:t.RGBA8,depthFormat:dt,scaleFactor:r};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(ct),i.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),T=new vs(m.textureWidth,m.textureHeight,{format:gn,type:as,depthTexture:new mi(m.textureWidth,m.textureHeight,je,void 0,void 0,void 0,void 0,void 0,void 0,Pe),stencilBuffer:y.stencil,colorSpace:e.outputColorSpace,samples:y.antialias?4:0});const rt=e.properties.get(T);rt.__ignoreDepthValues=m.ignoreDepthValues}T.isXRRenderTarget=!0,this.setFoveation(l),h=null,a=yield i.requestReferenceSpace(o),wt.setContext(i),wt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}})},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function me(ue){for(let Pe=0;Pe<ue.removed.length;Pe++){const je=ue.removed[Pe],dt=P.indexOf(je);dt>=0&&(P[dt]=null,S[dt].disconnect(je))}for(let Pe=0;Pe<ue.added.length;Pe++){const je=ue.added[Pe];let dt=P.indexOf(je);if(dt===-1){for(let rt=0;rt<S.length;rt++)if(rt>=P.length){P.push(je),dt=rt;break}else if(P[rt]===null){P[rt]=je,dt=rt;break}if(dt===-1)break}const ct=S[dt];ct&&ct.connect(je)}}const le=new B,be=new B;function _e(ue,Pe,je){le.setFromMatrixPosition(Pe.matrixWorld),be.setFromMatrixPosition(je.matrixWorld);const dt=le.distanceTo(be),ct=Pe.projectionMatrix.elements,rt=je.projectionMatrix.elements,Gt=ct[14]/(ct[10]-1),pt=ct[14]/(ct[10]+1),W=(ct[9]+1)/ct[5],Be=(ct[9]-1)/ct[5],ye=(ct[8]-1)/ct[0],Fe=(rt[8]+1)/rt[0],Ae=Gt*ye,nt=Gt*Fe,Je=dt/(-ye+Fe),at=Je*-ye;Pe.matrixWorld.decompose(ue.position,ue.quaternion,ue.scale),ue.translateX(at),ue.translateZ(Je),ue.matrixWorld.compose(ue.position,ue.quaternion,ue.scale),ue.matrixWorldInverse.copy(ue.matrixWorld).invert();const qt=Gt+Je,z=pt+Je,I=Ae-at,he=nt+(dt-at),ge=W*pt/z*qt,Ie=Be*pt/z*qt;ue.projectionMatrix.makePerspective(I,he,ge,Ie,qt,z),ue.projectionMatrixInverse.copy(ue.projectionMatrix).invert()}function xe(ue,Pe){Pe===null?ue.matrixWorld.copy(ue.matrix):ue.matrixWorld.multiplyMatrices(Pe.matrixWorld,ue.matrix),ue.matrixWorldInverse.copy(ue.matrixWorld).invert()}this.updateCamera=function(ue){if(i===null)return;A.texture!==null&&(ue.near=A.depthNear,ue.far=A.depthFar),C.near=q.near=O.near=ue.near,C.far=q.far=O.far=ue.far,(k!==C.near||Me!==C.far)&&(i.updateRenderState({depthNear:C.near,depthFar:C.far}),k=C.near,Me=C.far,O.near=k,O.far=Me,q.near=k,q.far=Me,O.updateProjectionMatrix(),q.updateProjectionMatrix(),ue.updateProjectionMatrix());const Pe=ue.parent,je=C.cameras;xe(C,Pe);for(let dt=0;dt<je.length;dt++)xe(je[dt],Pe);je.length===2?_e(C,O,q):C.projectionMatrix.copy(O.projectionMatrix),Ue(ue,C,Pe)};function Ue(ue,Pe,je){je===null?ue.matrix.copy(Pe.matrixWorld):(ue.matrix.copy(je.matrixWorld),ue.matrix.invert(),ue.matrix.multiply(Pe.matrixWorld)),ue.matrix.decompose(ue.position,ue.quaternion,ue.scale),ue.updateMatrixWorld(!0),ue.projectionMatrix.copy(Pe.projectionMatrix),ue.projectionMatrixInverse.copy(Pe.projectionMatrixInverse),ue.isPerspectiveCamera&&(ue.fov=$s*2*Math.atan(1/ue.projectionMatrix.elements[5]),ue.zoom=1)}this.getCamera=function(){return C},this.getFoveation=function(){if(!(m===null&&g===null))return l},this.setFoveation=function(ue){l=ue,m!==null&&(m.fixedFoveation=ue),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=ue)},this.hasDepthSensing=function(){return A.texture!==null};let Le=null;function et(ue,Pe){if(d=Pe.getViewerPose(h||a),x=Pe,d!==null){const je=d.views;g!==null&&(e.setRenderTargetFramebuffer(T,g.framebuffer),e.setRenderTarget(T));let dt=!1;je.length!==C.cameras.length&&(C.cameras.length=0,dt=!0);for(let rt=0;rt<je.length;rt++){const Gt=je[rt];let pt=null;if(g!==null)pt=g.getViewport(Gt);else{const Be=p.getViewSubImage(m,Gt);pt=Be.viewport,rt===0&&(e.setRenderTargetTextures(T,Be.colorTexture,m.ignoreDepthValues?void 0:Be.depthStencilTexture),e.setRenderTarget(T))}let W=ie[rt];W===void 0&&(W=new Cn,W.layers.enable(rt),W.viewport=new nn,ie[rt]=W),W.matrix.fromArray(Gt.transform.matrix),W.matrix.decompose(W.position,W.quaternion,W.scale),W.projectionMatrix.fromArray(Gt.projectionMatrix),W.projectionMatrixInverse.copy(W.projectionMatrix).invert(),W.viewport.set(pt.x,pt.y,pt.width,pt.height),rt===0&&(C.matrix.copy(W.matrix),C.matrix.decompose(C.position,C.quaternion,C.scale)),dt===!0&&C.cameras.push(W)}const ct=i.enabledFeatures;if(ct&&ct.includes("depth-sensing")){const rt=p.getDepthInformation(je[0]);rt&&rt.isValid&&rt.texture&&A.init(e,rt,i.renderState)}}for(let je=0;je<S.length;je++){const dt=P[je],ct=S[je];dt!==null&&ct!==void 0&&ct.update(dt,Pe,h||a)}A.render(e,C),Le&&Le(ue,Pe),Pe.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:Pe}),x=null}const wt=new H;wt.setAnimationLoop(et),this.setAnimationLoop=function(ue){Le=ue},this.dispose=function(){}}}const Xc=new vn,C_=new st;function P_(s,e){function t(y,_){y.matrixAutoUpdate===!0&&y.updateMatrix(),_.value.copy(y.matrix)}function n(y,_){_.color.getRGB(y.fogColor.value,Po(s)),_.isFog?(y.fogNear.value=_.near,y.fogFar.value=_.far):_.isFogExp2&&(y.fogDensity.value=_.density)}function i(y,_,T,S,P){_.isMeshBasicMaterial||_.isMeshLambertMaterial?r(y,_):_.isMeshToonMaterial?(r(y,_),p(y,_)):_.isMeshPhongMaterial?(r(y,_),d(y,_)):_.isMeshStandardMaterial?(r(y,_),m(y,_),_.isMeshPhysicalMaterial&&g(y,_,P)):_.isMeshMatcapMaterial?(r(y,_),x(y,_)):_.isMeshDepthMaterial?r(y,_):_.isMeshDistanceMaterial?(r(y,_),A(y,_)):_.isMeshNormalMaterial?r(y,_):_.isLineBasicMaterial?(a(y,_),_.isLineDashedMaterial&&o(y,_)):_.isPointsMaterial?l(y,_,T,S):_.isSpriteMaterial?h(y,_):_.isShadowMaterial?(y.color.value.copy(_.color),y.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function r(y,_){y.opacity.value=_.opacity,_.color&&y.diffuse.value.copy(_.color),_.emissive&&y.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(y.map.value=_.map,t(_.map,y.mapTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.bumpMap&&(y.bumpMap.value=_.bumpMap,t(_.bumpMap,y.bumpMapTransform),y.bumpScale.value=_.bumpScale,_.side===Jt&&(y.bumpScale.value*=-1)),_.normalMap&&(y.normalMap.value=_.normalMap,t(_.normalMap,y.normalMapTransform),y.normalScale.value.copy(_.normalScale),_.side===Jt&&y.normalScale.value.negate()),_.displacementMap&&(y.displacementMap.value=_.displacementMap,t(_.displacementMap,y.displacementMapTransform),y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias),_.emissiveMap&&(y.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,y.emissiveMapTransform)),_.specularMap&&(y.specularMap.value=_.specularMap,t(_.specularMap,y.specularMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest);const T=e.get(_),S=T.envMap,P=T.envMapRotation;if(S&&(y.envMap.value=S,Xc.copy(P),Xc.x*=-1,Xc.y*=-1,Xc.z*=-1,S.isCubeTexture&&S.isRenderTargetTexture===!1&&(Xc.y*=-1,Xc.z*=-1),y.envMapRotation.value.setFromMatrix4(C_.makeRotationFromEuler(Xc)),y.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,y.reflectivity.value=_.reflectivity,y.ior.value=_.ior,y.refractionRatio.value=_.refractionRatio),_.lightMap){y.lightMap.value=_.lightMap;const V=s._useLegacyLights===!0?Math.PI:1;y.lightMapIntensity.value=_.lightMapIntensity*V,t(_.lightMap,y.lightMapTransform)}_.aoMap&&(y.aoMap.value=_.aoMap,y.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,y.aoMapTransform))}function a(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,_.map&&(y.map.value=_.map,t(_.map,y.mapTransform))}function o(y,_){y.dashSize.value=_.dashSize,y.totalSize.value=_.dashSize+_.gapSize,y.scale.value=_.scale}function l(y,_,T,S){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.size.value=_.size*T,y.scale.value=S*.5,_.map&&(y.map.value=_.map,t(_.map,y.uvTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest)}function h(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.rotation.value=_.rotation,_.map&&(y.map.value=_.map,t(_.map,y.mapTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest)}function d(y,_){y.specular.value.copy(_.specular),y.shininess.value=Math.max(_.shininess,1e-4)}function p(y,_){_.gradientMap&&(y.gradientMap.value=_.gradientMap)}function m(y,_){y.metalness.value=_.metalness,_.metalnessMap&&(y.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,y.metalnessMapTransform)),y.roughness.value=_.roughness,_.roughnessMap&&(y.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,y.roughnessMapTransform)),e.get(_).envMap&&(y.envMapIntensity.value=_.envMapIntensity)}function g(y,_,T){y.ior.value=_.ior,_.sheen>0&&(y.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),y.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(y.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,y.sheenColorMapTransform)),_.sheenRoughnessMap&&(y.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,y.sheenRoughnessMapTransform))),_.clearcoat>0&&(y.clearcoat.value=_.clearcoat,y.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(y.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,y.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(y.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,y.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(y.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,y.clearcoatNormalMapTransform),y.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===Jt&&y.clearcoatNormalScale.value.negate())),_.iridescence>0&&(y.iridescence.value=_.iridescence,y.iridescenceIOR.value=_.iridescenceIOR,y.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],y.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(y.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,y.iridescenceMapTransform)),_.iridescenceThicknessMap&&(y.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,y.iridescenceThicknessMapTransform))),_.transmission>0&&(y.transmission.value=_.transmission,y.transmissionSamplerMap.value=T.texture,y.transmissionSamplerSize.value.set(T.width,T.height),_.transmissionMap&&(y.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,y.transmissionMapTransform)),y.thickness.value=_.thickness,_.thicknessMap&&(y.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,y.thicknessMapTransform)),y.attenuationDistance.value=_.attenuationDistance,y.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(y.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(y.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,y.anisotropyMapTransform))),y.specularIntensity.value=_.specularIntensity,y.specularColor.value.copy(_.specularColor),_.specularColorMap&&(y.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,y.specularColorMapTransform)),_.specularIntensityMap&&(y.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,y.specularIntensityMapTransform))}function x(y,_){_.matcap&&(y.matcap.value=_.matcap)}function A(y,_){const T=e.get(_).light;y.referencePosition.value.setFromMatrixPosition(T.matrixWorld),y.nearDistance.value=T.shadow.camera.near,y.farDistance.value=T.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function I_(s,e,t,n){let i={},r={},a=[];const o=t.isWebGL2?s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(T,S){const P=S.program;n.uniformBlockBinding(T,P)}function h(T,S){let P=i[T.id];P===void 0&&(x(T),P=d(T),i[T.id]=P,T.addEventListener("dispose",y));const V=S.program;n.updateUBOMapping(T,V);const F=e.render.frame;r[T.id]!==F&&(m(T),r[T.id]=F)}function d(T){const S=p();T.__bindingPointIndex=S;const P=s.createBuffer(),V=T.__size,F=T.usage;return s.bindBuffer(s.UNIFORM_BUFFER,P),s.bufferData(s.UNIFORM_BUFFER,V,F),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,S,P),P}function p(){for(let T=0;T<o;T++)if(a.indexOf(T)===-1)return a.push(T),T;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(T){const S=i[T.id],P=T.uniforms,V=T.__cache;s.bindBuffer(s.UNIFORM_BUFFER,S);for(let F=0,O=P.length;F<O;F++){const q=Array.isArray(P[F])?P[F]:[P[F]];for(let ie=0,C=q.length;ie<C;ie++){const k=q[ie];if(g(k,F,ie,V)===!0){const Me=k.__offset,Se=Array.isArray(k.value)?k.value:[k.value];let Z=0;for(let me=0;me<Se.length;me++){const le=Se[me],be=A(le);typeof le=="number"||typeof le=="boolean"?(k.__data[0]=le,s.bufferSubData(s.UNIFORM_BUFFER,Me+Z,k.__data)):le.isMatrix3?(k.__data[0]=le.elements[0],k.__data[1]=le.elements[1],k.__data[2]=le.elements[2],k.__data[3]=0,k.__data[4]=le.elements[3],k.__data[5]=le.elements[4],k.__data[6]=le.elements[5],k.__data[7]=0,k.__data[8]=le.elements[6],k.__data[9]=le.elements[7],k.__data[10]=le.elements[8],k.__data[11]=0):(le.toArray(k.__data,Z),Z+=be.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,Me,k.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function g(T,S,P,V){const F=T.value,O=S+"_"+P;if(V[O]===void 0)return typeof F=="number"||typeof F=="boolean"?V[O]=F:V[O]=F.clone(),!0;{const q=V[O];if(typeof F=="number"||typeof F=="boolean"){if(q!==F)return V[O]=F,!0}else if(q.equals(F)===!1)return q.copy(F),!0}return!1}function x(T){const S=T.uniforms;let P=0;const V=16;for(let O=0,q=S.length;O<q;O++){const ie=Array.isArray(S[O])?S[O]:[S[O]];for(let C=0,k=ie.length;C<k;C++){const Me=ie[C],Se=Array.isArray(Me.value)?Me.value:[Me.value];for(let Z=0,me=Se.length;Z<me;Z++){const le=Se[Z],be=A(le),_e=P%V;_e!==0&&V-_e<be.boundary&&(P+=V-_e),Me.__data=new Float32Array(be.storage/Float32Array.BYTES_PER_ELEMENT),Me.__offset=P,P+=be.storage}}}const F=P%V;return F>0&&(P+=V-F),T.__size=P,T.__cache={},this}function A(T){const S={boundary:0,storage:0};return typeof T=="number"||typeof T=="boolean"?(S.boundary=4,S.storage=4):T.isVector2?(S.boundary=8,S.storage=8):T.isVector3||T.isColor?(S.boundary=16,S.storage=12):T.isVector4?(S.boundary=16,S.storage=16):T.isMatrix3?(S.boundary=48,S.storage=48):T.isMatrix4?(S.boundary=64,S.storage=64):T.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",T),S}function y(T){const S=T.target;S.removeEventListener("dispose",y);const P=a.indexOf(S.__bindingPointIndex);a.splice(P,1),s.deleteBuffer(i[S.id]),delete i[S.id],delete r[S.id]}function _(){for(const T in i)s.deleteBuffer(i[T]);a=[],i={},r={}}return{bind:l,update:h,dispose:_}}class _m{constructor(e={}){const{canvas:t=Hu(),context:n=null,depth:i=!0,stencil:r=!0,alpha:a=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:h=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;n!==null?m=n.getContextAttributes().alpha:m=a;const g=new Uint32Array(4),x=new Int32Array(4);let A=null,y=null;const _=[],T=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Si,this._useLegacyLights=!1,this.toneMapping=Ir,this.toneMappingExposure=1;const S=this;let P=!1,V=0,F=0,O=null,q=-1,ie=null;const C=new nn,k=new nn;let Me=null;const Se=new $e(0);let Z=0,me=t.width,le=t.height,be=1,_e=null,xe=null;const Ue=new nn(0,0,me,le),Le=new nn(0,0,me,le);let et=!1;const wt=new Y;let ue=!1,Pe=!1,je=null;const dt=new st,ct=new ve,rt=new B,Gt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function pt(){return O===null?be:1}let W=n;function Be(D,ne){for(let oe=0;oe<D.length;oe++){const ce=D[oe],se=t.getContext(ce,ne);if(se!==null)return se}return null}try{const D={alpha:!0,depth:i,stencil:r,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:h,powerPreference:d,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Sn}`),t.addEventListener("webglcontextlost",In,!1),t.addEventListener("webglcontextrestored",K,!1),t.addEventListener("webglcontextcreationerror",Xe,!1),W===null){const ne=["webgl2","webgl","experimental-webgl"];if(S.isWebGL1Renderer===!0&&ne.shift(),W=Be(ne,D),W===null)throw Be(ne)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext!="undefined"&&W instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),W.getShaderPrecisionFormat===void 0&&(W.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(D){throw console.error("THREE.WebGLRenderer: "+D.message),D}let ye,Fe,Ae,nt,Je,at,qt,z,I,he,ge,Ie,Ce,Rt,vt,Ve,We,Ct,Oe,jn,Yt,_t,lt,ht;function tn(){ye=new Xt(W),Fe=new Wd(W,ye,e),ye.init(Fe),_t=new M_(W,ye,Fe),Ae=new y_(W,ye,Fe),nt=new yn(W),Je=new c_,at=new b_(W,ye,Ae,Je,Fe,_t,nt),qt=new u(S),z=new gt(S),I=new Q(W,Fe),lt=new Hd(W,ye,I,Fe),he=new on(W,I,nt,lt),ge=new pi(W,he,I,nt),Oe=new $n(W,Fe,at),Ve=new c(Je),Ie=new o_(S,qt,z,ye,Fe,lt,Ve),Ce=new P_(S,Je),Rt=new u_,vt=new g_(ye,Fe),Ct=new im(S,qt,z,Ae,ge,m,l),We=new x_(S,ge,Fe),ht=new I_(W,nt,Fe,Ae),jn=new rm(W,ye,nt,Fe),Yt=new pn(W,ye,nt,Fe),nt.programs=Ie.programs,S.capabilities=Fe,S.extensions=ye,S.properties=Je,S.renderLists=Rt,S.shadowMap=We,S.state=Ae,S.info=nt}tn();const Ft=new R_(S,W);this.xr=Ft,this.getContext=function(){return W},this.getContextAttributes=function(){return W.getContextAttributes()},this.forceContextLoss=function(){const D=ye.get("WEBGL_lose_context");D&&D.loseContext()},this.forceContextRestore=function(){const D=ye.get("WEBGL_lose_context");D&&D.restoreContext()},this.getPixelRatio=function(){return be},this.setPixelRatio=function(D){D!==void 0&&(be=D,this.setSize(me,le,!1))},this.getSize=function(D){return D.set(me,le)},this.setSize=function(D,ne,oe=!0){if(Ft.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}me=D,le=ne,t.width=Math.floor(D*be),t.height=Math.floor(ne*be),oe===!0&&(t.style.width=D+"px",t.style.height=ne+"px"),this.setViewport(0,0,D,ne)},this.getDrawingBufferSize=function(D){return D.set(me*be,le*be).floor()},this.setDrawingBufferSize=function(D,ne,oe){me=D,le=ne,be=oe,t.width=Math.floor(D*oe),t.height=Math.floor(ne*oe),this.setViewport(0,0,D,ne)},this.getCurrentViewport=function(D){return D.copy(C)},this.getViewport=function(D){return D.copy(Ue)},this.setViewport=function(D,ne,oe,ce){D.isVector4?Ue.set(D.x,D.y,D.z,D.w):Ue.set(D,ne,oe,ce),Ae.viewport(C.copy(Ue).multiplyScalar(be).round())},this.getScissor=function(D){return D.copy(Le)},this.setScissor=function(D,ne,oe,ce){D.isVector4?Le.set(D.x,D.y,D.z,D.w):Le.set(D,ne,oe,ce),Ae.scissor(k.copy(Le).multiplyScalar(be).round())},this.getScissorTest=function(){return et},this.setScissorTest=function(D){Ae.setScissorTest(et=D)},this.setOpaqueSort=function(D){_e=D},this.setTransparentSort=function(D){xe=D},this.getClearColor=function(D){return D.copy(Ct.getClearColor())},this.setClearColor=function(){Ct.setClearColor.apply(Ct,arguments)},this.getClearAlpha=function(){return Ct.getClearAlpha()},this.setClearAlpha=function(){Ct.setClearAlpha.apply(Ct,arguments)},this.clear=function(D=!0,ne=!0,oe=!0){let ce=0;if(D){let se=!1;if(O!==null){const Qe=O.texture.format;se=Qe===Jo||Qe===gl||Qe===pl}if(se){const Qe=O.texture.type,ft=Qe===as||Qe===Qi||Qe===io||Qe===os||Qe===qo||Qe===Dr,xt=Ct.getClearColor(),St=Ct.getClearAlpha(),Vt=xt.r,Dt=xt.g,Ot=xt.b;ft?(g[0]=Vt,g[1]=Dt,g[2]=Ot,g[3]=St,W.clearBufferuiv(W.COLOR,0,g)):(x[0]=Vt,x[1]=Dt,x[2]=Ot,x[3]=St,W.clearBufferiv(W.COLOR,0,x))}else ce|=W.COLOR_BUFFER_BIT}ne&&(ce|=W.DEPTH_BUFFER_BIT),oe&&(ce|=W.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),W.clear(ce)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",In,!1),t.removeEventListener("webglcontextrestored",K,!1),t.removeEventListener("webglcontextcreationerror",Xe,!1),Rt.dispose(),vt.dispose(),Je.dispose(),qt.dispose(),z.dispose(),ge.dispose(),lt.dispose(),ht.dispose(),Ie.dispose(),Ft.dispose(),Ft.removeEventListener("sessionstart",ts),Ft.removeEventListener("sessionend",Mn),je&&(je.dispose(),je=null),Ki.stop()};function In(D){D.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),P=!0}function K(){console.log("THREE.WebGLRenderer: Context Restored."),P=!1;const D=nt.autoReset,ne=We.enabled,oe=We.autoUpdate,ce=We.needsUpdate,se=We.type;tn(),nt.autoReset=D,We.enabled=ne,We.autoUpdate=oe,We.needsUpdate=ce,We.type=se}function Xe(D){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",D.statusMessage)}function ae(D){const ne=D.target;ne.removeEventListener("dispose",ae),Ge(ne)}function Ge(D){qe(D),Je.remove(D)}function qe(D){const ne=Je.get(D).programs;ne!==void 0&&(ne.forEach(function(oe){Ie.releaseProgram(oe)}),D.isShaderMaterial&&Ie.releaseShaderCache(D))}this.renderBufferDirect=function(D,ne,oe,ce,se,Qe){ne===null&&(ne=Gt);const ft=se.isMesh&&se.matrixWorld.determinant()<0,xt=wx(D,ne,oe,ce,se);Ae.setMaterial(ce,ft);let St=oe.index,Vt=1;if(ce.wireframe===!0){if(St=he.getWireframeAttribute(oe),St===void 0)return;Vt=2}const Dt=oe.drawRange,Ot=oe.attributes.position;let Yn=Dt.start*Vt,Tr=(Dt.start+Dt.count)*Vt;Qe!==null&&(Yn=Math.max(Yn,Qe.start*Vt),Tr=Math.min(Tr,(Qe.start+Qe.count)*Vt)),St!==null?(Yn=Math.max(Yn,0),Tr=Math.min(Tr,St.count)):Ot!=null&&(Yn=Math.max(Yn,0),Tr=Math.min(Tr,Ot.count));const yi=Tr-Yn;if(yi<0||yi===1/0)return;lt.setup(se,ce,xt,oe,St);let Za,Nn=jn;if(St!==null&&(Za=I.get(St),Nn=Yt,Nn.setIndex(Za)),se.isMesh)ce.wireframe===!0?(Ae.setLineWidth(ce.wireframeLinewidth*pt()),Nn.setMode(W.LINES)):Nn.setMode(W.TRIANGLES);else if(se.isLine){let Bt=ce.linewidth;Bt===void 0&&(Bt=1),Ae.setLineWidth(Bt*pt()),se.isLineSegments?Nn.setMode(W.LINES):se.isLineLoop?Nn.setMode(W.LINE_LOOP):Nn.setMode(W.LINE_STRIP)}else se.isPoints?Nn.setMode(W.POINTS):se.isSprite&&Nn.setMode(W.TRIANGLES);if(se.isBatchedMesh)Nn.renderMultiDraw(se._multiDrawStarts,se._multiDrawCounts,se._multiDrawCount);else if(se.isInstancedMesh)Nn.renderInstances(Yn,yi,se.count);else if(oe.isInstancedBufferGeometry){const Bt=oe._maxInstanceCount!==void 0?oe._maxInstanceCount:1/0,Up=Math.min(oe.instanceCount,Bt);Nn.renderInstances(Yn,yi,Up)}else Nn.render(Yn,yi)};function Zt(D,ne,oe){D.transparent===!0&&D.side===ur&&D.forceSinglePass===!1?(D.side=Jt,D.needsUpdate=!0,sd(D,ne,oe),D.side=De,D.needsUpdate=!0,sd(D,ne,oe),D.side=ur):sd(D,ne,oe)}this.compile=function(D,ne,oe=null){oe===null&&(oe=D),y=vt.get(oe),y.init(),T.push(y),oe.traverseVisible(function(se){se.isLight&&se.layers.test(ne.layers)&&(y.pushLight(se),se.castShadow&&y.pushShadow(se))}),D!==oe&&D.traverseVisible(function(se){se.isLight&&se.layers.test(ne.layers)&&(y.pushLight(se),se.castShadow&&y.pushShadow(se))}),y.setupLights(S._useLegacyLights);const ce=new Set;return D.traverse(function(se){const Qe=se.material;if(Qe)if(Array.isArray(Qe))for(let ft=0;ft<Qe.length;ft++){const xt=Qe[ft];Zt(xt,oe,se),ce.add(xt)}else Zt(Qe,oe,se),ce.add(Qe)}),T.pop(),y=null,ce},this.compileAsync=function(D,ne,oe=null){const ce=this.compile(D,ne,oe);return new Promise(se=>{function Qe(){if(ce.forEach(function(ft){Je.get(ft).currentProgram.isReady()&&ce.delete(ft)}),ce.size===0){se(D);return}setTimeout(Qe,10)}ye.get("KHR_parallel_shader_compile")!==null?Qe():setTimeout(Qe,10)})};let bn=null;function Pi(D){bn&&bn(D)}function ts(){Ki.stop()}function Mn(){Ki.start()}const Ki=new H;Ki.setAnimationLoop(Pi),typeof self!="undefined"&&Ki.setContext(self),this.setAnimationLoop=function(D){bn=D,Ft.setAnimationLoop(D),D===null?Ki.stop():Ki.start()},Ft.addEventListener("sessionstart",ts),Ft.addEventListener("sessionend",Mn),this.render=function(D,ne){if(ne!==void 0&&ne.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(P===!0)return;D.matrixWorldAutoUpdate===!0&&D.updateMatrixWorld(),ne.parent===null&&ne.matrixWorldAutoUpdate===!0&&ne.updateMatrixWorld(),Ft.enabled===!0&&Ft.isPresenting===!0&&(Ft.cameraAutoUpdate===!0&&Ft.updateCamera(ne),ne=Ft.getCamera()),D.isScene===!0&&D.onBeforeRender(S,D,ne,O),y=vt.get(D,T.length),y.init(),T.push(y),dt.multiplyMatrices(ne.projectionMatrix,ne.matrixWorldInverse),wt.setFromProjectionMatrix(dt),Pe=this.localClippingEnabled,ue=Ve.init(this.clippingPlanes,Pe),A=Rt.get(D,_.length),A.init(),_.push(A),ua(D,ne,0,S.sortObjects),A.finish(),S.sortObjects===!0&&A.sort(_e,xe),this.info.render.frame++,ue===!0&&Ve.beginShadows();const oe=y.state.shadowsArray;if(We.render(oe,D,ne),ue===!0&&Ve.endShadows(),this.info.autoReset===!0&&this.info.reset(),(Ft.enabled===!1||Ft.isPresenting===!1||Ft.hasDepthSensing()===!1)&&Ct.render(A,D),y.setupLights(S._useLegacyLights),ne.isArrayCamera){const ce=ne.cameras;for(let se=0,Qe=ce.length;se<Qe;se++){const ft=ce[se];F0(A,D,ft,ft.viewport)}}else F0(A,D,ne);O!==null&&(at.updateMultisampleRenderTarget(O),at.updateRenderTargetMipmap(O)),D.isScene===!0&&D.onAfterRender(S,D,ne),lt.resetDefaultState(),q=-1,ie=null,T.pop(),T.length>0?y=T[T.length-1]:y=null,_.pop(),_.length>0?A=_[_.length-1]:A=null};function ua(D,ne,oe,ce){if(D.visible===!1)return;if(D.layers.test(ne.layers)){if(D.isGroup)oe=D.renderOrder;else if(D.isLOD)D.autoUpdate===!0&&D.update(ne);else if(D.isLight)y.pushLight(D),D.castShadow&&y.pushShadow(D);else if(D.isSprite){if(!D.frustumCulled||wt.intersectsSprite(D)){ce&&rt.setFromMatrixPosition(D.matrixWorld).applyMatrix4(dt);const ft=ge.update(D),xt=D.material;xt.visible&&A.push(D,ft,xt,oe,rt.z,null)}}else if((D.isMesh||D.isLine||D.isPoints)&&(!D.frustumCulled||wt.intersectsObject(D))){const ft=ge.update(D),xt=D.material;if(ce&&(D.boundingSphere!==void 0?(D.boundingSphere===null&&D.computeBoundingSphere(),rt.copy(D.boundingSphere.center)):(ft.boundingSphere===null&&ft.computeBoundingSphere(),rt.copy(ft.boundingSphere.center)),rt.applyMatrix4(D.matrixWorld).applyMatrix4(dt)),Array.isArray(xt)){const St=ft.groups;for(let Vt=0,Dt=St.length;Vt<Dt;Vt++){const Ot=St[Vt],Yn=xt[Ot.materialIndex];Yn&&Yn.visible&&A.push(D,ft,Yn,oe,rt.z,Ot)}}else xt.visible&&A.push(D,ft,xt,oe,rt.z,null)}}const Qe=D.children;for(let ft=0,xt=Qe.length;ft<xt;ft++)ua(Qe[ft],ne,oe,ce)}function F0(D,ne,oe,ce){const se=D.opaque,Qe=D.transmissive,ft=D.transparent;y.setupLightsView(oe),ue===!0&&Ve.setGlobalState(S.clippingPlanes,oe),Qe.length>0&&Tx(se,Qe,ne,oe),ce&&Ae.viewport(C.copy(ce)),se.length>0&&rd(se,ne,oe),Qe.length>0&&rd(Qe,ne,oe),ft.length>0&&rd(ft,ne,oe),Ae.buffers.depth.setTest(!0),Ae.buffers.depth.setMask(!0),Ae.buffers.color.setMask(!0),Ae.setPolygonOffset(!1)}function Tx(D,ne,oe,ce){if((oe.isScene===!0?oe.overrideMaterial:null)!==null)return;const Qe=Fe.isWebGL2;je===null&&(je=new vs(1,1,{generateMipmaps:!0,type:ye.has("EXT_color_buffer_half_float")?ma:as,minFilter:Gi,samples:Qe?4:0})),S.getDrawingBufferSize(ct),Qe?je.setSize(ct.x,ct.y):je.setSize(_s(ct.x),_s(ct.y));const ft=S.getRenderTarget();S.setRenderTarget(je),S.getClearColor(Se),Z=S.getClearAlpha(),Z<1&&S.setClearColor(16777215,.5),S.clear();const xt=S.toneMapping;S.toneMapping=Ir,rd(D,oe,ce),at.updateMultisampleRenderTarget(je),at.updateRenderTargetMipmap(je);let St=!1;for(let Vt=0,Dt=ne.length;Vt<Dt;Vt++){const Ot=ne[Vt],Yn=Ot.object,Tr=Ot.geometry,yi=Ot.material,Za=Ot.group;if(yi.side===ur&&Yn.layers.test(ce.layers)){const Nn=yi.side;yi.side=Jt,yi.needsUpdate=!0,O0(Yn,oe,ce,Tr,yi,Za),yi.side=Nn,yi.needsUpdate=!0,St=!0}}St===!0&&(at.updateMultisampleRenderTarget(je),at.updateRenderTargetMipmap(je)),S.setRenderTarget(ft),S.setClearColor(Se,Z),S.toneMapping=xt}function rd(D,ne,oe){const ce=ne.isScene===!0?ne.overrideMaterial:null;for(let se=0,Qe=D.length;se<Qe;se++){const ft=D[se],xt=ft.object,St=ft.geometry,Vt=ce===null?ft.material:ce,Dt=ft.group;xt.layers.test(oe.layers)&&O0(xt,ne,oe,St,Vt,Dt)}}function O0(D,ne,oe,ce,se,Qe){D.onBeforeRender(S,ne,oe,ce,se,Qe),D.modelViewMatrix.multiplyMatrices(oe.matrixWorldInverse,D.matrixWorld),D.normalMatrix.getNormalMatrix(D.modelViewMatrix),se.onBeforeRender(S,ne,oe,ce,D,Qe),se.transparent===!0&&se.side===ur&&se.forceSinglePass===!1?(se.side=Jt,se.needsUpdate=!0,S.renderBufferDirect(oe,ne,ce,se,D,Qe),se.side=De,se.needsUpdate=!0,S.renderBufferDirect(oe,ne,ce,se,D,Qe),se.side=ur):S.renderBufferDirect(oe,ne,ce,se,D,Qe),D.onAfterRender(S,ne,oe,ce,se,Qe)}function sd(D,ne,oe){ne.isScene!==!0&&(ne=Gt);const ce=Je.get(D),se=y.state.lights,Qe=y.state.shadowsArray,ft=se.state.version,xt=Ie.getParameters(D,se.state,Qe,ne,oe),St=Ie.getProgramCacheKey(xt);let Vt=ce.programs;ce.environment=D.isMeshStandardMaterial?ne.environment:null,ce.fog=ne.fog,ce.envMap=(D.isMeshStandardMaterial?z:qt).get(D.envMap||ce.environment),ce.envMapRotation=ce.environment!==null&&D.envMap===null?ne.environmentRotation:D.envMapRotation,Vt===void 0&&(D.addEventListener("dispose",ae),Vt=new Map,ce.programs=Vt);let Dt=Vt.get(St);if(Dt!==void 0){if(ce.currentProgram===Dt&&ce.lightsStateVersion===ft)return z0(D,xt),Dt}else xt.uniforms=Ie.getUniforms(D),D.onBuild(oe,xt,S),D.onBeforeCompile(xt,S),Dt=Ie.acquireProgram(xt,St),Vt.set(St,Dt),ce.uniforms=xt.uniforms;const Ot=ce.uniforms;return(!D.isShaderMaterial&&!D.isRawShaderMaterial||D.clipping===!0)&&(Ot.clippingPlanes=Ve.uniform),z0(D,xt),ce.needsLights=Cx(D),ce.lightsStateVersion=ft,ce.needsLights&&(Ot.ambientLightColor.value=se.state.ambient,Ot.lightProbe.value=se.state.probe,Ot.directionalLights.value=se.state.directional,Ot.directionalLightShadows.value=se.state.directionalShadow,Ot.spotLights.value=se.state.spot,Ot.spotLightShadows.value=se.state.spotShadow,Ot.rectAreaLights.value=se.state.rectArea,Ot.ltc_1.value=se.state.rectAreaLTC1,Ot.ltc_2.value=se.state.rectAreaLTC2,Ot.pointLights.value=se.state.point,Ot.pointLightShadows.value=se.state.pointShadow,Ot.hemisphereLights.value=se.state.hemi,Ot.directionalShadowMap.value=se.state.directionalShadowMap,Ot.directionalShadowMatrix.value=se.state.directionalShadowMatrix,Ot.spotShadowMap.value=se.state.spotShadowMap,Ot.spotLightMatrix.value=se.state.spotLightMatrix,Ot.spotLightMap.value=se.state.spotLightMap,Ot.pointShadowMap.value=se.state.pointShadowMap,Ot.pointShadowMatrix.value=se.state.pointShadowMatrix),ce.currentProgram=Dt,ce.uniformsList=null,Dt}function B0(D){if(D.uniformsList===null){const ne=D.currentProgram.getUniforms();D.uniformsList=bf.seqWithValue(ne.seq,D.uniforms)}return D.uniformsList}function z0(D,ne){const oe=Je.get(D);oe.outputColorSpace=ne.outputColorSpace,oe.batching=ne.batching,oe.instancing=ne.instancing,oe.instancingColor=ne.instancingColor,oe.instancingMorph=ne.instancingMorph,oe.skinning=ne.skinning,oe.morphTargets=ne.morphTargets,oe.morphNormals=ne.morphNormals,oe.morphColors=ne.morphColors,oe.morphTargetsCount=ne.morphTargetsCount,oe.numClippingPlanes=ne.numClippingPlanes,oe.numIntersection=ne.numClipIntersection,oe.vertexAlphas=ne.vertexAlphas,oe.vertexTangents=ne.vertexTangents,oe.toneMapping=ne.toneMapping}function wx(D,ne,oe,ce,se){ne.isScene!==!0&&(ne=Gt),at.resetTextureUnits();const Qe=ne.fog,ft=ce.isMeshStandardMaterial?ne.environment:null,xt=O===null?S.outputColorSpace:O.isXRRenderTarget===!0?O.texture.colorSpace:ir,St=(ce.isMeshStandardMaterial?z:qt).get(ce.envMap||ft),Vt=ce.vertexColors===!0&&!!oe.attributes.color&&oe.attributes.color.itemSize===4,Dt=!!oe.attributes.tangent&&(!!ce.normalMap||ce.anisotropy>0),Ot=!!oe.morphAttributes.position,Yn=!!oe.morphAttributes.normal,Tr=!!oe.morphAttributes.color;let yi=Ir;ce.toneMapped&&(O===null||O.isXRRenderTarget===!0)&&(yi=S.toneMapping);const Za=oe.morphAttributes.position||oe.morphAttributes.normal||oe.morphAttributes.color,Nn=Za!==void 0?Za.length:0,Bt=Je.get(ce),Up=y.state.lights;if(ue===!0&&(Pe===!0||D!==ie)){const ns=D===ie&&ce.id===q;Ve.setState(ce,D,ns)}let Ln=!1;ce.version===Bt.__version?(Bt.needsLights&&Bt.lightsStateVersion!==Up.state.version||Bt.outputColorSpace!==xt||se.isBatchedMesh&&Bt.batching===!1||!se.isBatchedMesh&&Bt.batching===!0||se.isInstancedMesh&&Bt.instancing===!1||!se.isInstancedMesh&&Bt.instancing===!0||se.isSkinnedMesh&&Bt.skinning===!1||!se.isSkinnedMesh&&Bt.skinning===!0||se.isInstancedMesh&&Bt.instancingColor===!0&&se.instanceColor===null||se.isInstancedMesh&&Bt.instancingColor===!1&&se.instanceColor!==null||se.isInstancedMesh&&Bt.instancingMorph===!0&&se.morphTexture===null||se.isInstancedMesh&&Bt.instancingMorph===!1&&se.morphTexture!==null||Bt.envMap!==St||ce.fog===!0&&Bt.fog!==Qe||Bt.numClippingPlanes!==void 0&&(Bt.numClippingPlanes!==Ve.numPlanes||Bt.numIntersection!==Ve.numIntersection)||Bt.vertexAlphas!==Vt||Bt.vertexTangents!==Dt||Bt.morphTargets!==Ot||Bt.morphNormals!==Yn||Bt.morphColors!==Tr||Bt.toneMapping!==yi||Fe.isWebGL2===!0&&Bt.morphTargetsCount!==Nn)&&(Ln=!0):(Ln=!0,Bt.__version=ce.version);let nl=Bt.currentProgram;Ln===!0&&(nl=sd(ce,ne,se));let k0=!1,_h=!1,Np=!1;const Bi=nl.getUniforms(),il=Bt.uniforms;if(Ae.useProgram(nl.program)&&(k0=!0,_h=!0,Np=!0),ce.id!==q&&(q=ce.id,_h=!0),k0||ie!==D){Bi.setValue(W,"projectionMatrix",D.projectionMatrix),Bi.setValue(W,"viewMatrix",D.matrixWorldInverse);const ns=Bi.map.cameraPosition;ns!==void 0&&ns.setValue(W,rt.setFromMatrixPosition(D.matrixWorld)),Fe.logarithmicDepthBuffer&&Bi.setValue(W,"logDepthBufFC",2/(Math.log(D.far+1)/Math.LN2)),(ce.isMeshPhongMaterial||ce.isMeshToonMaterial||ce.isMeshLambertMaterial||ce.isMeshBasicMaterial||ce.isMeshStandardMaterial||ce.isShaderMaterial)&&Bi.setValue(W,"isOrthographic",D.isOrthographicCamera===!0),ie!==D&&(ie=D,_h=!0,Np=!0)}if(se.isSkinnedMesh){Bi.setOptional(W,se,"bindMatrix"),Bi.setOptional(W,se,"bindMatrixInverse");const ns=se.skeleton;ns&&(Fe.floatVertexTextures?(ns.boneTexture===null&&ns.computeBoneTexture(),Bi.setValue(W,"boneTexture",ns.boneTexture,at)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}se.isBatchedMesh&&(Bi.setOptional(W,se,"batchingTexture"),Bi.setValue(W,"batchingTexture",se._matricesTexture,at));const Fp=oe.morphAttributes;if((Fp.position!==void 0||Fp.normal!==void 0||Fp.color!==void 0&&Fe.isWebGL2===!0)&&Oe.update(se,oe,nl),(_h||Bt.receiveShadow!==se.receiveShadow)&&(Bt.receiveShadow=se.receiveShadow,Bi.setValue(W,"receiveShadow",se.receiveShadow)),ce.isMeshGouraudMaterial&&ce.envMap!==null&&(il.envMap.value=St,il.flipEnvMap.value=St.isCubeTexture&&St.isRenderTargetTexture===!1?-1:1),_h&&(Bi.setValue(W,"toneMappingExposure",S.toneMappingExposure),Bt.needsLights&&Rx(il,Np),Qe&&ce.fog===!0&&Ce.refreshFogUniforms(il,Qe),Ce.refreshMaterialUniforms(il,ce,be,le,je),bf.upload(W,B0(Bt),il,at)),ce.isShaderMaterial&&ce.uniformsNeedUpdate===!0&&(bf.upload(W,B0(Bt),il,at),ce.uniformsNeedUpdate=!1),ce.isSpriteMaterial&&Bi.setValue(W,"center",se.center),Bi.setValue(W,"modelViewMatrix",se.modelViewMatrix),Bi.setValue(W,"normalMatrix",se.normalMatrix),Bi.setValue(W,"modelMatrix",se.matrixWorld),ce.isShaderMaterial||ce.isRawShaderMaterial){const ns=ce.uniformsGroups;for(let Op=0,Px=ns.length;Op<Px;Op++)if(Fe.isWebGL2){const G0=ns[Op];ht.update(G0,nl),ht.bind(G0,nl)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return nl}function Rx(D,ne){D.ambientLightColor.needsUpdate=ne,D.lightProbe.needsUpdate=ne,D.directionalLights.needsUpdate=ne,D.directionalLightShadows.needsUpdate=ne,D.pointLights.needsUpdate=ne,D.pointLightShadows.needsUpdate=ne,D.spotLights.needsUpdate=ne,D.spotLightShadows.needsUpdate=ne,D.rectAreaLights.needsUpdate=ne,D.hemisphereLights.needsUpdate=ne}function Cx(D){return D.isMeshLambertMaterial||D.isMeshToonMaterial||D.isMeshPhongMaterial||D.isMeshStandardMaterial||D.isShadowMaterial||D.isShaderMaterial&&D.lights===!0}this.getActiveCubeFace=function(){return V},this.getActiveMipmapLevel=function(){return F},this.getRenderTarget=function(){return O},this.setRenderTargetTextures=function(D,ne,oe){Je.get(D.texture).__webglTexture=ne,Je.get(D.depthTexture).__webglTexture=oe;const ce=Je.get(D);ce.__hasExternalTextures=!0,ce.__autoAllocateDepthBuffer=oe===void 0,ce.__autoAllocateDepthBuffer||ye.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),ce.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(D,ne){const oe=Je.get(D);oe.__webglFramebuffer=ne,oe.__useDefaultFramebuffer=ne===void 0},this.setRenderTarget=function(D,ne=0,oe=0){O=D,V=ne,F=oe;let ce=!0,se=null,Qe=!1,ft=!1;if(D){const St=Je.get(D);St.__useDefaultFramebuffer!==void 0?(Ae.bindFramebuffer(W.FRAMEBUFFER,null),ce=!1):St.__webglFramebuffer===void 0?at.setupRenderTarget(D):St.__hasExternalTextures&&at.rebindTextures(D,Je.get(D.texture).__webglTexture,Je.get(D.depthTexture).__webglTexture);const Vt=D.texture;(Vt.isData3DTexture||Vt.isDataArrayTexture||Vt.isCompressedArrayTexture)&&(ft=!0);const Dt=Je.get(D).__webglFramebuffer;D.isWebGLCubeRenderTarget?(Array.isArray(Dt[ne])?se=Dt[ne][oe]:se=Dt[ne],Qe=!0):Fe.isWebGL2&&D.samples>0&&at.useMultisampledRTT(D)===!1?se=Je.get(D).__webglMultisampledFramebuffer:Array.isArray(Dt)?se=Dt[oe]:se=Dt,C.copy(D.viewport),k.copy(D.scissor),Me=D.scissorTest}else C.copy(Ue).multiplyScalar(be).floor(),k.copy(Le).multiplyScalar(be).floor(),Me=et;if(Ae.bindFramebuffer(W.FRAMEBUFFER,se)&&Fe.drawBuffers&&ce&&Ae.drawBuffers(D,se),Ae.viewport(C),Ae.scissor(k),Ae.setScissorTest(Me),Qe){const St=Je.get(D.texture);W.framebufferTexture2D(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,W.TEXTURE_CUBE_MAP_POSITIVE_X+ne,St.__webglTexture,oe)}else if(ft){const St=Je.get(D.texture),Vt=ne||0;W.framebufferTextureLayer(W.FRAMEBUFFER,W.COLOR_ATTACHMENT0,St.__webglTexture,oe||0,Vt)}q=-1},this.readRenderTargetPixels=function(D,ne,oe,ce,se,Qe,ft){if(!(D&&D.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let xt=Je.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&ft!==void 0&&(xt=xt[ft]),xt){Ae.bindFramebuffer(W.FRAMEBUFFER,xt);try{const St=D.texture,Vt=St.format,Dt=St.type;if(Vt!==gn&&_t.convert(Vt)!==W.getParameter(W.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Ot=Dt===ma&&(ye.has("EXT_color_buffer_half_float")||Fe.isWebGL2&&ye.has("EXT_color_buffer_float"));if(Dt!==as&&_t.convert(Dt)!==W.getParameter(W.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Dt===ei&&(Fe.isWebGL2||ye.has("OES_texture_float")||ye.has("WEBGL_color_buffer_float")))&&!Ot){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ne>=0&&ne<=D.width-ce&&oe>=0&&oe<=D.height-se&&W.readPixels(ne,oe,ce,se,_t.convert(Vt),_t.convert(Dt),Qe)}finally{const St=O!==null?Je.get(O).__webglFramebuffer:null;Ae.bindFramebuffer(W.FRAMEBUFFER,St)}}},this.copyFramebufferToTexture=function(D,ne,oe=0){const ce=Math.pow(2,-oe),se=Math.floor(ne.image.width*ce),Qe=Math.floor(ne.image.height*ce);at.setTexture2D(ne,0),W.copyTexSubImage2D(W.TEXTURE_2D,oe,0,0,D.x,D.y,se,Qe),Ae.unbindTexture()},this.copyTextureToTexture=function(D,ne,oe,ce=0){const se=ne.image.width,Qe=ne.image.height,ft=_t.convert(oe.format),xt=_t.convert(oe.type);at.setTexture2D(oe,0),W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,oe.flipY),W.pixelStorei(W.UNPACK_PREMULTIPLY_ALPHA_WEBGL,oe.premultiplyAlpha),W.pixelStorei(W.UNPACK_ALIGNMENT,oe.unpackAlignment),ne.isDataTexture?W.texSubImage2D(W.TEXTURE_2D,ce,D.x,D.y,se,Qe,ft,xt,ne.image.data):ne.isCompressedTexture?W.compressedTexSubImage2D(W.TEXTURE_2D,ce,D.x,D.y,ne.mipmaps[0].width,ne.mipmaps[0].height,ft,ne.mipmaps[0].data):W.texSubImage2D(W.TEXTURE_2D,ce,D.x,D.y,ft,xt,ne.image),ce===0&&oe.generateMipmaps&&W.generateMipmap(W.TEXTURE_2D),Ae.unbindTexture()},this.copyTextureToTexture3D=function(D,ne,oe,ce,se=0){if(S.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Qe=Math.round(D.max.x-D.min.x),ft=Math.round(D.max.y-D.min.y),xt=D.max.z-D.min.z+1,St=_t.convert(ce.format),Vt=_t.convert(ce.type);let Dt;if(ce.isData3DTexture)at.setTexture3D(ce,0),Dt=W.TEXTURE_3D;else if(ce.isDataArrayTexture||ce.isCompressedArrayTexture)at.setTexture2DArray(ce,0),Dt=W.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}W.pixelStorei(W.UNPACK_FLIP_Y_WEBGL,ce.flipY),W.pixelStorei(W.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ce.premultiplyAlpha),W.pixelStorei(W.UNPACK_ALIGNMENT,ce.unpackAlignment);const Ot=W.getParameter(W.UNPACK_ROW_LENGTH),Yn=W.getParameter(W.UNPACK_IMAGE_HEIGHT),Tr=W.getParameter(W.UNPACK_SKIP_PIXELS),yi=W.getParameter(W.UNPACK_SKIP_ROWS),Za=W.getParameter(W.UNPACK_SKIP_IMAGES),Nn=oe.isCompressedTexture?oe.mipmaps[se]:oe.image;W.pixelStorei(W.UNPACK_ROW_LENGTH,Nn.width),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,Nn.height),W.pixelStorei(W.UNPACK_SKIP_PIXELS,D.min.x),W.pixelStorei(W.UNPACK_SKIP_ROWS,D.min.y),W.pixelStorei(W.UNPACK_SKIP_IMAGES,D.min.z),oe.isDataTexture||oe.isData3DTexture?W.texSubImage3D(Dt,se,ne.x,ne.y,ne.z,Qe,ft,xt,St,Vt,Nn.data):ce.isCompressedArrayTexture?W.compressedTexSubImage3D(Dt,se,ne.x,ne.y,ne.z,Qe,ft,xt,St,Nn.data):W.texSubImage3D(Dt,se,ne.x,ne.y,ne.z,Qe,ft,xt,St,Vt,Nn),W.pixelStorei(W.UNPACK_ROW_LENGTH,Ot),W.pixelStorei(W.UNPACK_IMAGE_HEIGHT,Yn),W.pixelStorei(W.UNPACK_SKIP_PIXELS,Tr),W.pixelStorei(W.UNPACK_SKIP_ROWS,yi),W.pixelStorei(W.UNPACK_SKIP_IMAGES,Za),se===0&&ce.generateMipmaps&&W.generateMipmap(Dt),Ae.unbindTexture()},this.initTexture=function(D){D.isCubeTexture?at.setTextureCube(D,0):D.isData3DTexture?at.setTexture3D(D,0):D.isDataArrayTexture||D.isCompressedArrayTexture?at.setTexture2DArray(D,0):at.setTexture2D(D,0),Ae.unbindTexture()},this.resetState=function(){V=0,F=0,O=null,Ae.reset(),lt.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Wt}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===xa?"display-p3":"srgb",t.unpackColorSpace=sn.workingColorSpace===Vs?"display-p3":"srgb"}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class L_ extends _m{}L_.prototype.isWebGL1Renderer=!0;class Yd{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new $e(e),this.density=t}clone(){return new Yd(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Zd{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new $e(e),this.near=t,this.far=n}clone(){return new Zd(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class vm extends fn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new vn,this.environmentRotation=new vn,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class xm{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=cc,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=Ei()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return Ll("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ei()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ei()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Ji=new B;class Ql{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Ji.fromBufferAttribute(this,t),Ji.applyMatrix4(e),this.setXYZ(t,Ji.x,Ji.y,Ji.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ji.fromBufferAttribute(this,t),Ji.applyNormalMatrix(e),this.setXYZ(t,Ji.x,Ji.y,Ji.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ji.fromBufferAttribute(this,t),Ji.transformDirection(e),this.setXYZ(t,Ji.x,Ji.y,Ji.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Zn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=yt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=yt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=yt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=yt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=yt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Zn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Zn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Zn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Zn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array),i=yt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=yt(t,this.array),n=yt(n,this.array),i=yt(i,this.array),r=yt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new xn(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ql(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class ym extends null{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new $e(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let eu;const nh=new B,tu=new B,nu=new B,iu=new ve,ih=new ve,bm=new st,Mf=new B,rh=new B,Sf=new B,Mm=new ve,Jd=new ve,Sm=new ve;class D_ extends null{constructor(e=new ym){if(super(),this.isSprite=!0,this.type="Sprite",eu===void 0){eu=new Pt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new xm(t,5);eu.setIndex([0,1,2,0,2,3]),eu.setAttribute("position",new Ql(n,3,0,!1)),eu.setAttribute("uv",new Ql(n,2,3,!1))}this.geometry=eu,this.material=e,this.center=new ve(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),tu.setFromMatrixScale(this.matrixWorld),bm.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),nu.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&tu.multiplyScalar(-nu.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;Ef(Mf.set(-.5,-.5,0),nu,a,tu,i,r),Ef(rh.set(.5,-.5,0),nu,a,tu,i,r),Ef(Sf.set(.5,.5,0),nu,a,tu,i,r),Mm.set(0,0),Jd.set(1,0),Sm.set(1,1);let o=e.ray.intersectTriangle(Mf,rh,Sf,!1,nh);if(o===null&&(Ef(rh.set(-.5,.5,0),nu,a,tu,i,r),Jd.set(0,1),o=e.ray.intersectTriangle(Mf,Sf,rh,!1,nh),o===null))return;const l=e.ray.origin.distanceTo(nh);l<e.near||l>e.far||t.push({distance:l,point:nh.clone(),uv:Ti.getInterpolation(nh,Mf,rh,Sf,Mm,Jd,Sm,new ve),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Ef(s,e,t,n,i,r){iu.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(ih.x=r*iu.x-i*iu.y,ih.y=i*iu.x+r*iu.y):ih.copy(iu),s.copy(e),s.x+=ih.x,s.y+=ih.y,s.applyMatrix4(bm)}const Af=new B,Em=new B;class U_ extends null{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Af.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Af);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Af.setFromMatrixPosition(e.matrixWorld),Em.setFromMatrixPosition(this.matrixWorld);const n=Af.distanceTo(Em)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),n>=a)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const Am=new B,Tm=new nn,wm=new nn,N_=new B,Rm=new st,Tf=new B,Kd=new ni,Cm=new st,jd=new Ca;class F_ extends null{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=fa,this.bindMatrix=new st,this.bindMatrixInverse=new st,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new ci),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Tf),this.boundingBox.expandByPoint(Tf)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new ni),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Tf),this.boundingSphere.expandByPoint(Tf)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Kd.copy(this.boundingSphere),Kd.applyMatrix4(i),e.ray.intersectsSphere(Kd)!==!1&&(Cm.copy(i).invert(),jd.copy(e.ray).applyMatrix4(Cm),!(this.boundingBox!==null&&jd.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,jd)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new nn,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===fa?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Ds?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;Tm.fromBufferAttribute(i.attributes.skinIndex,e),wm.fromBufferAttribute(i.attributes.skinWeight,e),Am.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const a=wm.getComponent(r);if(a!==0){const o=Tm.getComponent(r);Rm.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),t.addScaledVector(N_.copy(Am).applyMatrix4(Rm),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Pm extends null{constructor(){super(),this.isBone=!0,this.type="Bone"}}class $c extends null{constructor(e=null,t=1,n=1,i,r,a,o,l,h=En,d=En,p,m){super(null,a,o,l,h,d,i,r,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Im=new st,O_=new st;class Qd{constructor(e=[],t=[]){this.uuid=Ei(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new st)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new st;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,a=e.length;r<a;r++){const o=e[r]?e[r].matrixWorld:O_;Im.multiplyMatrices(o,t[r]),Im.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Qd(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new $c(t,e,e,gn,ei);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let a=t[r];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new Pm),this.bones.push(a),this.boneInverses.push(new st().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const a=t[i];e.bones.push(a.uuid);const o=n[i];e.boneInverses.push(o.toArray())}return e}}class sh extends null{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const ru=new st,Lm=new st,wf=null,Dm=new ci,B_=new st,ah=new Wn,oh=new ni;class z_ extends null{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new sh(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,B_)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new ci),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ru),Dm.copy(e.boundingBox).applyMatrix4(ru),this.boundingBox.union(Dm)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new ni),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ru),oh.copy(e.boundingSphere).applyMatrix4(ru),this.boundingSphere.union(oh)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,r=n.length+1,a=e*r+1;for(let o=0;o<n.length;o++)n[o]=i[a+o]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(ah.geometry=this.geometry,ah.material=this.material,ah.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),oh.copy(this.boundingSphere),oh.applyMatrix4(n),e.ray.intersectsSphere(oh)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,ru),Lm.multiplyMatrices(n,ru),ah.matrixWorld=Lm,ah.raycast(e,wf);for(let a=0,o=wf.length;a<o;a++){const l=wf[a];l.instanceId=r,l.object=this,t.push(l)}wf.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new sh(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new $c(new Float32Array(i*this.count),i,this.count,Zo,ei));const r=this.morphTexture.source.data.data;let a=0;for(let h=0;h<n.length;h++)a+=n[h];const o=this.geometry.morphTargetsRelative?1:1-a,l=i*e;r[l]=o,r.set(n,l+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}function k_(s,e){return s.z-e.z}function G_(s,e){return e.z-s.z}class V_{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t){const n=this.pool,i=this.list;this.index>=n.length&&n.push({start:-1,count:-1,z:-1});const r=n[this.index];i.push(r),this.index++,r.start=e.start,r.count=e.count,r.z=t}reset(){this.list.length=0,this.index=0}}const su="batchId",Uo=new st,Um=new st,H_=new st,Nm=new st,ep=new Y,Rf=new ci,qc=new ni,ch=new B,tp=new V_,Oi=new Wn,Cf=null;function W_(s,e,t=0){const n=e.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==e.array.constructor){const i=s.count;for(let r=0;r<i;r++)for(let a=0;a<n;a++)e.setComponent(r+t,a,s.getComponent(r,a))}else e.array.set(s.array,t*n);e.needsUpdate=!0}class X_ extends null{get maxGeometryCount(){return this._maxGeometryCount}constructor(e,t,n=t*2,i){super(new Pt,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawRanges=[],this._reservedRanges=[],this._visibility=[],this._active=[],this._bounds=[],this._maxGeometryCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._visibilityChanged=!0,this._matricesTexture=null,this._initMatricesTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxGeometryCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new $c(t,e,e,gn,ei);this._matricesTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxGeometryCount,r=this._maxIndexCount;if(this._geometryInitialized===!1){for(const o in e.attributes){const l=e.getAttribute(o),{array:h,itemSize:d,normalized:p}=l,m=new h.constructor(n*d),g=new l.constructor(m,d,p);g.setUsage(l.usage),t.setAttribute(o,g)}if(e.getIndex()!==null){const o=n>65536?new Uint32Array(r):new Uint16Array(r);t.setIndex(new xn(o,1))}const a=i>65536?new Uint32Array(n):new Uint16Array(n);t.setAttribute(su,new xn(a,1)),this._geometryInitialized=!0}}_validateGeometry(e){if(e.getAttribute(su))throw new Error(`BatchedMesh: Geometry cannot use attribute "${su}"`);const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(n===su)continue;if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),r=t.getAttribute(n);if(i.itemSize!==r.itemSize||i.normalized!==r.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ci);const e=this._geometryCount,t=this.boundingBox,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,Uo),this.getBoundingBoxAt(i,Rf).applyMatrix4(Uo),t.union(Rf))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ni);const e=this._geometryCount,t=this.boundingSphere,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,Uo),this.getBoundingSphereAt(i,qc).applyMatrix4(Uo),t.union(qc))}addGeometry(e,t=-1,n=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._geometryCount>=this._maxGeometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");const i={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let r=null;const a=this._reservedRanges,o=this._drawRanges,l=this._bounds;this._geometryCount!==0&&(r=a[a.length-1]),t===-1?i.vertexCount=e.getAttribute("position").count:i.vertexCount=t,r===null?i.vertexStart=0:i.vertexStart=r.vertexStart+r.vertexCount;const h=e.getIndex(),d=h!==null;if(d&&(n===-1?i.indexCount=h.count:i.indexCount=n,r===null?i.indexStart=0:i.indexStart=r.indexStart+r.indexCount),i.indexStart!==-1&&i.indexStart+i.indexCount>this._maxIndexCount||i.vertexStart+i.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const p=this._visibility,m=this._active,g=this._matricesTexture,x=this._matricesTexture.image.data;p.push(!0),m.push(!0);const A=this._geometryCount;this._geometryCount++,H_.toArray(x,A*16),g.needsUpdate=!0,a.push(i),o.push({start:d?i.indexStart:i.vertexStart,count:-1}),l.push({boxInitialized:!1,box:new ci,sphereInitialized:!1,sphere:new ni});const y=this.geometry.getAttribute(su);for(let _=0;_<i.vertexCount;_++)y.setX(i.vertexStart+_,A);return y.needsUpdate=!0,this.setGeometryAt(A,e),A}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,r=n.getIndex(),a=t.getIndex(),o=this._reservedRanges[e];if(i&&a.count>o.indexCount||t.attributes.position.count>o.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const l=o.vertexStart,h=o.vertexCount;for(const g in n.attributes){if(g===su)continue;const x=t.getAttribute(g),A=n.getAttribute(g);W_(x,A,l);const y=x.itemSize;for(let _=x.count,T=h;_<T;_++){const S=l+_;for(let P=0;P<y;P++)A.setComponent(S,P,0)}A.needsUpdate=!0}if(i){const g=o.indexStart;for(let x=0;x<a.count;x++)r.setX(g+x,l+a.getX(x));for(let x=a.count,A=o.indexCount;x<A;x++)r.setX(g+x,l);r.needsUpdate=!0}const d=this._bounds[e];t.boundingBox!==null?(d.box.copy(t.boundingBox),d.boxInitialized=!0):d.boxInitialized=!1,t.boundingSphere!==null?(d.sphere.copy(t.boundingSphere),d.sphereInitialized=!0):d.sphereInitialized=!1;const p=this._drawRanges[e],m=t.getAttribute("position");return p.count=i?a.count:m.count,this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._active;return e>=t.length||t[e]===!1?this:(t[e]=!1,this._visibilityChanged=!0,this)}getBoundingBoxAt(e,t){if(this._active[e]===!1)return null;const i=this._bounds[e],r=i.box,a=this.geometry;if(i.boxInitialized===!1){r.makeEmpty();const o=a.index,l=a.attributes.position,h=this._drawRanges[e];for(let d=h.start,p=h.start+h.count;d<p;d++){let m=d;o&&(m=o.getX(m)),r.expandByPoint(ch.fromBufferAttribute(l,m))}i.boxInitialized=!0}return t.copy(r),t}getBoundingSphereAt(e,t){if(this._active[e]===!1)return null;const i=this._bounds[e],r=i.sphere,a=this.geometry;if(i.sphereInitialized===!1){r.makeEmpty(),this.getBoundingBoxAt(e,Rf),Rf.getCenter(r.center);const o=a.index,l=a.attributes.position,h=this._drawRanges[e];let d=0;for(let p=h.start,m=h.start+h.count;p<m;p++){let g=p;o&&(g=o.getX(g)),ch.fromBufferAttribute(l,g),d=Math.max(d,r.center.distanceToSquared(ch))}r.radius=Math.sqrt(d),i.sphereInitialized=!0}return t.copy(r),t}setMatrixAt(e,t){const n=this._active,i=this._matricesTexture,r=this._matricesTexture.image.data,a=this._geometryCount;return e>=a||n[e]===!1?this:(t.toArray(r,e*16),i.needsUpdate=!0,this)}getMatrixAt(e,t){const n=this._active,i=this._matricesTexture.image.data,r=this._geometryCount;return e>=r||n[e]===!1?null:t.fromArray(i,e*16)}setVisibleAt(e,t){const n=this._visibility,i=this._active,r=this._geometryCount;return e>=r||i[e]===!1||n[e]===t?this:(n[e]=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._visibility,n=this._active,i=this._geometryCount;return e>=i||n[e]===!1?!1:t[e]}raycast(e,t){const n=this._visibility,i=this._active,r=this._drawRanges,a=this._geometryCount,o=this.matrixWorld,l=this.geometry;Oi.material=this.material,Oi.geometry.index=l.index,Oi.geometry.attributes=l.attributes,Oi.geometry.boundingBox===null&&(Oi.geometry.boundingBox=new ci),Oi.geometry.boundingSphere===null&&(Oi.geometry.boundingSphere=new ni);for(let h=0;h<a;h++){if(!n[h]||!i[h])continue;const d=r[h];Oi.geometry.setDrawRange(d.start,d.count),this.getMatrixAt(h,Oi.matrixWorld).premultiply(o),this.getBoundingBoxAt(h,Oi.geometry.boundingBox),this.getBoundingSphereAt(h,Oi.geometry.boundingSphere),Oi.raycast(e,Cf);for(let p=0,m=Cf.length;p<m;p++){const g=Cf[p];g.object=this,g.batchId=h,t.push(g)}Cf.length=0}Oi.material=null,Oi.geometry.index=null,Oi.geometry.attributes={},Oi.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(t=>uu({},t)),this._reservedRanges=e._reservedRanges.map(t=>uu({},t)),this._visibility=e._visibility.slice(),this._active=e._active.slice(),this._bounds=e._bounds.map(t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()})),this._maxGeometryCount=e._maxGeometryCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.slice(),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this}onBeforeRender(e,t,n,i,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const a=i.getIndex(),o=a===null?1:a.array.BYTES_PER_ELEMENT,l=this._active,h=this._visibility,d=this._multiDrawStarts,p=this._multiDrawCounts,m=this._drawRanges,g=this.perObjectFrustumCulled;g&&(Nm.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),ep.setFromProjectionMatrix(Nm,e.coordinateSystem));let x=0;if(this.sortObjects){Um.copy(this.matrixWorld).invert(),ch.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Um);for(let _=0,T=h.length;_<T;_++)if(h[_]&&l[_]){this.getMatrixAt(_,Uo),this.getBoundingSphereAt(_,qc).applyMatrix4(Uo);let S=!1;if(g&&(S=!ep.intersectsSphere(qc)),!S){const P=ch.distanceTo(qc.center);tp.push(m[_],P)}}const A=tp.list,y=this.customSort;y===null?A.sort(r.transparent?G_:k_):y.call(this,A,n);for(let _=0,T=A.length;_<T;_++){const S=A[_];d[x]=S.start*o,p[x]=S.count,x++}tp.reset()}else for(let A=0,y=h.length;A<y;A++)if(h[A]&&l[A]){let _=!1;if(g&&(this.getMatrixAt(A,Uo),this.getBoundingSphereAt(A,qc).applyMatrix4(Uo),_=!ep.intersectsSphere(qc)),!_){const T=m[A];d[x]=T.start*o,p[x]=T.count,x++}}this._multiDrawCount=x,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,r,a){this.onBeforeRender(e,null,i,r,a)}}class Ar extends null{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new $e(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Fm=new B,Om=new B,Bm=new st,np=new Ca,Pf=new ni;class If extends null{constructor(e=new Pt,t=new Ar){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)Fm.fromBufferAttribute(t,i-1),Om.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Fm.distanceTo(Om);e.setAttribute("lineDistance",new Ke(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Pf.copy(n.boundingSphere),Pf.applyMatrix4(i),Pf.radius+=r,e.ray.intersectsSphere(Pf)===!1)return;Bm.copy(i).invert(),np.copy(e.ray).applyMatrix4(Bm);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,h=new B,d=new B,p=new B,m=new B,g=this.isLineSegments?2:1,x=n.index,y=n.attributes.position;if(x!==null){const _=Math.max(0,a.start),T=Math.min(x.count,a.start+a.count);for(let S=_,P=T-1;S<P;S+=g){const V=x.getX(S),F=x.getX(S+1);if(h.fromBufferAttribute(y,V),d.fromBufferAttribute(y,F),np.distanceSqToSegment(h,d,m,p)>l)continue;m.applyMatrix4(this.matrixWorld);const q=e.ray.origin.distanceTo(m);q<e.near||q>e.far||t.push({distance:q,point:p.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,a.start),T=Math.min(y.count,a.start+a.count);for(let S=_,P=T-1;S<P;S+=g){if(h.fromBufferAttribute(y,S),d.fromBufferAttribute(y,S+1),np.distanceSqToSegment(h,d,m,p)>l)continue;m.applyMatrix4(this.matrixWorld);const F=e.ray.origin.distanceTo(m);F<e.near||F>e.far||t.push({distance:F,point:p.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}const zm=new B,km=new B;class Gm extends null{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)zm.fromBufferAttribute(t,i),km.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+zm.distanceTo(km);e.setAttribute("lineDistance",new Ke(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class $_ extends null{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Vm extends null{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new $e(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Hm=new st,ip=new Ca,Lf=new ni,Df=new B;class q_ extends null{constructor(e=new Pt,t=new Vm){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Lf.copy(n.boundingSphere),Lf.applyMatrix4(i),Lf.radius+=r,e.ray.intersectsSphere(Lf)===!1)return;Hm.copy(i).invert(),ip.copy(e.ray).applyMatrix4(Hm);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,a.start),g=Math.min(h.count,a.start+a.count);for(let x=m,A=g;x<A;x++){const y=h.getX(x);Df.fromBufferAttribute(p,y),Wm(Df,y,l,i,e,t,this)}}else{const m=Math.max(0,a.start),g=Math.min(p.count,a.start+a.count);for(let x=m,A=g;x<A;x++)Df.fromBufferAttribute(p,x),Wm(Df,x,l,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function Wm(s,e,t,n,i,r,a){const o=ip.distanceSqToPoint(s);if(o<t){const l=new B;ip.closestPointToPoint(s,l),l.applyMatrix4(n);const h=i.ray.origin.distanceTo(l);if(h<i.near||h>i.far)return;r.push({distance:h,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:a})}}class Fx extends null{constructor(e,t,n,i,r,a,o,l,h){super(e,t,n,i,r,a,o,l,h),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:mn,this.magFilter=r!==void 0?r:mn,this.generateMipmaps=!1;const d=this;function p(){d.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Ox extends null{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=En,this.minFilter=En,this.generateMipmaps=!1,this.needsUpdate=!0}}class Y_ extends null{constructor(e,t,n,i,r,a,o,l,h,d,p,m){super(null,a,o,l,h,d,i,r,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class Bx extends null{constructor(e,t,n,i,r,a){super(e,t,n,r,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Qn}}class zx extends null{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,ki),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class kx extends null{constructor(e,t,n,i,r,a,o,l,h){super(e,t,n,i,r,a,o,l,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class ca{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let a;t?a=t:a=e*n[r-1];let o=0,l=r-1,h;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),h=n[i]-a,h<0)o=i+1;else if(h>0)l=i-1;else{l=i;break}if(i=l,n[i]===a)return i/(r-1);const d=n[i],m=n[i+1]-d,g=(a-d)/m;return(i+g)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),o=this.getPoint(r),l=t||(a.isVector2?new ve:new B);return l.copy(o).sub(a).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new B,i=[],r=[],a=[],o=new B,l=new st;for(let g=0;g<=e;g++){const x=g/e;i[g]=this.getTangentAt(x,new B)}r[0]=new B,a[0]=new B;let h=Number.MAX_VALUE;const d=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);d<=h&&(h=d,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),a[0].crossVectors(i[0],r[0]);for(let g=1;g<=e;g++){if(r[g]=r[g-1].clone(),a[g]=a[g-1].clone(),o.crossVectors(i[g-1],i[g]),o.length()>Number.EPSILON){o.normalize();const x=Math.acos(en(i[g-1].dot(i[g]),-1,1));r[g].applyMatrix4(l.makeRotationAxis(o,x))}a[g].crossVectors(i[g],r[g])}if(t===!0){let g=Math.acos(en(r[0].dot(r[e]),-1,1));g/=e,i[0].dot(o.crossVectors(r[0],r[e]))>0&&(g=-g);for(let x=1;x<=e;x++)r[x].applyMatrix4(l.makeRotationAxis(i[x],g*x)),a[x].crossVectors(i[x],r[x])}return{tangents:i,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class rp extends ca{constructor(e=0,t=0,n=1,i=1,r=0,a=Math.PI*2,o=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(e,t=new ve){const n=t,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(a?r=0:r=i),this.aClockwise===!0&&!a&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+e*r;let l=this.aX+this.xRadius*Math.cos(o),h=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const d=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=l-this.aX,g=h-this.aY;l=m*d-g*p+this.aX,h=m*p+g*d+this.aY}return n.set(l,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Z_ extends rp{constructor(e,t,n,i,r,a){super(e,t,n,n,i,r,a),this.isArcCurve=!0,this.type="ArcCurve"}}function sp(){let s=0,e=0,t=0,n=0;function i(r,a,o,l){s=r,e=o,t=-3*r+3*a-2*o-l,n=2*r-2*a+o+l}return{initCatmullRom:function(r,a,o,l,h){i(a,o,h*(o-r),h*(l-a))},initNonuniformCatmullRom:function(r,a,o,l,h,d,p){let m=(a-r)/h-(o-r)/(h+d)+(o-a)/d,g=(o-a)/d-(l-a)/(d+p)+(l-o)/p;m*=d,g*=d,i(a,o,m,g)},calc:function(r){const a=r*r,o=a*r;return s+e*r+t*a+n*o}}}const Uf=new B,ap=new sp,op=new sp,cp=new sp;class J_ extends ca{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new B){const n=t,i=this.points,r=i.length,a=(r-(this.closed?0:1))*e;let o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:l===0&&o===r-1&&(o=r-2,l=1);let h,d;this.closed||o>0?h=i[(o-1)%r]:(Uf.subVectors(i[0],i[1]).add(i[0]),h=Uf);const p=i[o%r],m=i[(o+1)%r];if(this.closed||o+2<r?d=i[(o+2)%r]:(Uf.subVectors(i[r-1],i[r-2]).add(i[r-1]),d=Uf),this.curveType==="centripetal"||this.curveType==="chordal"){const g=this.curveType==="chordal"?.5:.25;let x=Math.pow(h.distanceToSquared(p),g),A=Math.pow(p.distanceToSquared(m),g),y=Math.pow(m.distanceToSquared(d),g);A<1e-4&&(A=1),x<1e-4&&(x=A),y<1e-4&&(y=A),ap.initNonuniformCatmullRom(h.x,p.x,m.x,d.x,x,A,y),op.initNonuniformCatmullRom(h.y,p.y,m.y,d.y,x,A,y),cp.initNonuniformCatmullRom(h.z,p.z,m.z,d.z,x,A,y)}else this.curveType==="catmullrom"&&(ap.initCatmullRom(h.x,p.x,m.x,d.x,this.tension),op.initCatmullRom(h.y,p.y,m.y,d.y,this.tension),cp.initCatmullRom(h.z,p.z,m.z,d.z,this.tension));return n.set(ap.calc(l),op.calc(l),cp.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new B().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Xm(s,e,t,n,i){const r=(n-e)*.5,a=(i-t)*.5,o=s*s,l=s*o;return(2*t-2*n+r+a)*l+(-3*t+3*n-2*r-a)*o+r*s+t}function K_(s,e){const t=1-s;return t*t*e}function j_(s,e){return 2*(1-s)*s*e}function Q_(s,e){return s*s*e}function lh(s,e,t,n){return K_(s,e)+j_(s,t)+Q_(s,n)}function ev(s,e){const t=1-s;return t*t*t*e}function tv(s,e){const t=1-s;return 3*t*t*s*e}function nv(s,e){return 3*(1-s)*s*s*e}function iv(s,e){return s*s*s*e}function uh(s,e,t,n,i){return ev(s,e)+tv(s,t)+nv(s,n)+iv(s,i)}class $m extends ca{constructor(e=new ve,t=new ve,n=new ve,i=new ve){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ve){const n=t,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(uh(e,i.x,r.x,a.x,o.x),uh(e,i.y,r.y,a.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class rv extends ca{constructor(e=new B,t=new B,n=new B,i=new B){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new B){const n=t,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(uh(e,i.x,r.x,a.x,o.x),uh(e,i.y,r.y,a.y,o.y),uh(e,i.z,r.z,a.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class qm extends ca{constructor(e=new ve,t=new ve){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ve){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ve){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class sv extends ca{constructor(e=new B,t=new B){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new B){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new B){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ym extends ca{constructor(e=new ve,t=new ve,n=new ve){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ve){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(lh(e,i.x,r.x,a.x),lh(e,i.y,r.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Zm extends ca{constructor(e=new B,t=new B,n=new B){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new B){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(lh(e,i.x,r.x,a.x),lh(e,i.y,r.y,a.y),lh(e,i.z,r.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Jm extends ca{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ve){const n=t,i=this.points,r=(i.length-1)*e,a=Math.floor(r),o=r-a,l=i[a===0?a:a-1],h=i[a],d=i[a>i.length-2?i.length-1:a+1],p=i[a>i.length-3?i.length-1:a+2];return n.set(Xm(o,l.x,h.x,d.x,p.x),Xm(o,l.y,h.y,d.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ve().fromArray(i))}return this}}var Nf=Object.freeze({__proto__:null,ArcCurve:Z_,CatmullRomCurve3:J_,CubicBezierCurve:$m,CubicBezierCurve3:rv,EllipseCurve:rp,LineCurve:qm,LineCurve3:sv,QuadraticBezierCurve:Ym,QuadraticBezierCurve3:Zm,SplineCurve:Jm});class av extends ca{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Nf[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const a=i[r]-n,o=this.curves[r],l=o.getLength(),h=l===0?0:1-a/l;return o.getPointAt(h,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],o=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,l=a.getPoints(o);for(let h=0;h<l.length;h++){const d=l[h];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Nf[i.type]().fromJSON(i))}return this}}class Ff extends av{constructor(e){super(),this.type="Path",this.currentPoint=new ve,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new qm(this.currentPoint.clone(),new ve(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new Ym(this.currentPoint.clone(),new ve(e,t),new ve(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,a){const o=new $m(this.currentPoint.clone(),new ve(e,t),new ve(n,i),new ve(r,a));return this.curves.push(o),this.currentPoint.set(r,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Jm(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,t+l,n,i,r,a),this}absarc(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}ellipse(e,t,n,i,r,a,o,l){const h=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+h,t+d,n,i,r,a,o,l),this}absellipse(e,t,n,i,r,a,o,l){const h=new rp(e,t,n,i,r,a,o,l);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const d=h.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Of extends Pt{constructor(e=[new ve(0,-.5),new ve(.5,0),new ve(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=en(i,0,Math.PI*2);const r=[],a=[],o=[],l=[],h=[],d=1/t,p=new B,m=new ve,g=new B,x=new B,A=new B;let y=0,_=0;for(let T=0;T<=e.length-1;T++)switch(T){case 0:y=e[T+1].x-e[T].x,_=e[T+1].y-e[T].y,g.x=_*1,g.y=-y,g.z=_*0,A.copy(g),g.normalize(),l.push(g.x,g.y,g.z);break;case e.length-1:l.push(A.x,A.y,A.z);break;default:y=e[T+1].x-e[T].x,_=e[T+1].y-e[T].y,g.x=_*1,g.y=-y,g.z=_*0,x.copy(g),g.x+=A.x,g.y+=A.y,g.z+=A.z,g.normalize(),l.push(g.x,g.y,g.z),A.copy(x)}for(let T=0;T<=t;T++){const S=n+T*d*i,P=Math.sin(S),V=Math.cos(S);for(let F=0;F<=e.length-1;F++){p.x=e[F].x*P,p.y=e[F].y,p.z=e[F].x*V,a.push(p.x,p.y,p.z),m.x=T/t,m.y=F/(e.length-1),o.push(m.x,m.y);const O=l[3*F+0]*P,q=l[3*F+1],ie=l[3*F+0]*V;h.push(O,q,ie)}}for(let T=0;T<t;T++)for(let S=0;S<e.length-1;S++){const P=S+T*e.length,V=P,F=P+e.length,O=P+e.length+1,q=P+1;r.push(V,F,q),r.push(O,q,F)}this.setIndex(r),this.setAttribute("position",new Ke(a,3)),this.setAttribute("uv",new Ke(o,2)),this.setAttribute("normal",new Ke(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Of(e.points,e.segments,e.phiStart,e.phiLength)}}class lp extends Of{constructor(e=1,t=1,n=4,i=8){const r=new Ff;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new lp(e.radius,e.length,e.capSegments,e.radialSegments)}}class up extends Pt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],a=[],o=[],l=[],h=new B,d=new ve;a.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const g=n+p/t*i;h.x=e*Math.cos(g),h.y=e*Math.sin(g),a.push(h.x,h.y,h.z),o.push(0,0,1),d.x=(a[m]/e+1)/2,d.y=(a[m+1]/e+1)/2,l.push(d.x,d.y)}for(let p=1;p<=t;p++)r.push(p,p+1,0);this.setIndex(r),this.setAttribute("position",new Ke(a,3)),this.setAttribute("normal",new Ke(o,3)),this.setAttribute("uv",new Ke(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new up(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class hh extends Pt{constructor(e=1,t=1,n=1,i=32,r=1,a=!1,o=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:l};const h=this;i=Math.floor(i),r=Math.floor(r);const d=[],p=[],m=[],g=[];let x=0;const A=[],y=n/2;let _=0;T(),a===!1&&(e>0&&S(!0),t>0&&S(!1)),this.setIndex(d),this.setAttribute("position",new Ke(p,3)),this.setAttribute("normal",new Ke(m,3)),this.setAttribute("uv",new Ke(g,2));function T(){const P=new B,V=new B;let F=0;const O=(t-e)/n;for(let q=0;q<=r;q++){const ie=[],C=q/r,k=C*(t-e)+e;for(let Me=0;Me<=i;Me++){const Se=Me/i,Z=Se*l+o,me=Math.sin(Z),le=Math.cos(Z);V.x=k*me,V.y=-C*n+y,V.z=k*le,p.push(V.x,V.y,V.z),P.set(me,O,le).normalize(),m.push(P.x,P.y,P.z),g.push(Se,1-C),ie.push(x++)}A.push(ie)}for(let q=0;q<i;q++)for(let ie=0;ie<r;ie++){const C=A[ie][q],k=A[ie+1][q],Me=A[ie+1][q+1],Se=A[ie][q+1];d.push(C,k,Se),d.push(k,Me,Se),F+=6}h.addGroup(_,F,0),_+=F}function S(P){const V=x,F=new ve,O=new B;let q=0;const ie=P===!0?e:t,C=P===!0?1:-1;for(let Me=1;Me<=i;Me++)p.push(0,y*C,0),m.push(0,C,0),g.push(.5,.5),x++;const k=x;for(let Me=0;Me<=i;Me++){const Z=Me/i*l+o,me=Math.cos(Z),le=Math.sin(Z);O.x=ie*le,O.y=y*C,O.z=ie*me,p.push(O.x,O.y,O.z),m.push(0,C,0),F.x=me*.5+.5,F.y=le*.5*C+.5,g.push(F.x,F.y),x++}for(let Me=0;Me<i;Me++){const Se=V+Me,Z=k+Me;P===!0?d.push(Z,Z+1,Se):d.push(Z+1,Z,Se),q+=3}h.addGroup(_,q,P===!0?1:2),_+=q}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new hh(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class hp extends hh{constructor(e=1,t=1,n=32,i=1,r=!1,a=0,o=Math.PI*2){super(0,e,t,n,i,r,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:o}}static fromJSON(e){return new hp(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Yc extends Pt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],a=[];o(i),h(n),d(),this.setAttribute("position",new Ke(r,3)),this.setAttribute("normal",new Ke(r.slice(),3)),this.setAttribute("uv",new Ke(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function o(T){const S=new B,P=new B,V=new B;for(let F=0;F<t.length;F+=3)g(t[F+0],S),g(t[F+1],P),g(t[F+2],V),l(S,P,V,T)}function l(T,S,P,V){const F=V+1,O=[];for(let q=0;q<=F;q++){O[q]=[];const ie=T.clone().lerp(P,q/F),C=S.clone().lerp(P,q/F),k=F-q;for(let Me=0;Me<=k;Me++)Me===0&&q===F?O[q][Me]=ie:O[q][Me]=ie.clone().lerp(C,Me/k)}for(let q=0;q<F;q++)for(let ie=0;ie<2*(F-q)-1;ie++){const C=Math.floor(ie/2);ie%2===0?(m(O[q][C+1]),m(O[q+1][C]),m(O[q][C])):(m(O[q][C+1]),m(O[q+1][C+1]),m(O[q+1][C]))}}function h(T){const S=new B;for(let P=0;P<r.length;P+=3)S.x=r[P+0],S.y=r[P+1],S.z=r[P+2],S.normalize().multiplyScalar(T),r[P+0]=S.x,r[P+1]=S.y,r[P+2]=S.z}function d(){const T=new B;for(let S=0;S<r.length;S+=3){T.x=r[S+0],T.y=r[S+1],T.z=r[S+2];const P=y(T)/2/Math.PI+.5,V=_(T)/Math.PI+.5;a.push(P,1-V)}x(),p()}function p(){for(let T=0;T<a.length;T+=6){const S=a[T+0],P=a[T+2],V=a[T+4],F=Math.max(S,P,V),O=Math.min(S,P,V);F>.9&&O<.1&&(S<.2&&(a[T+0]+=1),P<.2&&(a[T+2]+=1),V<.2&&(a[T+4]+=1))}}function m(T){r.push(T.x,T.y,T.z)}function g(T,S){const P=T*3;S.x=e[P+0],S.y=e[P+1],S.z=e[P+2]}function x(){const T=new B,S=new B,P=new B,V=new B,F=new ve,O=new ve,q=new ve;for(let ie=0,C=0;ie<r.length;ie+=9,C+=6){T.set(r[ie+0],r[ie+1],r[ie+2]),S.set(r[ie+3],r[ie+4],r[ie+5]),P.set(r[ie+6],r[ie+7],r[ie+8]),F.set(a[C+0],a[C+1]),O.set(a[C+2],a[C+3]),q.set(a[C+4],a[C+5]),V.copy(T).add(S).add(P).divideScalar(3);const k=y(V);A(F,C+0,T,k),A(O,C+2,S,k),A(q,C+4,P,k)}}function A(T,S,P,V){V<0&&T.x===1&&(a[S]=T.x-1),P.x===0&&P.z===0&&(a[S]=V/2/Math.PI+.5)}function y(T){return Math.atan2(T.z,-T.x)}function _(T){return Math.atan2(-T.y,Math.sqrt(T.x*T.x+T.z*T.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Yc(e.vertices,e.indices,e.radius,e.details)}}class fp extends Yc{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new fp(e.radius,e.detail)}}const Bf=new B,zf=new B,dp=new B,kf=new Ti;class ov extends Pt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(oi*t),a=e.getIndex(),o=e.getAttribute("position"),l=a?a.count:o.count,h=[0,0,0],d=["a","b","c"],p=new Array(3),m={},g=[];for(let x=0;x<l;x+=3){a?(h[0]=a.getX(x),h[1]=a.getX(x+1),h[2]=a.getX(x+2)):(h[0]=x,h[1]=x+1,h[2]=x+2);const{a:A,b:y,c:_}=kf;if(A.fromBufferAttribute(o,h[0]),y.fromBufferAttribute(o,h[1]),_.fromBufferAttribute(o,h[2]),kf.getNormal(dp),p[0]=`${Math.round(A.x*i)},${Math.round(A.y*i)},${Math.round(A.z*i)}`,p[1]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,p[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let T=0;T<3;T++){const S=(T+1)%3,P=p[T],V=p[S],F=kf[d[T]],O=kf[d[S]],q=`${P}_${V}`,ie=`${V}_${P}`;ie in m&&m[ie]?(dp.dot(m[ie].normal)<=r&&(g.push(F.x,F.y,F.z),g.push(O.x,O.y,O.z)),m[ie]=null):q in m||(m[q]={index0:h[T],index1:h[S],normal:dp.clone()})}}for(const x in m)if(m[x]){const{index0:A,index1:y}=m[x];Bf.fromBufferAttribute(o,A),zf.fromBufferAttribute(o,y),g.push(Bf.x,Bf.y,Bf.z),g.push(zf.x,zf.y,zf.z)}this.setAttribute("position",new Ke(g,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class au extends Ff{constructor(e){super(e),this.uuid=Ei(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Ff().fromJSON(i))}return this}}const cv={triangulate:function(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=Km(s,0,i,t,!0);const a=[];if(!r||r.next===r.prev)return a;let o,l,h,d,p,m,g;if(n&&(r=dv(s,e,r,t)),s.length>80*t){o=h=s[0],l=d=s[1];for(let x=t;x<i;x+=t)p=s[x],m=s[x+1],p<o&&(o=p),m<l&&(l=m),p>h&&(h=p),m>d&&(d=m);g=Math.max(h-o,d-l),g=g!==0?32767/g:0}return fh(r,a,t,o,l,g,0),a}};function Km(s,e,t,n,i){let r,a;if(i===Ev(s,e,t,n)>0)for(r=e;r<t;r+=n)a=e0(r,s[r],s[r+1],a);else for(r=t-n;r>=e;r-=n)a=e0(r,s[r],s[r+1],a);return a&&Gf(a,a.next)&&(ph(a),a=a.next),a}function Zc(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(Gf(t,t.next)||Un(t.prev,t,t.next)===0)){if(ph(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function fh(s,e,t,n,i,r,a){if(!s)return;!a&&r&&vv(s,n,i,r);let o=s,l,h;for(;s.prev!==s.next;){if(l=s.prev,h=s.next,r?uv(s,n,i,r):lv(s)){e.push(l.i/t|0),e.push(s.i/t|0),e.push(h.i/t|0),ph(s),s=h.next,o=h.next;continue}if(s=h,s===o){a?a===1?(s=hv(Zc(s),e,t),fh(s,e,t,n,i,r,2)):a===2&&fv(s,e,t,n,i,r):fh(Zc(s),e,t,n,i,r,1);break}}}function lv(s){const e=s.prev,t=s,n=s.next;if(Un(e,t,n)>=0)return!1;const i=e.x,r=t.x,a=n.x,o=e.y,l=t.y,h=n.y,d=i<r?i<a?i:a:r<a?r:a,p=o<l?o<h?o:h:l<h?l:h,m=i>r?i>a?i:a:r>a?r:a,g=o>l?o>h?o:h:l>h?l:h;let x=n.next;for(;x!==e;){if(x.x>=d&&x.x<=m&&x.y>=p&&x.y<=g&&ou(i,o,r,l,a,h,x.x,x.y)&&Un(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function uv(s,e,t,n){const i=s.prev,r=s,a=s.next;if(Un(i,r,a)>=0)return!1;const o=i.x,l=r.x,h=a.x,d=i.y,p=r.y,m=a.y,g=o<l?o<h?o:h:l<h?l:h,x=d<p?d<m?d:m:p<m?p:m,A=o>l?o>h?o:h:l>h?l:h,y=d>p?d>m?d:m:p>m?p:m,_=pp(g,x,e,t,n),T=pp(A,y,e,t,n);let S=s.prevZ,P=s.nextZ;for(;S&&S.z>=_&&P&&P.z<=T;){if(S.x>=g&&S.x<=A&&S.y>=x&&S.y<=y&&S!==i&&S!==a&&ou(o,d,l,p,h,m,S.x,S.y)&&Un(S.prev,S,S.next)>=0||(S=S.prevZ,P.x>=g&&P.x<=A&&P.y>=x&&P.y<=y&&P!==i&&P!==a&&ou(o,d,l,p,h,m,P.x,P.y)&&Un(P.prev,P,P.next)>=0))return!1;P=P.nextZ}for(;S&&S.z>=_;){if(S.x>=g&&S.x<=A&&S.y>=x&&S.y<=y&&S!==i&&S!==a&&ou(o,d,l,p,h,m,S.x,S.y)&&Un(S.prev,S,S.next)>=0)return!1;S=S.prevZ}for(;P&&P.z<=T;){if(P.x>=g&&P.x<=A&&P.y>=x&&P.y<=y&&P!==i&&P!==a&&ou(o,d,l,p,h,m,P.x,P.y)&&Un(P.prev,P,P.next)>=0)return!1;P=P.nextZ}return!0}function hv(s,e,t){let n=s;do{const i=n.prev,r=n.next.next;!Gf(i,r)&&jm(i,n,n.next,r)&&dh(i,r)&&dh(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),ph(n),ph(n.next),n=s=r),n=n.next}while(n!==s);return Zc(n)}function fv(s,e,t,n,i,r){let a=s;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&bv(a,o)){let l=Qm(a,o);a=Zc(a,a.next),l=Zc(l,l.next),fh(a,e,t,n,i,r,0),fh(l,e,t,n,i,r,0);return}o=o.next}a=a.next}while(a!==s)}function dv(s,e,t,n){const i=[];let r,a,o,l,h;for(r=0,a=e.length;r<a;r++)o=e[r]*n,l=r<a-1?e[r+1]*n:s.length,h=Km(s,o,l,n,!1),h===h.next&&(h.steiner=!0),i.push(yv(h));for(i.sort(pv),r=0;r<i.length;r++)t=mv(i[r],t);return t}function pv(s,e){return s.x-e.x}function mv(s,e){const t=gv(s,e);if(!t)return e;const n=Qm(t,s);return Zc(n,n.next),Zc(t,t.next)}function gv(s,e){let t=e,n=-1/0,i;const r=s.x,a=s.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const m=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=r&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===r))return i}t=t.next}while(t!==e);if(!i)return null;const o=i,l=i.x,h=i.y;let d=1/0,p;t=i;do r>=t.x&&t.x>=l&&r!==t.x&&ou(a<h?r:n,a,l,h,a<h?n:r,a,t.x,t.y)&&(p=Math.abs(a-t.y)/(r-t.x),dh(t,s)&&(p<d||p===d&&(t.x>i.x||t.x===i.x&&_v(i,t)))&&(i=t,d=p)),t=t.next;while(t!==o);return i}function _v(s,e){return Un(s.prev,s,e.prev)<0&&Un(e.next,s,s.next)<0}function vv(s,e,t,n){let i=s;do i.z===0&&(i.z=pp(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,xv(i)}function xv(s){let e,t,n,i,r,a,o,l,h=1;do{for(t=s,s=null,r=null,a=0;t;){for(a++,n=t,o=0,e=0;e<h&&(o++,n=n.nextZ,!!n);e++);for(l=h;o>0||l>0&&n;)o!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,o--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,h*=2}while(a>1);return s}function pp(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function yv(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function ou(s,e,t,n,i,r,a,o){return(i-a)*(e-o)>=(s-a)*(r-o)&&(s-a)*(n-o)>=(t-a)*(e-o)&&(t-a)*(r-o)>=(i-a)*(n-o)}function bv(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!Mv(s,e)&&(dh(s,e)&&dh(e,s)&&Sv(s,e)&&(Un(s.prev,s,e.prev)||Un(s,e.prev,e))||Gf(s,e)&&Un(s.prev,s,s.next)>0&&Un(e.prev,e,e.next)>0)}function Un(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Gf(s,e){return s.x===e.x&&s.y===e.y}function jm(s,e,t,n){const i=Hf(Un(s,e,t)),r=Hf(Un(s,e,n)),a=Hf(Un(t,n,s)),o=Hf(Un(t,n,e));return!!(i!==r&&a!==o||i===0&&Vf(s,t,e)||r===0&&Vf(s,n,e)||a===0&&Vf(t,s,n)||o===0&&Vf(t,e,n))}function Vf(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function Hf(s){return s>0?1:s<0?-1:0}function Mv(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&jm(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function dh(s,e){return Un(s.prev,s,s.next)<0?Un(s,e,s.next)>=0&&Un(s,s.prev,e)>=0:Un(s,e,s.prev)<0||Un(s,s.next,e)<0}function Sv(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function Qm(s,e){const t=new mp(s.i,s.x,s.y),n=new mp(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function e0(s,e,t,n){const i=new mp(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function ph(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function mp(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Ev(s,e,t,n){let i=0;for(let r=e,a=t-n;r<t;r+=n)i+=(s[a]-s[r])*(s[r+1]+s[a+1]),a=r;return i}class qa{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return qa.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];t0(e),n0(n,e);let a=e.length;t.forEach(t0);for(let l=0;l<t.length;l++)i.push(a),a+=t[l].length,n0(n,t[l]);const o=cv.triangulate(n,i);for(let l=0;l<o.length;l+=3)r.push(o.slice(l,l+3));return r}}function t0(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function n0(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class gp extends Pt{constructor(e=new au([new ve(.5,.5),new ve(-.5,.5),new ve(-.5,-.5),new ve(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let o=0,l=e.length;o<l;o++){const h=e[o];a(h)}this.setAttribute("position",new Ke(i,3)),this.setAttribute("uv",new Ke(r,2)),this.computeVertexNormals();function a(o){const l=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,g=t.bevelThickness!==void 0?t.bevelThickness:.2,x=t.bevelSize!==void 0?t.bevelSize:g-.1,A=t.bevelOffset!==void 0?t.bevelOffset:0,y=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,T=t.UVGenerator!==void 0?t.UVGenerator:Av;let S,P=!1,V,F,O,q;_&&(S=_.getSpacedPoints(d),P=!0,m=!1,V=_.computeFrenetFrames(d,!1),F=new B,O=new B,q=new B),m||(y=0,g=0,x=0,A=0);const ie=o.extractPoints(h);let C=ie.shape;const k=ie.holes;if(!qa.isClockWise(C)){C=C.reverse();for(let W=0,Be=k.length;W<Be;W++){const ye=k[W];qa.isClockWise(ye)&&(k[W]=ye.reverse())}}const Se=qa.triangulateShape(C,k),Z=C;for(let W=0,Be=k.length;W<Be;W++){const ye=k[W];C=C.concat(ye)}function me(W,Be,ye){return Be||console.error("THREE.ExtrudeGeometry: vec does not exist"),W.clone().addScaledVector(Be,ye)}const le=C.length,be=Se.length;function _e(W,Be,ye){let Fe,Ae,nt;const Je=W.x-Be.x,at=W.y-Be.y,qt=ye.x-W.x,z=ye.y-W.y,I=Je*Je+at*at,he=Je*z-at*qt;if(Math.abs(he)>Number.EPSILON){const ge=Math.sqrt(I),Ie=Math.sqrt(qt*qt+z*z),Ce=Be.x-at/ge,Rt=Be.y+Je/ge,vt=ye.x-z/Ie,Ve=ye.y+qt/Ie,We=((vt-Ce)*z-(Ve-Rt)*qt)/(Je*z-at*qt);Fe=Ce+Je*We-W.x,Ae=Rt+at*We-W.y;const Ct=Fe*Fe+Ae*Ae;if(Ct<=2)return new ve(Fe,Ae);nt=Math.sqrt(Ct/2)}else{let ge=!1;Je>Number.EPSILON?qt>Number.EPSILON&&(ge=!0):Je<-Number.EPSILON?qt<-Number.EPSILON&&(ge=!0):Math.sign(at)===Math.sign(z)&&(ge=!0),ge?(Fe=-at,Ae=Je,nt=Math.sqrt(I)):(Fe=Je,Ae=at,nt=Math.sqrt(I/2))}return new ve(Fe/nt,Ae/nt)}const xe=[];for(let W=0,Be=Z.length,ye=Be-1,Fe=W+1;W<Be;W++,ye++,Fe++)ye===Be&&(ye=0),Fe===Be&&(Fe=0),xe[W]=_e(Z[W],Z[ye],Z[Fe]);const Ue=[];let Le,et=xe.concat();for(let W=0,Be=k.length;W<Be;W++){const ye=k[W];Le=[];for(let Fe=0,Ae=ye.length,nt=Ae-1,Je=Fe+1;Fe<Ae;Fe++,nt++,Je++)nt===Ae&&(nt=0),Je===Ae&&(Je=0),Le[Fe]=_e(ye[Fe],ye[nt],ye[Je]);Ue.push(Le),et=et.concat(Le)}for(let W=0;W<y;W++){const Be=W/y,ye=g*Math.cos(Be*Math.PI/2),Fe=x*Math.sin(Be*Math.PI/2)+A;for(let Ae=0,nt=Z.length;Ae<nt;Ae++){const Je=me(Z[Ae],xe[Ae],Fe);dt(Je.x,Je.y,-ye)}for(let Ae=0,nt=k.length;Ae<nt;Ae++){const Je=k[Ae];Le=Ue[Ae];for(let at=0,qt=Je.length;at<qt;at++){const z=me(Je[at],Le[at],Fe);dt(z.x,z.y,-ye)}}}const wt=x+A;for(let W=0;W<le;W++){const Be=m?me(C[W],et[W],wt):C[W];P?(O.copy(V.normals[0]).multiplyScalar(Be.x),F.copy(V.binormals[0]).multiplyScalar(Be.y),q.copy(S[0]).add(O).add(F),dt(q.x,q.y,q.z)):dt(Be.x,Be.y,0)}for(let W=1;W<=d;W++)for(let Be=0;Be<le;Be++){const ye=m?me(C[Be],et[Be],wt):C[Be];P?(O.copy(V.normals[W]).multiplyScalar(ye.x),F.copy(V.binormals[W]).multiplyScalar(ye.y),q.copy(S[W]).add(O).add(F),dt(q.x,q.y,q.z)):dt(ye.x,ye.y,p/d*W)}for(let W=y-1;W>=0;W--){const Be=W/y,ye=g*Math.cos(Be*Math.PI/2),Fe=x*Math.sin(Be*Math.PI/2)+A;for(let Ae=0,nt=Z.length;Ae<nt;Ae++){const Je=me(Z[Ae],xe[Ae],Fe);dt(Je.x,Je.y,p+ye)}for(let Ae=0,nt=k.length;Ae<nt;Ae++){const Je=k[Ae];Le=Ue[Ae];for(let at=0,qt=Je.length;at<qt;at++){const z=me(Je[at],Le[at],Fe);P?dt(z.x,z.y+S[d-1].y,S[d-1].x+ye):dt(z.x,z.y,p+ye)}}}ue(),Pe();function ue(){const W=i.length/3;if(m){let Be=0,ye=le*Be;for(let Fe=0;Fe<be;Fe++){const Ae=Se[Fe];ct(Ae[2]+ye,Ae[1]+ye,Ae[0]+ye)}Be=d+y*2,ye=le*Be;for(let Fe=0;Fe<be;Fe++){const Ae=Se[Fe];ct(Ae[0]+ye,Ae[1]+ye,Ae[2]+ye)}}else{for(let Be=0;Be<be;Be++){const ye=Se[Be];ct(ye[2],ye[1],ye[0])}for(let Be=0;Be<be;Be++){const ye=Se[Be];ct(ye[0]+le*d,ye[1]+le*d,ye[2]+le*d)}}n.addGroup(W,i.length/3-W,0)}function Pe(){const W=i.length/3;let Be=0;je(Z,Be),Be+=Z.length;for(let ye=0,Fe=k.length;ye<Fe;ye++){const Ae=k[ye];je(Ae,Be),Be+=Ae.length}n.addGroup(W,i.length/3-W,1)}function je(W,Be){let ye=W.length;for(;--ye>=0;){const Fe=ye;let Ae=ye-1;Ae<0&&(Ae=W.length-1);for(let nt=0,Je=d+y*2;nt<Je;nt++){const at=le*nt,qt=le*(nt+1),z=Be+Fe+at,I=Be+Ae+at,he=Be+Ae+qt,ge=Be+Fe+qt;rt(z,I,he,ge)}}}function dt(W,Be,ye){l.push(W),l.push(Be),l.push(ye)}function ct(W,Be,ye){Gt(W),Gt(Be),Gt(ye);const Fe=i.length/3,Ae=T.generateTopUV(n,i,Fe-3,Fe-2,Fe-1);pt(Ae[0]),pt(Ae[1]),pt(Ae[2])}function rt(W,Be,ye,Fe){Gt(W),Gt(Be),Gt(Fe),Gt(Be),Gt(ye),Gt(Fe);const Ae=i.length/3,nt=T.generateSideWallUV(n,i,Ae-6,Ae-3,Ae-2,Ae-1);pt(nt[0]),pt(nt[1]),pt(nt[3]),pt(nt[1]),pt(nt[2]),pt(nt[3])}function Gt(W){i.push(l[W*3+0]),i.push(l[W*3+1]),i.push(l[W*3+2])}function pt(W){r.push(W.x),r.push(W.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Tv(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,a=e.shapes.length;r<a;r++){const o=t[e.shapes[r]];n.push(o)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Nf[i.type]().fromJSON(i)),new gp(n,e.options)}}const Av={generateTopUV:function(s,e,t,n,i){const r=e[t*3],a=e[t*3+1],o=e[n*3],l=e[n*3+1],h=e[i*3],d=e[i*3+1];return[new ve(r,a),new ve(o,l),new ve(h,d)]},generateSideWallUV:function(s,e,t,n,i,r){const a=e[t*3],o=e[t*3+1],l=e[t*3+2],h=e[n*3],d=e[n*3+1],p=e[n*3+2],m=e[i*3],g=e[i*3+1],x=e[i*3+2],A=e[r*3],y=e[r*3+1],_=e[r*3+2];return Math.abs(o-d)<Math.abs(a-h)?[new ve(a,1-l),new ve(h,1-p),new ve(m,1-x),new ve(A,1-_)]:[new ve(o,1-l),new ve(d,1-p),new ve(g,1-x),new ve(y,1-_)]}};function Tv(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class _p extends Yc{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new _p(e.radius,e.detail)}}class Wf extends Yc{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Wf(e.radius,e.detail)}}class vp extends Pt{constructor(e=.5,t=1,n=32,i=1,r=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const o=[],l=[],h=[],d=[];let p=e;const m=(t-e)/i,g=new B,x=new ve;for(let A=0;A<=i;A++){for(let y=0;y<=n;y++){const _=r+y/n*a;g.x=p*Math.cos(_),g.y=p*Math.sin(_),l.push(g.x,g.y,g.z),h.push(0,0,1),x.x=(g.x/t+1)/2,x.y=(g.y/t+1)/2,d.push(x.x,x.y)}p+=m}for(let A=0;A<i;A++){const y=A*(n+1);for(let _=0;_<n;_++){const T=_+y,S=T,P=T+n+1,V=T+n+2,F=T+1;o.push(S,P,F),o.push(P,V,F)}}this.setIndex(o),this.setAttribute("position",new Ke(l,3)),this.setAttribute("normal",new Ke(h,3)),this.setAttribute("uv",new Ke(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vp(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class xp extends Pt{constructor(e=new au([new ve(0,.5),new ve(-.5,-.5),new ve(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],a=[];let o=0,l=0;if(Array.isArray(e)===!1)h(e);else for(let d=0;d<e.length;d++)h(e[d]),this.addGroup(o,l,d),o+=l,l=0;this.setIndex(n),this.setAttribute("position",new Ke(i,3)),this.setAttribute("normal",new Ke(r,3)),this.setAttribute("uv",new Ke(a,2));function h(d){const p=i.length/3,m=d.extractPoints(t);let g=m.shape;const x=m.holes;qa.isClockWise(g)===!1&&(g=g.reverse());for(let y=0,_=x.length;y<_;y++){const T=x[y];qa.isClockWise(T)===!0&&(x[y]=T.reverse())}const A=qa.triangulateShape(g,x);for(let y=0,_=x.length;y<_;y++){const T=x[y];g=g.concat(T)}for(let y=0,_=g.length;y<_;y++){const T=g[y];i.push(T.x,T.y,0),r.push(0,0,1),a.push(T.x,T.y)}for(let y=0,_=A.length;y<_;y++){const T=A[y],S=T[0]+p,P=T[1]+p,V=T[2]+p;n.push(S,P,V),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return wv(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const a=t[e.shapes[i]];n.push(a)}return new xp(n,e.curveSegments)}}function wv(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class Xf extends Pt{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(a+o,Math.PI);let h=0;const d=[],p=new B,m=new B,g=[],x=[],A=[],y=[];for(let _=0;_<=n;_++){const T=[],S=_/n;let P=0;_===0&&a===0?P=.5/t:_===n&&l===Math.PI&&(P=-.5/t);for(let V=0;V<=t;V++){const F=V/t;p.x=-e*Math.cos(i+F*r)*Math.sin(a+S*o),p.y=e*Math.cos(a+S*o),p.z=e*Math.sin(i+F*r)*Math.sin(a+S*o),x.push(p.x,p.y,p.z),m.copy(p).normalize(),A.push(m.x,m.y,m.z),y.push(F+P,1-S),T.push(h++)}d.push(T)}for(let _=0;_<n;_++)for(let T=0;T<t;T++){const S=d[_][T+1],P=d[_][T],V=d[_+1][T],F=d[_+1][T+1];(_!==0||a>0)&&g.push(S,P,F),(_!==n-1||l<Math.PI)&&g.push(P,V,F)}this.setIndex(g),this.setAttribute("position",new Ke(x,3)),this.setAttribute("normal",new Ke(A,3)),this.setAttribute("uv",new Ke(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xf(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class yp extends Yc{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new yp(e.radius,e.detail)}}class bp extends Pt{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],l=[],h=[],d=new B,p=new B,m=new B;for(let g=0;g<=n;g++)for(let x=0;x<=i;x++){const A=x/i*r,y=g/n*Math.PI*2;p.x=(e+t*Math.cos(y))*Math.cos(A),p.y=(e+t*Math.cos(y))*Math.sin(A),p.z=t*Math.sin(y),o.push(p.x,p.y,p.z),d.x=e*Math.cos(A),d.y=e*Math.sin(A),m.subVectors(p,d).normalize(),l.push(m.x,m.y,m.z),h.push(x/i),h.push(g/n)}for(let g=1;g<=n;g++)for(let x=1;x<=i;x++){const A=(i+1)*g+x-1,y=(i+1)*(g-1)+x-1,_=(i+1)*(g-1)+x,T=(i+1)*g+x;a.push(A,y,T),a.push(y,_,T)}this.setIndex(a),this.setAttribute("position",new Ke(o,3)),this.setAttribute("normal",new Ke(l,3)),this.setAttribute("uv",new Ke(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new bp(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Mp extends Pt{constructor(e=1,t=.4,n=64,i=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:a},n=Math.floor(n),i=Math.floor(i);const o=[],l=[],h=[],d=[],p=new B,m=new B,g=new B,x=new B,A=new B,y=new B,_=new B;for(let S=0;S<=n;++S){const P=S/n*r*Math.PI*2;T(P,r,a,e,g),T(P+.01,r,a,e,x),y.subVectors(x,g),_.addVectors(x,g),A.crossVectors(y,_),_.crossVectors(A,y),A.normalize(),_.normalize();for(let V=0;V<=i;++V){const F=V/i*Math.PI*2,O=-t*Math.cos(F),q=t*Math.sin(F);p.x=g.x+(O*_.x+q*A.x),p.y=g.y+(O*_.y+q*A.y),p.z=g.z+(O*_.z+q*A.z),l.push(p.x,p.y,p.z),m.subVectors(p,g).normalize(),h.push(m.x,m.y,m.z),d.push(S/n),d.push(V/i)}}for(let S=1;S<=n;S++)for(let P=1;P<=i;P++){const V=(i+1)*(S-1)+(P-1),F=(i+1)*S+(P-1),O=(i+1)*S+P,q=(i+1)*(S-1)+P;o.push(V,F,q),o.push(F,O,q)}this.setIndex(o),this.setAttribute("position",new Ke(l,3)),this.setAttribute("normal",new Ke(h,3)),this.setAttribute("uv",new Ke(d,2));function T(S,P,V,F,O){const q=Math.cos(S),ie=Math.sin(S),C=V/P*S,k=Math.cos(C);O.x=F*(2+k)*.5*q,O.y=F*(2+k)*ie*.5,O.z=F*Math.sin(C)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Mp(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Sp extends Pt{constructor(e=new Zm(new B(-1,-1,0),new B(-1,1,0),new B(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new B,l=new B,h=new ve;let d=new B;const p=[],m=[],g=[],x=[];A(),this.setIndex(x),this.setAttribute("position",new Ke(p,3)),this.setAttribute("normal",new Ke(m,3)),this.setAttribute("uv",new Ke(g,2));function A(){for(let S=0;S<t;S++)y(S);y(r===!1?t:0),T(),_()}function y(S){d=e.getPointAt(S/t,d);const P=a.normals[S],V=a.binormals[S];for(let F=0;F<=i;F++){const O=F/i*Math.PI*2,q=Math.sin(O),ie=-Math.cos(O);l.x=ie*P.x+q*V.x,l.y=ie*P.y+q*V.y,l.z=ie*P.z+q*V.z,l.normalize(),m.push(l.x,l.y,l.z),o.x=d.x+n*l.x,o.y=d.y+n*l.y,o.z=d.z+n*l.z,p.push(o.x,o.y,o.z)}}function _(){for(let S=1;S<=t;S++)for(let P=1;P<=i;P++){const V=(i+1)*(S-1)+(P-1),F=(i+1)*S+(P-1),O=(i+1)*S+P,q=(i+1)*(S-1)+P;x.push(V,F,q),x.push(F,O,q)}}function T(){for(let S=0;S<=t;S++)for(let P=0;P<=i;P++)h.x=S/t,h.y=P/i,g.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Sp(new Nf[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Rv extends Pt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new B,r=new B;if(e.index!==null){const a=e.attributes.position,o=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:o.count,materialIndex:0}]);for(let h=0,d=l.length;h<d;++h){const p=l[h],m=p.start,g=p.count;for(let x=m,A=m+g;x<A;x+=3)for(let y=0;y<3;y++){const _=o.getX(x+y),T=o.getX(x+(y+1)%3);i.fromBufferAttribute(a,_),r.fromBufferAttribute(a,T),i0(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const a=e.attributes.position;for(let o=0,l=a.count/3;o<l;o++)for(let h=0;h<3;h++){const d=3*o+h,p=3*o+(h+1)%3;i.fromBufferAttribute(a,d),r.fromBufferAttribute(a,p),i0(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Ke(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function i0(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var r0=Object.freeze({__proto__:null,BoxGeometry:ar,CapsuleGeometry:lp,CircleGeometry:up,ConeGeometry:hp,CylinderGeometry:hh,DodecahedronGeometry:fp,EdgesGeometry:ov,ExtrudeGeometry:gp,IcosahedronGeometry:_p,LatheGeometry:Of,OctahedronGeometry:Wf,PlaneGeometry:te,PolyhedronGeometry:Yc,RingGeometry:vp,ShapeGeometry:xp,SphereGeometry:Xf,TetrahedronGeometry:yp,TorusGeometry:bp,TorusKnotGeometry:Mp,TubeGeometry:Sp,WireframeGeometry:Rv});class Cv extends null{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new $e(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Pv extends null{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Iv extends null{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new $e(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new $e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new vn,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Lv extends null{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ve(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return en(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new $e(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new $e(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new $e(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Dv extends null{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new $e(16777215),this.specular=new $e(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new $e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new vn,this.combine=to,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Uv extends null{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new $e(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new $e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Nv extends null{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class s0 extends Ui{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new $e(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new $e(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new vn,this.combine=to,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Fv extends null{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new $e(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Ov extends null{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Jc(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function a0(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function o0(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Ep(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,a=0;a!==n;++r){const o=t[r]*e;for(let l=0;l!==e;++l)i[a++]=s[o+l]}return i}function Ap(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let a=r[n];if(a!==void 0)if(Array.isArray(a))do a=r[n],a!==void 0&&(e.push(r.time),t.push.apply(t,a)),r=s[i++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[n],a!==void 0&&(e.push(r.time),a.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do a=r[n],a!==void 0&&(e.push(r.time),t.push(a)),r=s[i++];while(r!==void 0)}function Bv(s,e,t,n,i=30){const r=s.clone();r.name=e;const a=[];for(let l=0;l<r.tracks.length;++l){const h=r.tracks[l],d=h.getValueSize(),p=[],m=[];for(let g=0;g<h.times.length;++g){const x=h.times[g]*i;if(!(x<t||x>=n)){p.push(h.times[g]);for(let A=0;A<d;++A)m.push(h.values[g*d+A])}}p.length!==0&&(h.times=Jc(p,h.times.constructor),h.values=Jc(m,h.values.constructor),a.push(h))}r.tracks=a;let o=1/0;for(let l=0;l<r.tracks.length;++l)o>r.tracks[l].times[0]&&(o=r.tracks[l].times[0]);for(let l=0;l<r.tracks.length;++l)r.tracks[l].shift(-1*o);return r.resetDuration(),r}function zv(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let a=0;a<i;++a){const o=t.tracks[a],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const h=s.tracks.find(function(_){return _.name===o.name&&_.ValueTypeName===l});if(h===void 0)continue;let d=0;const p=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let m=0;const g=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=g/3);const x=o.times.length-1;let A;if(r<=o.times[0]){const _=d,T=p-d;A=o.values.slice(_,T)}else if(r>=o.times[x]){const _=x*p+d,T=_+p-d;A=o.values.slice(_,T)}else{const _=o.createInterpolant(),T=d,S=p-d;_.evaluate(r),A=_.resultBuffer.slice(T,S)}l==="quaternion"&&new Ai().fromArray(A).normalize().conjugate().toArray(A);const y=h.times.length;for(let _=0;_<y;++_){const T=_*g+m;if(l==="quaternion")Ai.multiplyQuaternionsFlat(h.values,T,A,0,h.values,T);else{const S=g-m*2;for(let P=0;P<S;++P)h.values[T+P]-=A[P]}}}return s.blendMode=fo,s}const Gx={convertArray:Jc,isTypedArray:a0,getKeyframeOrder:o0,sortedArray:Ep,flattenJSON:Ap,subclip:Bv,makeClipAdditive:zv};class $f{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===o)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=r)){const o=t[1];e<o&&(n=2,r=o);for(let l=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0;break n}break e}for(;n<a;){const o=n+a>>>1;e<t[o]?a=o:n=o+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let a=0;a!==i;++a)t[a]=n[r+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class kv extends $f{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Nr,endingEnd:Nr}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,a=e+1,o=i[r],l=i[a];if(o===void 0)switch(this.getSettings_().endingStart){case ps:r=e,o=2*t-n;break;case Fr:r=i.length-2,o=t+i[r]-i[r+1];break;default:r=e,o=n}if(l===void 0)switch(this.getSettings_().endingEnd){case ps:a=e,l=2*n-t;break;case Fr:a=1,l=n+i[1]-i[0];break;default:a=e-1,l=t}const h=(n-t)*.5,d=this.valueSize;this._weightPrev=h/(t-o),this._weightNext=h/(l-n),this._offsetPrev=r*d,this._offsetNext=a*d}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,h=l-o,d=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,g=this._weightNext,x=(n-t)/(i-t),A=x*x,y=A*x,_=-m*y+2*m*A-m*x,T=(1+m)*y+(-1.5-2*m)*A+(-.5+m)*x+1,S=(-1-g)*y+(1.5+g)*A+.5*x,P=g*y-g*A;for(let V=0;V!==o;++V)r[V]=_*a[d+V]+T*a[h+V]+S*a[l+V]+P*a[p+V];return r}}class c0 extends $f{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,h=l-o,d=(n-t)/(i-t),p=1-d;for(let m=0;m!==o;++m)r[m]=a[h+m]*p+a[l+m]*d;return r}}class Gv extends $f{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class la{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Jc(t,this.TimeBufferType),this.values=Jc(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Jc(e.times,Array),values:Jc(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Gv(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new c0(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new kv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case ks:t=this.InterpolantFactoryMethodDiscrete;break;case ho:t=this.InterpolantFactoryMethodLinear;break;case va:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ks;case this.InterpolantFactoryMethodLinear:return ho;case this.InterpolantFactoryMethodSmooth:return va}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;a!==-1&&n[a]>t;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const o=this.getValueSize();this.times=n.slice(r,a),this.values=this.values.slice(r*o,a*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==r;o++){const l=n[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),e=!1;break}a=l}if(i!==void 0&&a0(i))for(let o=0,l=i.length;o!==l;++o){const h=i[o];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===va,r=e.length-1;let a=1;for(let o=1;o<r;++o){let l=!1;const h=e[o],d=e[o+1];if(h!==d&&(o!==1||h!==e[0]))if(i)l=!0;else{const p=o*n,m=p-n,g=p+n;for(let x=0;x!==n;++x){const A=t[p+x];if(A!==t[m+x]||A!==t[g+x]){l=!0;break}}}if(l){if(o!==a){e[a]=e[o];const p=o*n,m=a*n;for(let g=0;g!==n;++g)t[m+g]=t[p+g]}++a}}if(r>0){e[a]=e[r];for(let o=r*n,l=a*n,h=0;h!==n;++h)t[l+h]=t[o+h];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}la.prototype.TimeBufferType=Float32Array,la.prototype.ValueBufferType=Float32Array,la.prototype.DefaultInterpolation=ho;class cu extends la{}cu.prototype.ValueTypeName="bool",cu.prototype.ValueBufferType=Array,cu.prototype.DefaultInterpolation=ks,cu.prototype.InterpolantFactoryMethodLinear=void 0,cu.prototype.InterpolantFactoryMethodSmooth=void 0;class l0 extends la{}l0.prototype.ValueTypeName="color";class qf extends la{}qf.prototype.ValueTypeName="number";class Vv extends $f{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(n-t)/(i-t);let h=e*o;for(let d=h+o;h!==d;h+=4)Ai.slerpFlat(r,0,a,h-o,a,h,l);return r}}class mh extends la{InterpolantFactoryMethodLinear(e){return new Vv(this.times,this.values,this.getValueSize(),e)}}mh.prototype.ValueTypeName="quaternion",mh.prototype.DefaultInterpolation=ho,mh.prototype.InterpolantFactoryMethodSmooth=void 0;class lu extends la{}lu.prototype.ValueTypeName="string",lu.prototype.ValueBufferType=Array,lu.prototype.DefaultInterpolation=ks,lu.prototype.InterpolantFactoryMethodLinear=void 0,lu.prototype.InterpolantFactoryMethodSmooth=void 0;class Yf extends la{}Yf.prototype.ValueTypeName="vector";class Zf{constructor(e,t=-1,n,i=er){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Ei(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,o=n.length;a!==o;++a)t.push(Wv(n[a]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=n.length;r!==a;++r)t.push(la.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,a=[];for(let o=0;o<r;o++){let l=[],h=[];l.push((o+r-1)%r,o,(o+1)%r),h.push(0,1,0);const d=o0(l);l=Ep(l,1,d),h=Ep(h,1,d),!i&&l[0]===0&&(l.push(r),h.push(h[0])),a.push(new qf(".morphTargetInfluences["+t[o].name+"]",l,h).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const h=e[o],d=h.name.match(r);if(d&&d.length>1){const p=d[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const a=[];for(const o in i)a.push(this.CreateFromMorphTargetSequence(o,i[o],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,g,x,A){if(g.length!==0){const y=[],_=[];Ap(g,y,_,x),y.length!==0&&A.push(new p(m,y,_))}},i=[],r=e.name||"default",a=e.fps||30,o=e.blendMode;let l=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const g={};let x;for(x=0;x<m.length;x++)if(m[x].morphTargets)for(let A=0;A<m[x].morphTargets.length;A++)g[m[x].morphTargets[A]]=-1;for(const A in g){const y=[],_=[];for(let T=0;T!==m[x].morphTargets.length;++T){const S=m[x];y.push(S.time),_.push(S.morphTarget===A?1:0)}i.push(new qf(".morphTargetInfluence["+A+"]",y,_))}l=g.length*a}else{const g=".bones["+t[p].name+"]";n(Yf,g+".position",m,"pos",i),n(mh,g+".quaternion",m,"rot",i),n(Yf,g+".scale",m,"scl",i)}}return i.length===0?null:new this(r,l,i,o)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Hv(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return qf;case"vector":case"vector2":case"vector3":case"vector4":return Yf;case"color":return l0;case"quaternion":return mh;case"bool":case"boolean":return cu;case"string":return lu}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function Wv(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Hv(s.type);if(s.times===void 0){const t=[],n=[];Ap(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const No={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class u0{constructor(e,t,n){const i=this;let r=!1,a=0,o=0,l;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){o++,r===!1&&i.onStart!==void 0&&i.onStart(d,a,o),r=!0},this.itemEnd=function(d){a++,i.onProgress!==void 0&&i.onProgress(d,a,o),a===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return l?l(d):d},this.setURLModifier=function(d){return l=d,this},this.addHandler=function(d,p){return h.push(d,p),this},this.removeHandler=function(d){const p=h.indexOf(d);return p!==-1&&h.splice(p,2),this},this.getHandler=function(d){for(let p=0,m=h.length;p<m;p+=2){const g=h[p],x=h[p+1];if(g.global&&(g.lastIndex=0),g.test(d))return x}return null}}}const Xv=new u0;class $v{constructor(e){this.manager=e!==void 0?e:Xv,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}$v.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ya={};class qv extends null{constructor(e,t){super(e),this.response=t}}class Fo extends null{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=No.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Ya[e]!==void 0){Ya[e].push({onLoad:t,onProgress:n,onError:i});return}Ya[e]=[],Ya[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||h.body===void 0||h.body.getReader===void 0)return h;const d=Ya[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),g=m?parseInt(m):0,x=g!==0;let A=0;const y=new ReadableStream({start(_){T();function T(){p.read().then(({done:S,value:P})=>{if(S)_.close();else{A+=P.byteLength;const V=new ProgressEvent("progress",{lengthComputable:x,loaded:A,total:g});for(let F=0,O=d.length;F<O;F++){const q=d[F];q.onProgress&&q.onProgress(V)}_.enqueue(P),T()}})}}});return new Response(y)}else throw new qv(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(l){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(d=>new DOMParser().parseFromString(d,o));case"json":return h.json();default:if(o===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(o),m=p&&p[1]?p[1].toLowerCase():void 0,g=new TextDecoder(m);return h.arrayBuffer().then(x=>g.decode(x))}}}).then(h=>{No.add(e,h);const d=Ya[e];delete Ya[e];for(let p=0,m=d.length;p<m;p++){const g=d[p];g.onLoad&&g.onLoad(h)}}).catch(h=>{const d=Ya[e];if(d===void 0)throw this.manager.itemError(e),h;delete Ya[e];for(let p=0,m=d.length;p<m;p++){const g=d[p];g.onError&&g.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Vx extends null{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Fo(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Zf.parse(e[n]);t.push(i)}return t}}class Hx extends null{constructor(e){super(e)}load(e,t,n,i){const r=this,a=[],o=new Y_,l=new Fo(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(r.withCredentials);let h=0;function d(p){l.load(e[p],function(m){const g=r.parse(m,!0);a[p]={width:g.width,height:g.height,format:g.format,mipmaps:g.mipmaps},h+=1,h===6&&(g.mipmapCount===1&&(o.minFilter=mn),o.image=a,o.format=g.format,o.needsUpdate=!0,t&&t(o))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)d(p);else l.load(e,function(p){const m=r.parse(p,!0);if(m.isCubemap){const g=m.mipmaps.length/m.mipmapCount;for(let x=0;x<g;x++){a[x]={mipmaps:[]};for(let A=0;A<m.mipmapCount;A++)a[x].mipmaps.push(m.mipmaps[x*m.mipmapCount+A]),a[x].format=m.format,a[x].width=m.width,a[x].height=m.height}o.image=a}else o.image.width=m.width,o.image.height=m.height,o.mipmaps=m.mipmaps;m.mipmapCount===1&&(o.minFilter=mn),o.format=m.format,o.needsUpdate=!0,t&&t(o)},n,i);return o}}class Jf extends null{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=No.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const o=Ea("img");function l(){d(),No.add(e,this),t&&t(this),r.manager.itemEnd(e)}function h(p){d(),i&&i(p),r.manager.itemError(e),r.manager.itemEnd(e)}function d(){o.removeEventListener("load",l,!1),o.removeEventListener("error",h,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}}class Wx extends null{constructor(e){super(e)}load(e,t,n,i){const r=new Lo;r.colorSpace=Si;const a=new Jf(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function l(h){a.load(e[h],function(d){r.images[h]=d,o++,o===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let h=0;h<e.length;++h)l(h);return r}}class Xx extends null{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new $c,o=new Fo(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(e,function(l){let h;try{h=r.parse(l)}catch(d){if(i!==void 0)i(d);else{console.error(d);return}}h.image!==void 0?a.image=h.image:h.data!==void 0&&(a.image.width=h.width,a.image.height=h.height,a.image.data=h.data),a.wrapS=h.wrapS!==void 0?h.wrapS:Qn,a.wrapT=h.wrapT!==void 0?h.wrapT:Qn,a.magFilter=h.magFilter!==void 0?h.magFilter:mn,a.minFilter=h.minFilter!==void 0?h.minFilter:mn,a.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0&&(a.colorSpace=h.colorSpace),h.flipY!==void 0&&(a.flipY=h.flipY),h.format!==void 0&&(a.format=h.format),h.type!==void 0&&(a.type=h.type),h.mipmaps!==void 0&&(a.mipmaps=h.mipmaps,a.minFilter=Gi),h.mipmapCount===1&&(a.minFilter=mn),h.generateMipmaps!==void 0&&(a.generateMipmaps=h.generateMipmaps),a.needsUpdate=!0,t&&t(a,h)},n,i),a}}class $x extends null{constructor(e){super(e)}load(e,t,n,i){const r=new Hn,a=new Jf(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){r.image=o,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class Yv extends fn{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new $e(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class Zv extends null{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(fn.DEFAULT_UP),this.updateMatrix(),this.groundColor=new $e(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Tp=new st,h0=new B,f0=new B;class Jv{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ve(512,512),this.map=null,this.mapPass=null,this.matrix=new st,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Y,this._frameExtents=new ve(1,1),this._viewportCount=1,this._viewports=[new nn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;h0.setFromMatrixPosition(e.matrixWorld),t.position.copy(h0),f0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(f0),t.updateMatrixWorld(),Tp.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Tp),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Tp)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Kv extends null{constructor(){super(new Cn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=$s*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class jv extends null{constructor(e,t,n=0,i=Math.PI/3,r=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(fn.DEFAULT_UP),this.updateMatrix(),this.target=new fn,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new Kv}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const d0=new st,gh=new B,wp=new B;class Qv extends Jv{constructor(){super(new Cn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ve(4,2),this._viewportCount=6,this._viewports=[new nn(2,1,1,1),new nn(0,1,1,1),new nn(3,1,1,1),new nn(1,1,1,1),new nn(3,0,1,1),new nn(1,0,1,1)],this._cubeDirections=[new B(1,0,0),new B(-1,0,0),new B(0,0,1),new B(0,0,-1),new B(0,1,0),new B(0,-1,0)],this._cubeUps=[new B(0,1,0),new B(0,1,0),new B(0,1,0),new B(0,1,0),new B(0,0,1),new B(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),gh.setFromMatrixPosition(e.matrixWorld),n.position.copy(gh),wp.copy(n.position),wp.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(wp),n.updateMatrixWorld(),i.makeTranslation(-gh.x,-gh.y,-gh.z),d0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(d0)}}class p0 extends Yv{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Qv}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class ex extends null{constructor(){super(new f(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class tx extends null{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(fn.DEFAULT_UP),this.updateMatrix(),this.target=new fn,this.shadow=new ex}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class nx extends null{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class ix extends null{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class rx{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new B)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*r)),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],1.092548*(n*r)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*r),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],2*.429043*n*r),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class sx extends null{constructor(e=new rx,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Rp extends null{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,a=new Fo(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=Rp.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new $e().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const a=e.uniforms[r];switch(i.uniforms[r]={},a.type){case"t":i.uniforms[r].value=n(a.value);break;case"c":i.uniforms[r].value=new $e().setHex(a.value);break;case"v2":i.uniforms[r].value=new ve().fromArray(a.value);break;case"v3":i.uniforms[r].value=new B().fromArray(a.value);break;case"v4":i.uniforms[r].value=new nn().fromArray(a.value);break;case"m3":i.uniforms[r].value=new bt().fromArray(a.value);break;case"m4":i.uniforms[r].value=new st().fromArray(a.value);break;default:i.uniforms[r].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new ve().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ve().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Cv,SpriteMaterial:ym,RawShaderMaterial:Pv,ShaderMaterial:cr,PointsMaterial:Vm,MeshPhysicalMaterial:Lv,MeshStandardMaterial:Iv,MeshPhongMaterial:Dv,MeshToonMaterial:Uv,MeshNormalMaterial:Nv,MeshLambertMaterial:s0,MeshDepthMaterial:mm,MeshDistanceMaterial:gm,MeshBasicMaterial:Sr,MeshMatcapMaterial:Fv,LineDashedMaterial:Ov,LineBasicMaterial:Ar,Material:Ui};return new t[e]}}class m0{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(n){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class ax extends null{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class ox extends null{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Fo(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(g,x){if(t[x]!==void 0)return t[x];const y=g.interleavedBuffers[x],_=r(g,y.buffer),T=Gr(y.type,_),S=new xm(T,y.stride);return S.uuid=y.uuid,t[x]=S,S}function r(g,x){if(n[x]!==void 0)return n[x];const y=g.arrayBuffers[x],_=new Uint32Array(y).buffer;return n[x]=_,_}const a=e.isInstancedBufferGeometry?new ax:new Pt,o=e.data.index;if(o!==void 0){const g=Gr(o.type,o.array);a.setIndex(new xn(g,1))}const l=e.data.attributes;for(const g in l){const x=l[g];let A;if(x.isInterleavedBufferAttribute){const y=i(e.data,x.data);A=new Ql(y,x.itemSize,x.offset,x.normalized)}else{const y=Gr(x.type,x.array),_=x.isInstancedBufferAttribute?sh:xn;A=new _(y,x.itemSize,x.normalized)}x.name!==void 0&&(A.name=x.name),x.usage!==void 0&&A.setUsage(x.usage),a.setAttribute(g,A)}const h=e.data.morphAttributes;if(h)for(const g in h){const x=h[g],A=[];for(let y=0,_=x.length;y<_;y++){const T=x[y];let S;if(T.isInterleavedBufferAttribute){const P=i(e.data,T.data);S=new Ql(P,T.itemSize,T.offset,T.normalized)}else{const P=Gr(T.type,T.array);S=new xn(P,T.itemSize,T.normalized)}T.name!==void 0&&(S.name=T.name),A.push(S)}a.morphAttributes[g]=A}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let g=0,x=p.length;g!==x;++g){const A=p[g];a.addGroup(A.start,A.count,A.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const g=new B;m.center!==void 0&&g.fromArray(m.center),a.boundingSphere=new ni(g,m.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class qx extends null{constructor(e){super(e)}load(e,t,n,i){const r=this,a=this.path===""?m0.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const o=new Fo(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){let h=null;try{h=JSON.parse(l)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const d=h.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(h,t)},n,i)}loadAsync(e,t){return Bo(this,null,function*(){const n=this,i=this.path===""?m0.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new Fo(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const a=yield r.loadAsync(e,t),o=JSON.parse(a),l=o.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return yield n.parseAsync(o)})}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(h)}),o=this.parseTextures(e.textures,a),l=this.parseMaterials(e.materials,o),h=this.parseObject(e.object,r,l,o,n),d=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,d),t!==void 0){let p=!1;for(const m in a)if(a[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}parseAsync(e){return Bo(this,null,function*(){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=yield this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,r),o=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,i,o,a,t),h=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,h),l})}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new au().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,a=e.length;r<a;r++){const o=new Qd().fromJSON(e[r],i);n[o.uuid]=o}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new ox;for(let r=0,a=e.length;r<a;r++){let o;const l=e[r];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":o=i.parse(l);break;default:l.type in r0?o=r0[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}o.uuid=l.uuid,l.name!==void 0&&(o.name=l.name),l.userData!==void 0&&(o.userData=l.userData),n[l.uuid]=o}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new Rp;r.setTextures(t);for(let a=0,o=e.length;a<o;a++){const l=e[a];n[l.uuid]===void 0&&(n[l.uuid]=r.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=Zf.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function a(l){return n.manager.itemStart(l),r.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function o(l){if(typeof l=="string"){const h=l,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return a(d)}else return l.data?{data:Gr(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new u0(t);r=new Jf(l),r.setCrossOrigin(this.crossOrigin);for(let h=0,d=e.length;h<d;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const g=[];for(let x=0,A=m.length;x<A;x++){const y=m[x],_=o(y);_!==null&&(_ instanceof HTMLImageElement?g.push(_):g.push(new $c(_.data,_.width,_.height)))}i[p.uuid]=new Zs(g)}else{const g=o(p.url);i[p.uuid]=new Zs(g)}}}return i}parseImagesAsync(e){return Bo(this,null,function*(){const t=this,n={};let i;function r(a){return Bo(this,null,function*(){if(typeof a=="string"){const o=a,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(o)?o:t.resourcePath+o;return yield i.loadAsync(l)}else return a.data?{data:Gr(a.type,a.data),width:a.width,height:a.height}:null})}if(e!==void 0&&e.length>0){i=new Jf(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,o=e.length;a<o;a++){const l=e[a],h=l.url;if(Array.isArray(h)){const d=[];for(let p=0,m=h.length;p<m;p++){const g=h[p],x=yield r(g);x!==null&&(x instanceof HTMLImageElement?d.push(x):d.push(new $c(x.data,x.width,x.height)))}n[l.uuid]=new Zs(d)}else{const d=yield r(l.url);n[l.uuid]=new Zs(d)}}}return n})}parseTextures(e,t){function n(r,a){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),a[r])}const i={};if(e!==void 0)for(let r=0,a=e.length;r<a;r++){const o=e[r];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);const l=t[o.image],h=l.data;let d;Array.isArray(h)?(d=new Lo,h.length===6&&(d.needsUpdate=!0)):(h&&h.data?d=new $c:d=new Hn,h&&(d.needsUpdate=!0)),d.source=l,d.uuid=o.uuid,o.name!==void 0&&(d.name=o.name),o.mapping!==void 0&&(d.mapping=n(o.mapping,cx)),o.channel!==void 0&&(d.channel=o.channel),o.offset!==void 0&&d.offset.fromArray(o.offset),o.repeat!==void 0&&d.repeat.fromArray(o.repeat),o.center!==void 0&&d.center.fromArray(o.center),o.rotation!==void 0&&(d.rotation=o.rotation),o.wrap!==void 0&&(d.wrapS=n(o.wrap[0],g0),d.wrapT=n(o.wrap[1],g0)),o.format!==void 0&&(d.format=o.format),o.internalFormat!==void 0&&(d.internalFormat=o.internalFormat),o.type!==void 0&&(d.type=o.type),o.colorSpace!==void 0&&(d.colorSpace=o.colorSpace),o.minFilter!==void 0&&(d.minFilter=n(o.minFilter,_0)),o.magFilter!==void 0&&(d.magFilter=n(o.magFilter,_0)),o.anisotropy!==void 0&&(d.anisotropy=o.anisotropy),o.flipY!==void 0&&(d.flipY=o.flipY),o.generateMipmaps!==void 0&&(d.generateMipmaps=o.generateMipmaps),o.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(d.unpackAlignment=o.unpackAlignment),o.compareFunction!==void 0&&(d.compareFunction=o.compareFunction),o.userData!==void 0&&(d.userData=o.userData),i[o.uuid]=d}return i}parseObject(e,t,n,i,r){let a;function o(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function l(m){if(m!==void 0){if(Array.isArray(m)){const g=[];for(let x=0,A=m.length;x<A;x++){const y=m[x];n[y]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",y),g.push(n[y])}return g}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let d,p;switch(e.type){case"Scene":a=new vm,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new $e(e.background):a.background=h(e.background)),e.environment!==void 0&&(a.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new Zd(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new Yd(e.fog.color,e.fog.density)),e.fog.name!==""&&(a.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(a.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&a.backgroundRotation.fromArray(e.backgroundRotation),e.environmentRotation!==void 0&&a.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":a=new Cn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new f(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new nx(e.color,e.intensity);break;case"DirectionalLight":a=new tx(e.color,e.intensity);break;case"PointLight":a=new p0(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new ix(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new jv(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new Zv(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new sx().fromJSON(e);break;case"SkinnedMesh":d=o(e.geometry),p=l(e.material),a=new F_(d,p),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":d=o(e.geometry),p=l(e.material),a=new Wn(d,p);break;case"InstancedMesh":d=o(e.geometry),p=l(e.material);const m=e.count,g=e.instanceMatrix,x=e.instanceColor;a=new z_(d,p,m),a.instanceMatrix=new sh(new Float32Array(g.array),16),x!==void 0&&(a.instanceColor=new sh(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":d=o(e.geometry),p=l(e.material),a=new X_(e.maxGeometryCount,e.maxVertexCount,e.maxIndexCount,p),a.geometry=d,a.perObjectFrustumCulled=e.perObjectFrustumCulled,a.sortObjects=e.sortObjects,a._drawRanges=e.drawRanges,a._reservedRanges=e.reservedRanges,a._visibility=e.visibility,a._active=e.active,a._bounds=e.bounds.map(A=>{const y=new ci;y.min.fromArray(A.boxMin),y.max.fromArray(A.boxMax);const _=new ni;return _.radius=A.sphereRadius,_.center.fromArray(A.sphereCenter),{boxInitialized:A.boxInitialized,box:y,sphereInitialized:A.sphereInitialized,sphere:_}}),a._maxGeometryCount=e.maxGeometryCount,a._maxVertexCount=e.maxVertexCount,a._maxIndexCount=e.maxIndexCount,a._geometryInitialized=e.geometryInitialized,a._geometryCount=e.geometryCount,a._matricesTexture=h(e.matricesTexture.uuid);break;case"LOD":a=new U_;break;case"Line":a=new If(o(e.geometry),l(e.material));break;case"LineLoop":a=new $_(o(e.geometry),l(e.material));break;case"LineSegments":a=new Gm(o(e.geometry),l(e.material));break;case"PointCloud":case"Points":a=new q_(o(e.geometry),l(e.material));break;case"Sprite":a=new D_(l(e.material));break;case"Group":a=new th;break;case"Bone":a=new Pm;break;default:a=new fn}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.up!==void 0&&a.up.fromArray(e.up),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let g=0;g<m.length;g++)a.add(this.parseObject(m[g],t,n,i,r))}if(e.animations!==void 0){const m=e.animations;for(let g=0;g<m.length;g++){const x=m[g];a.animations.push(r[x])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const m=e.levels;for(let g=0;g<m.length;g++){const x=m[g],A=a.getObjectByProperty("uuid",x.object);A!==void 0&&a.addLevel(A,x.distance,x.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const cx={UVMapping:Us,CubeReflectionMapping:ki,CubeRefractionMapping:hr,EquirectangularReflectionMapping:Ns,EquirectangularRefractionMapping:ss,CubeUVReflectionMapping:Fs},g0={RepeatWrapping:no,ClampToEdgeWrapping:Qn,MirroredRepeatWrapping:da},_0={NearestFilter:En,NearestMipmapNearestFilter:Xo,NearestMipmapLinearFilter:Os,LinearFilter:mn,LinearMipmapNearestFilter:Lr,LinearMipmapLinearFilter:Gi};class Yx extends null{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=No.get(e);if(a!==void 0){if(r.manager.itemStart(e),a.then){a.then(h=>{t&&t(h),r.manager.itemEnd(e)}).catch(h=>{i&&i(h)});return}return setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a}const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader;const l=fetch(e,o).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(h){return No.add(e,h),t&&t(h),r.manager.itemEnd(e),h}).catch(function(h){i&&i(h),No.remove(e),r.manager.itemError(e),r.manager.itemEnd(e)});No.add(e,l),r.manager.itemStart(e)}}let Kf;class v0{static getContext(){return Kf===void 0&&(Kf=new(window.AudioContext||window.webkitAudioContext)),Kf}static setContext(e){Kf=e}}class Zx extends null{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Fo(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){try{const h=l.slice(0);v0.getContext().decodeAudioData(h,function(p){t(p)}).catch(o)}catch(h){o(h)}},n,i);function o(l){i?i(l):console.error(l),r.manager.itemError(e)}}}const x0=new st,y0=new st,Kc=new st;class Jx{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Cn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Cn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Kc.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,a=t.near*Math.tan(oi*t.fov*.5)/t.zoom;let o,l;y0.elements[12]=-i,x0.elements[12]=i,o=-a*t.aspect+r,l=a*t.aspect+r,Kc.elements[0]=2*t.near/(l-o),Kc.elements[8]=(l+o)/(l-o),this.cameraL.projectionMatrix.copy(Kc),o=-a*t.aspect-r,l=a*t.aspect-r,Kc.elements[0]=2*t.near/(l-o),Kc.elements[8]=(l+o)/(l-o),this.cameraR.projectionMatrix.copy(Kc)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(y0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(x0)}}class lx{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=b0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=b0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function b0(){return(typeof performance=="undefined"?Date:performance).now()}const jc=new B,M0=new Ai,ux=new B,Qc=new B;class Kx extends null{constructor(){super(),this.type="AudioListener",this.context=v0.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new lx}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(jc,M0,ux),Qc.set(0,0,-1).applyQuaternion(M0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(jc.x,i),t.positionY.linearRampToValueAtTime(jc.y,i),t.positionZ.linearRampToValueAtTime(jc.z,i),t.forwardX.linearRampToValueAtTime(Qc.x,i),t.forwardY.linearRampToValueAtTime(Qc.y,i),t.forwardZ.linearRampToValueAtTime(Qc.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(jc.x,jc.y,jc.z),t.setOrientation(Qc.x,Qc.y,Qc.z,n.x,n.y,n.z)}}class jx extends null{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const el=new B,S0=new Ai,hx=new B,tl=new B;class Qx extends null{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(el,S0,hx),tl.set(0,0,1).applyQuaternion(S0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(el.x,n),t.positionY.linearRampToValueAtTime(el.y,n),t.positionZ.linearRampToValueAtTime(el.z,n),t.orientationX.linearRampToValueAtTime(tl.x,n),t.orientationY.linearRampToValueAtTime(tl.y,n),t.orientationZ.linearRampToValueAtTime(tl.z,n)}else t.setPosition(el.x,el.y,el.z),t.setOrientation(tl.x,tl.y,tl.z)}}class ey{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class fx{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,a;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==i;++o)n[r+o]=n[o];a=t}else{a+=t;const o=t/a;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-r,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,h=t+t;l!==h;++l)if(n[l]!==n[l+t]){o.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,a=i;r!==a;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let a=0;a!==r;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){Ai.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const a=this._workIndex*r;Ai.multiplyQuaternionsFlat(e,a,e,t,e,n),Ai.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,r){const a=1-i;for(let o=0;o!==r;++o){const l=t+o;e[l]=e[l]*a+e[n+o]*i}}_lerpAdditive(e,t,n,i,r){for(let a=0;a!==r;++a){const o=t+a;e[o]=e[o]+e[n+a]*i}}}const Cp="\\[\\]\\.:\\/",dx=new RegExp("["+Cp+"]","g"),Pp="[^"+Cp+"]",px="[^"+Cp.replace("\\.","")+"]",mx=/((?:WC+[\/:])*)/.source.replace("WC",Pp),gx=/(WCOD+)?/.source.replace("WCOD",px),_x=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Pp),vx=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Pp),xx=new RegExp("^"+mx+gx+_x+vx+"$"),yx=["material","materials","bones","map"];class bx{constructor(e,t,n){const i=n||cn.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class cn{constructor(e,t,n){this.path=t,this.parsedPath=n||cn.parseTrackName(t),this.node=cn.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new cn.Composite(e,t,n):new cn(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(dx,"")}static parseTrackName(e){const t=xx.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);yx.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let a=0;a<r.length;a++){const o=r[a];if(o.name===t||o.uuid===t)return o;const l=n(o.children);if(l)return l}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=cn.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===h){h=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const a=e[i];if(a===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}cn.Composite=bx,cn.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},cn.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},cn.prototype.GetterByBindingType=[cn.prototype._getValue_direct,cn.prototype._getValue_array,cn.prototype._getValue_arrayElement,cn.prototype._getValue_toArray],cn.prototype.SetterByBindingTypeAndVersioning=[[cn.prototype._setValue_direct,cn.prototype._setValue_direct_setNeedsUpdate,cn.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[cn.prototype._setValue_array,cn.prototype._setValue_array_setNeedsUpdate,cn.prototype._setValue_array_setMatrixWorldNeedsUpdate],[cn.prototype._setValue_arrayElement,cn.prototype._setValue_arrayElement_setNeedsUpdate,cn.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[cn.prototype._setValue_fromArray,cn.prototype._setValue_fromArray_setNeedsUpdate,cn.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class ty{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Ei(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,a=r.length;let o,l=e.length,h=this.nCachedObjects_;for(let d=0,p=arguments.length;d!==p;++d){const m=arguments[d],g=m.uuid;let x=t[g];if(x===void 0){x=l++,t[g]=x,e.push(m);for(let A=0,y=a;A!==y;++A)r[A].push(new cn(m,n[A],i[A]))}else if(x<h){o=e[x];const A=--h,y=e[A];t[y.uuid]=x,e[x]=y,t[g]=A,e[A]=m;for(let _=0,T=a;_!==T;++_){const S=r[_],P=S[A];let V=S[x];S[x]=P,V===void 0&&(V=new cn(m,n[_],i[_])),S[A]=V}}else e[x]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const l=arguments[a],h=l.uuid,d=t[h];if(d!==void 0&&d>=r){const p=r++,m=e[p];t[m.uuid]=d,e[d]=m,t[h]=p,e[p]=l;for(let g=0,x=i;g!==x;++g){const A=n[g],y=A[p],_=A[d];A[d]=y,A[p]=_}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,a=e.length;for(let o=0,l=arguments.length;o!==l;++o){const h=arguments[o],d=h.uuid,p=t[d];if(p!==void 0)if(delete t[d],p<r){const m=--r,g=e[m],x=--a,A=e[x];t[g.uuid]=p,e[p]=g,t[A.uuid]=m,e[m]=A,e.pop();for(let y=0,_=i;y!==_;++y){const T=n[y],S=T[m],P=T[x];T[p]=S,T[m]=P,T.pop()}}else{const m=--a,g=e[m];m>0&&(t[g.uuid]=p),e[p]=g,e.pop();for(let x=0,A=i;x!==A;++x){const y=n[x];y[p]=y[m],y.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const a=this._paths,o=this._parsedPaths,l=this._objects,h=l.length,d=this.nCachedObjects_,p=new Array(h);i=r.length,n[e]=i,a.push(e),o.push(t),r.push(p);for(let m=d,g=l.length;m!==g;++m){const x=l[m];p[m]=new cn(x,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,a=this._bindings,o=a.length-1,l=a[o],h=e[o];t[h]=n,a[n]=l,a.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}}class Mx{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,a=r.length,o=new Array(a),l={endingStart:Nr,endingEnd:Nr};for(let h=0;h!==a;++h){const d=r[h].createInterpolant(null);o[h]=d,d.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Lu,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,a=r/i,o=i/r;e.warp(1,a,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,h=o.sampleValues;return l[0]=r,l[1]=r+n,h[0]=e/a,h[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const l=(e-r)*n;l<0||n===0?t=0:(this._startTime=null,t=n*l)}t*=this._updateTimeScale(e);const a=this._updateTime(t),o=this._updateWeight(e);if(o>0){const l=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case fo:for(let d=0,p=l.length;d!==p;++d)l[d].evaluate(a),h[d].accumulateAdditive(o);break;case er:default:for(let d=0,p=l.length;d!==p;++d)l[d].evaluate(a),h[d].accumulate(i,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const a=n===Du;if(e===0)return r===-1?i:a&&(r&1)===1?t-i:i;if(n===Iu){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const o=Math.floor(i/t);i-=t*o,r+=Math.abs(o);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const h=e<0;this._setEndings(h,!h,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=i;if(a&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=ps,i.endingEnd=ps):(e?i.endingStart=this.zeroSlopeAtStart?ps:Nr:i.endingStart=Fr,t?i.endingEnd=this.zeroSlopeAtEnd?ps:Nr:i.endingEnd=Fr)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=r,l[0]=t,o[1]=r+e,l[1]=n,this}}const Sx=new Float32Array(1);class ny extends null{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,o=e._interpolants,l=n.uuid,h=this._bindingsByRootAndName;let d=h[l];d===void 0&&(d={},h[l]=d);for(let p=0;p!==r;++p){const m=i[p],g=m.name;let x=d[g];if(x!==void 0)++x.referenceCount,a[p]=x;else{if(x=a[p],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,l,g));continue}const A=t&&t._propertyBindings[p].binding.parsedPath;x=new fx(cn.create(n,g,A),m.ValueTypeName,m.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,l,g),a[p]=x}o[p].resultBuffer=x.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let a=r[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{const o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,a=this._actionsByClip,o=a[r],l=o.knownActions,h=l[l.length-1],d=e._byClipCacheIndex;h._byClipCacheIndex=d,l[d]=h,l.pop(),e._byClipCacheIndex=null;const p=o.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],l.length===0&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,o=a[i],l=t[t.length-1],h=e._cacheIndex;l._cacheIndex=h,t[h]=l,t.pop(),delete o[r],Object.keys(o).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new c0(new Float32Array(2),new Float32Array(2),1,Sx),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let a=typeof e=="string"?Zf.findByName(i,e):e;const o=a!==null?a.uuid:e,l=this._actionsByClip[o];let h=null;if(n===void 0&&(a!==null?n=a.blendMode:n=er),l!==void 0){const p=l.actionByRoot[r];if(p!==void 0&&p.blendMode===n)return p;h=l.knownActions[0],a===null&&(a=h._clip)}if(a===null)return null;const d=new Mx(this,a,t,n);return this._bindAction(d,h),this._addInactiveAction(d,o,r),d}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?Zf.findByName(n,e):e,a=r?r.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,r,a);const o=this._bindings,l=this._nActiveBindings;for(let h=0;h!==l;++h)o[h].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const a=r.knownActions;for(let o=0,l=a.length;o!==l;++o){const h=a[o];this._deactivateAction(h);const d=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=d,t[d]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const o=n[a].actionByRoot,l=o[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const a in r){const o=r[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class E0{constructor(e){this.value=e}clone(){return new E0(this.value.clone===void 0?this.value:this.value.clone())}}let Ex=0;class iy extends null{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:Ex++}),this.name="",this.usage=cc,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const r=Array.isArray(t[n])?t[n]:[t[n]];for(let a=0;a<r.length;a++)this.uniforms.push(r[a].clone())}return this}clone(){return new this.constructor().copy(this)}}class ry extends null{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class sy{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const A0=new st;class ay{constructor(e,t,n=0,i=1/0){this.ray=new Ca(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Ss,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return A0.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(A0),this}intersectObject(e,t=!0,n=[]){return Ip(e,this,n,t),n.sort(T0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)Ip(e[i],this,n,t);return n.sort(T0),n}}function T0(s,e){return s.distance-e.distance}function Ip(s,e,t,n){if(s.layers.test(e.layers)&&s.raycast(e,t),n===!0){const i=s.children;for(let r=0,a=i.length;r<a;r++)Ip(i[r],e,t,!0)}}class oy{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(en(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class cy{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const w0=new ve;class ly{constructor(e=new ve(1/0,1/0),t=new ve(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=w0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,w0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const R0=new B,jf=new B;class uy{constructor(e=new B,t=new B){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){R0.subVectors(e,this.start),jf.subVectors(this.end,this.start);const n=jf.dot(jf);let r=jf.dot(R0)/n;return t&&(r=en(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const C0=new B;class hy extends null{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new Pt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,l=32;a<l;a++,o++){const h=a/l*Math.PI*2,d=o/l*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new Ke(i,3));const r=new Ar({fog:!1,toneMapped:!1});this.cone=new Gm(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),C0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(C0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Oo=new B,Qf=new st,Lp=new st;class fy extends null{constructor(e){const t=P0(e),n=new Pt,i=[],r=[],a=new $e(0,0,1),o=new $e(0,1,0);for(let h=0;h<t.length;h++){const d=t[h];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(o.r,o.g,o.b))}n.setAttribute("position",new Ke(i,3)),n.setAttribute("color",new Ke(r,3));const l=new Ar({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Lp.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){const o=t[r];o.parent&&o.parent.isBone&&(Qf.multiplyMatrices(Lp,o.matrixWorld),Oo.setFromMatrixPosition(Qf),i.setXYZ(a,Oo.x,Oo.y,Oo.z),Qf.multiplyMatrices(Lp,o.parent.matrixWorld),Oo.setFromMatrixPosition(Qf),i.setXYZ(a+1,Oo.x,Oo.y,Oo.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function P0(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push.apply(e,P0(s.children[t]));return e}class dy extends null{constructor(e,t,n){const i=new Xf(t,4,2),r=new Sr({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Ax=new B,I0=new $e,L0=new $e;class py extends null{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Wf(t);i.rotateY(Math.PI*.5),this.material=new Sr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),a=new Float32Array(r.count*3);i.setAttribute("color",new xn(a,3)),this.add(new Wn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");I0.copy(this.light.color),L0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?I0:L0;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(Ax.setFromMatrixPosition(this.light.matrixWorld).negate())}}class my extends null{constructor(e=10,t=10,n=4473924,i=8947848){n=new $e(n),i=new $e(i);const r=t/2,a=e/t,o=e/2,l=[],h=[];for(let m=0,g=0,x=-o;m<=t;m++,x+=a){l.push(-o,0,x,o,0,x),l.push(x,0,-o,x,0,o);const A=m===r?n:i;A.toArray(h,g),g+=3,A.toArray(h,g),g+=3,A.toArray(h,g),g+=3,A.toArray(h,g),g+=3}const d=new Pt;d.setAttribute("position",new Ke(l,3)),d.setAttribute("color",new Ke(h,3));const p=new Ar({vertexColors:!0,toneMapped:!1});super(d,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class gy extends null{constructor(e=10,t=16,n=8,i=64,r=4473924,a=8947848){r=new $e(r),a=new $e(a);const o=[],l=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),g=Math.sin(m)*e,x=Math.cos(m)*e;o.push(0,0,0),o.push(g,0,x);const A=p&1?r:a;l.push(A.r,A.g,A.b),l.push(A.r,A.g,A.b)}for(let p=0;p<n;p++){const m=p&1?r:a,g=e-e/n*p;for(let x=0;x<i;x++){let A=x/i*(Math.PI*2),y=Math.sin(A)*g,_=Math.cos(A)*g;o.push(y,0,_),l.push(m.r,m.g,m.b),A=(x+1)/i*(Math.PI*2),y=Math.sin(A)*g,_=Math.cos(A)*g,o.push(y,0,_),l.push(m.r,m.g,m.b)}}const h=new Pt;h.setAttribute("position",new Ke(o,3)),h.setAttribute("color",new Ke(l,3));const d=new Ar({vertexColors:!0,toneMapped:!1});super(h,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const D0=new B,ed=new B,U0=new B;class _y extends null{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new Pt;i.setAttribute("position",new Ke([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Ar({fog:!1,toneMapped:!1});this.lightPlane=new If(i,r),this.add(this.lightPlane),i=new Pt,i.setAttribute("position",new Ke([0,0,0,0,0,1],3)),this.targetLine=new If(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),D0.setFromMatrixPosition(this.light.matrixWorld),ed.setFromMatrixPosition(this.light.target.matrixWorld),U0.subVectors(ed,D0),this.lightPlane.lookAt(ed),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(ed),this.targetLine.scale.z=U0.length()}}const td=new B,Vn=new Io;class vy extends null{constructor(e){const t=new Pt,n=new Ar({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],a={};o("n1","n2"),o("n2","n4"),o("n4","n3"),o("n3","n1"),o("f1","f2"),o("f2","f4"),o("f4","f3"),o("f3","f1"),o("n1","f1"),o("n2","f2"),o("n3","f3"),o("n4","f4"),o("p","n1"),o("p","n2"),o("p","n3"),o("p","n4"),o("u1","u2"),o("u2","u3"),o("u3","u1"),o("c","t"),o("p","c"),o("cn1","cn2"),o("cn3","cn4"),o("cf1","cf2"),o("cf3","cf4");function o(x,A){l(x),l(A)}function l(x){i.push(0,0,0),r.push(0,0,0),a[x]===void 0&&(a[x]=[]),a[x].push(i.length/3-1)}t.setAttribute("position",new Ke(i,3)),t.setAttribute("color",new Ke(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const h=new $e(16755200),d=new $e(16711680),p=new $e(43775),m=new $e(16777215),g=new $e(3355443);this.setColors(h,d,p,m,g)}setColors(e,t,n,i,r){const o=this.geometry.getAttribute("color");o.setXYZ(0,e.r,e.g,e.b),o.setXYZ(1,e.r,e.g,e.b),o.setXYZ(2,e.r,e.g,e.b),o.setXYZ(3,e.r,e.g,e.b),o.setXYZ(4,e.r,e.g,e.b),o.setXYZ(5,e.r,e.g,e.b),o.setXYZ(6,e.r,e.g,e.b),o.setXYZ(7,e.r,e.g,e.b),o.setXYZ(8,e.r,e.g,e.b),o.setXYZ(9,e.r,e.g,e.b),o.setXYZ(10,e.r,e.g,e.b),o.setXYZ(11,e.r,e.g,e.b),o.setXYZ(12,e.r,e.g,e.b),o.setXYZ(13,e.r,e.g,e.b),o.setXYZ(14,e.r,e.g,e.b),o.setXYZ(15,e.r,e.g,e.b),o.setXYZ(16,e.r,e.g,e.b),o.setXYZ(17,e.r,e.g,e.b),o.setXYZ(18,e.r,e.g,e.b),o.setXYZ(19,e.r,e.g,e.b),o.setXYZ(20,e.r,e.g,e.b),o.setXYZ(21,e.r,e.g,e.b),o.setXYZ(22,e.r,e.g,e.b),o.setXYZ(23,e.r,e.g,e.b),o.setXYZ(24,t.r,t.g,t.b),o.setXYZ(25,t.r,t.g,t.b),o.setXYZ(26,t.r,t.g,t.b),o.setXYZ(27,t.r,t.g,t.b),o.setXYZ(28,t.r,t.g,t.b),o.setXYZ(29,t.r,t.g,t.b),o.setXYZ(30,t.r,t.g,t.b),o.setXYZ(31,t.r,t.g,t.b),o.setXYZ(32,n.r,n.g,n.b),o.setXYZ(33,n.r,n.g,n.b),o.setXYZ(34,n.r,n.g,n.b),o.setXYZ(35,n.r,n.g,n.b),o.setXYZ(36,n.r,n.g,n.b),o.setXYZ(37,n.r,n.g,n.b),o.setXYZ(38,i.r,i.g,i.b),o.setXYZ(39,i.r,i.g,i.b),o.setXYZ(40,r.r,r.g,r.b),o.setXYZ(41,r.r,r.g,r.b),o.setXYZ(42,r.r,r.g,r.b),o.setXYZ(43,r.r,r.g,r.b),o.setXYZ(44,r.r,r.g,r.b),o.setXYZ(45,r.r,r.g,r.b),o.setXYZ(46,r.r,r.g,r.b),o.setXYZ(47,r.r,r.g,r.b),o.setXYZ(48,r.r,r.g,r.b),o.setXYZ(49,r.r,r.g,r.b),o.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Vn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),qn("c",t,e,Vn,0,0,-1),qn("t",t,e,Vn,0,0,1),qn("n1",t,e,Vn,-n,-i,-1),qn("n2",t,e,Vn,n,-i,-1),qn("n3",t,e,Vn,-n,i,-1),qn("n4",t,e,Vn,n,i,-1),qn("f1",t,e,Vn,-n,-i,1),qn("f2",t,e,Vn,n,-i,1),qn("f3",t,e,Vn,-n,i,1),qn("f4",t,e,Vn,n,i,1),qn("u1",t,e,Vn,n*.7,i*1.1,-1),qn("u2",t,e,Vn,-n*.7,i*1.1,-1),qn("u3",t,e,Vn,0,i*2,-1),qn("cf1",t,e,Vn,-n,0,1),qn("cf2",t,e,Vn,n,0,1),qn("cf3",t,e,Vn,0,-i,1),qn("cf4",t,e,Vn,0,i,1),qn("cn1",t,e,Vn,-n,0,-1),qn("cn2",t,e,Vn,n,0,-1),qn("cn3",t,e,Vn,0,-i,-1),qn("cn4",t,e,Vn,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function qn(s,e,t,n,i,r,a){td.set(i,r,a).unproject(n);const o=e[s];if(o!==void 0){const l=t.getAttribute("position");for(let h=0,d=o.length;h<d;h++)l.setXYZ(o[h],td.x,td.y,td.z)}}const nd=new ci;class xy extends null{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new Pt;r.setIndex(new xn(n,1)),r.setAttribute("position",new xn(i,3)),super(r,new Ar({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&nd.setFromObject(this.object),nd.isEmpty())return;const t=nd.min,n=nd.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class yy extends null{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new Pt;r.setIndex(new xn(n,1)),r.setAttribute("position",new Ke(i,3)),super(r,new Ar({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class by extends null{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new Pt;a.setAttribute("position",new Ke(r,3)),a.computeBoundingSphere(),super(a,new Ar({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const o=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new Pt;l.setAttribute("position",new Ke(o,3)),l.computeBoundingSphere(),this.add(new Wn(l,new Sr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const N0=new B;let id,Dp;class My extends null{constructor(e=new B(0,0,1),t=new B(0,0,0),n=1,i=16776960,r=n*.2,a=r*.2){super(),this.type="ArrowHelper",id===void 0&&(id=new Pt,id.setAttribute("position",new Ke([0,0,0,0,1,0],3)),Dp=new hh(0,.5,1,5,1),Dp.translate(0,-.5,0)),this.position.copy(t),this.line=new If(id,new Ar({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Wn(Dp,new Sr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{N0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(N0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Sy extends null{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Pt;i.setAttribute("position",new Ke(t,3)),i.setAttribute("color",new Ke(n,3));const r=new Ar({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new $e,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Ey{constructor(){this.type="ShapePath",this.color=new $e,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Ff,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,a){return this.currentPath.bezierCurveTo(e,t,n,i,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const T=[];for(let S=0,P=_.length;S<P;S++){const V=_[S],F=new au;F.curves=V.curves,T.push(F)}return T}function n(_,T){const S=T.length;let P=!1;for(let V=S-1,F=0;F<S;V=F++){let O=T[V],q=T[F],ie=q.x-O.x,C=q.y-O.y;if(Math.abs(C)>Number.EPSILON){if(C<0&&(O=T[F],ie=-ie,q=T[V],C=-C),_.y<O.y||_.y>q.y)continue;if(_.y===O.y){if(_.x===O.x)return!0}else{const k=C*(_.x-O.x)-ie*(_.y-O.y);if(k===0)return!0;if(k<0)continue;P=!P}}else{if(_.y!==O.y)continue;if(q.x<=_.x&&_.x<=O.x||O.x<=_.x&&_.x<=q.x)return!0}}return P}const i=qa.isClockWise,r=this.subPaths;if(r.length===0)return[];let a,o,l;const h=[];if(r.length===1)return o=r[0],l=new au,l.curves=o.curves,h.push(l),h;let d=!i(r[0].getPoints());d=e?!d:d;const p=[],m=[];let g=[],x=0,A;m[x]=void 0,g[x]=[];for(let _=0,T=r.length;_<T;_++)o=r[_],A=o.getPoints(),a=i(A),a=e?!a:a,a?(!d&&m[x]&&x++,m[x]={s:new au,p:A},m[x].s.curves=o.curves,d&&x++,g[x]=[]):g[x].push({h:o,p:A[0]});if(!m[0])return t(r);if(m.length>1){let _=!1,T=0;for(let S=0,P=m.length;S<P;S++)p[S]=[];for(let S=0,P=m.length;S<P;S++){const V=g[S];for(let F=0;F<V.length;F++){const O=V[F];let q=!0;for(let ie=0;ie<m.length;ie++)n(O.p,m[ie].p)&&(S!==ie&&T++,q?(q=!1,p[ie].push(O)):_=!0);q&&p[S].push(O)}}T>0&&_===!1&&(g=p)}let y;for(let _=0,T=m.length;_<T;_++){l=m[_].s,h.push(l),y=g[_];for(let S=0,P=y.length;S<P;S++)l.holes.push(y[S].h)}return h}}class Ay extends null{constructor(e=1,t=1,n=1,i={}){console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'),super(e,t,X0(uu({},i),{count:n})),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Sn}})),typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Sn)}}]);
}());